
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000438  00800100  00002506  0000259a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002506  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000035  00800538  00800538  000029d2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000029d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002a30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00002a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026ca  00000000  00000000  00002b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad9  00000000  00000000  00005252  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001029  00000000  00000000  00005d2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004f4  00000000  00000000  00006d54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f8  00000000  00000000  00007248  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d16  00000000  00000000  00007840  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00009556  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 33 03 	jmp	0x666	; 0x666 <__ctors_end>
       4:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
       8:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
       c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      10:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      14:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      18:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      1c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      20:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      24:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      28:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      2c:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__vector_11>
      30:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      34:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      38:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      3c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      40:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      44:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      48:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      4c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      50:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      54:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      58:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      5c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      60:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      64:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <font>:
     16a:	00 00 00 00 00 7c da f2 da 7c 7c d6 f2 d6 7c 38     .....|...||...|8
     17a:	7c 3e 7c 38 18 3c 7e 3c 18 38 ea be ea 38 38 7a     |>|8.<~<.8...88z
     18a:	fe 7a 38 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .z8..<.........$
     19a:	18 00 ff e7 db e7 ff 0c 12 5c 60 70 64 94 9e 94     .........\`pd...
     1aa:	64 02 fe a0 a0 e0 02 fe a0 a4 fc 5a 3c e7 3c 5a     d..........Z<.<Z
     1ba:	fe 7c 38 38 10 10 38 38 7c fe 28 44 fe 44 28 fa     .|88..88|.(D.D(.
     1ca:	fa 00 fa fa 60 90 fe 80 fe 00 66 91 a9 56 06 06     ....`.....f..V..
     1da:	06 06 06 29 45 ff 45 29 10 20 7e 20 10 08 04 7e     ...)E.E). ~ ...~
     1ea:	04 08 10 10 54 38 10 10 38 54 10 10 78 08 08 08     ....T8..8T..x...
     1fa:	08 30 78 30 78 30 0c 1c 7c 1c 0c 60 70 7c 70 60     .0x0x0..|..`p|p`
     20a:	00 00 00 00 00 00 00 fa 00 00 00 e0 00 e0 00 28     ...............(
     21a:	fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26 46 6c 92     .(.($T.TH...&Fl.
     22a:	6a 04 0a 00 10 e0 c0 00 00 38 44 82 00 00 82 44     j........8D....D
     23a:	38 00 54 38 fe 38 54 10 10 7c 10 10 00 01 0e 0c     8.T8.8T..|......
     24a:	00 10 10 10 10 10 00 00 06 06 00 04 08 10 20 40     .............. @
     25a:	7c 8a 92 a2 7c 00 42 fe 02 00 4e 92 92 92 62 84     |...|.B...N...b.
     26a:	82 92 b2 cc 18 28 48 fe 08 e4 a2 a2 a2 9c 3c 52     .....(H.......<R
     27a:	92 92 8c 82 84 88 90 e0 6c 92 92 92 6c 62 92 92     ........l...lb..
     28a:	94 78 00 00 28 00 00 00 02 2c 00 00 00 10 28 44     .x..(....,....(D
     29a:	82 28 28 28 28 28 00 82 44 28 10 40 80 9a 90 60     .(((((..D(.@...`
     2aa:	7c 82 ba 9a 72 3e 48 88 48 3e fe 92 92 92 6c 7c     |...r>H.H>....l|
     2ba:	82 82 82 44 fe 82 82 82 7c fe 92 92 92 82 fe 90     ...D....|.......
     2ca:	90 90 80 7c 82 82 8a ce fe 10 10 10 fe 00 82 fe     ...|............
     2da:	82 00 04 02 82 fc 80 fe 10 28 44 82 fe 02 02 02     .........(D.....
     2ea:	02 fe 40 38 40 fe fe 20 10 08 fe 7c 82 82 82 7c     ..@8@.. ...|...|
     2fa:	fe 90 90 90 60 7c 82 8a 84 7a fe 90 98 94 62 64     ....`|...z....bd
     30a:	92 92 92 4c c0 80 fe 80 c0 fc 02 02 02 fc f8 04     ...L............
     31a:	02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6 c0 20 1e     .........(.(.. .
     32a:	20 c0 86 9a 92 b2 c2 00 fe 82 82 82 40 20 10 08      ...........@ ..
     33a:	04 00 82 82 82 fe 20 40 80 40 20 02 02 02 02 02     ...... @.@ .....
     34a:	00 c0 e0 10 00 04 2a 2a 1e 02 fe 14 22 22 1c 1c     ......**....""..
     35a:	22 22 22 14 1c 22 22 14 fe 1c 2a 2a 2a 18 00 10     """..""...***...
     36a:	7e 90 40 18 25 25 39 1e fe 10 20 20 1e 00 22 be     ~.@.%%9...  ..".
     37a:	02 00 04 02 02 bc 00 fe 08 14 22 00 00 82 fe 02     ..........".....
     38a:	00 3e 20 1e 20 1e 3e 10 20 20 1e 1c 22 22 22 1c     .> . .>.  ..""".
     39a:	3f 18 24 24 18 18 24 24 18 3f 3e 10 20 20 10 12     ?.$$..$$.?>.  ..
     3aa:	2a 2a 2a 24 20 20 fc 22 24 3c 02 02 04 3e 38 04     ***$  ."$<...>8.
     3ba:	02 04 38 3c 02 0c 02 3c 22 14 08 14 22 32 09 09     ..8<...<"..."2..
     3ca:	09 3e 22 26 2a 32 22 00 10 6c 82 00 00 00 ee 00     .>"&*2"..l......
     3da:	00 00 82 6c 10 00 40 80 40 20 40 3c 64 c4 64 3c     ...l..@.@ @<d.d<
     3ea:	78 85 85 86 48 5c 02 02 04 5e 1c 2a 2a aa 9a 84     x...H\...^.**...
     3fa:	aa aa 9e 82 84 2a 2a 1e 82 84 aa 2a 1e 02 04 2a     .....**....*...*
     40a:	aa 9e 02 30 78 4a 4e 48 9c aa aa aa 9a 9c 2a 2a     ...0xJNH......**
     41a:	2a 9a 9c aa 2a 2a 1a 00 00 a2 3e 82 00 40 a2 be     *...**....>..@..
     42a:	42 00 80 a2 3e 02 0f 94 24 94 0f 0f 14 a4 14 0f     B...>...$.......
     43a:	3e 2a aa a2 00 04 2a 2a 3e 2a 3e 50 90 fe 92 4c     >*....**>*>P...L
     44a:	92 92 92 4c 4c 12 12 12 4c 4c 52 12 12 0c 5c 82     ...LL...LLR...\.
     45a:	82 84 5e 5c 42 02 04 1e 00 b9 05 05 be 9c 22 22     ..^\B.........""
     46a:	22 9c bc 02 02 02 bc 3c 24 ff 24 24 12 7e 92 c2     "......<$.$$.~..
     47a:	66 d4 f4 3f f4 d4 ff 90 94 6f 04 03 11 7e 90 c0     f..?.....o...~..
     48a:	04 2a 2a 9e 82 00 00 22 be 82 0c 12 12 52 4c 1c     .**....".....RL.
     49a:	02 02 44 5e 00 5e 50 50 4e be b0 98 8c be 64 94     ..D^.^PPN.....d.
     4aa:	94 f4 14 64 94 94 94 64 0c 12 b2 02 04 1c 10 10     ...d...d........
     4ba:	10 10 10 10 10 10 1c f4 08 13 35 5d f4 08 14 2c     ..........5]...,
     4ca:	5f 00 00 de 00 00 10 28 54 28 44 44 28 54 28 10     _......(T(DD(T(.
     4da:	55 00 aa 00 55 55 aa 55 aa 55 aa 55 aa 55 aa 00     U...UU.U.U.U.U..
     4ea:	00 00 ff 00 08 08 08 ff 00 28 28 28 ff 00 08 08     .........(((....
     4fa:	ff 00 ff 08 08 0f 08 0f 28 28 28 3f 00 28 28 ef     ........(((?.((.
     50a:	00 ff 00 00 ff 00 ff 28 28 2f 20 3f 28 28 e8 08     .......((/ ?((..
     51a:	f8 08 08 f8 08 f8 28 28 28 f8 00 08 08 08 0f 00     ......(((.......
     52a:	00 00 00 f8 08 08 08 08 f8 08 08 08 08 0f 08 00     ................
     53a:	00 00 ff 08 08 08 08 08 08 08 08 08 ff 08 00 00     ................
     54a:	00 ff 28 00 00 ff 00 ff 00 00 f8 08 e8 00 00 3f     ..(............?
     55a:	20 2f 28 28 e8 08 e8 28 28 2f 20 2f 00 00 ff 00      /((...((/ /....
     56a:	ef 28 28 28 28 28 28 28 ef 00 ef 28 28 28 e8 28     .(((((((...(((.(
     57a:	08 08 f8 08 f8 28 28 28 2f 28 08 08 0f 08 0f 00     .....(((/(......
     58a:	00 f8 08 f8 00 00 00 f8 28 00 00 00 3f 28 00 00     ........(...?(..
     59a:	0f 08 0f 08 08 ff 08 ff 28 28 28 ff 28 08 08 08     ........(((.(...
     5aa:	f8 00 00 00 00 0f 08 ff ff ff ff ff 0f 0f 0f 0f     ................
     5ba:	0f ff ff ff 00 00 00 00 00 ff ff f0 f0 f0 f0 f0     ................
     5ca:	1c 22 22 1c 22 3e 54 54 7c 28 7e 40 40 60 60 40     ."".">TT|(~@@``@
     5da:	7e 40 7e 40 c6 aa 92 82 c6 1c 22 22 3c 20 02 7e     ~@~@......""< .~
     5ea:	04 78 04 60 40 7e 40 40 99 a5 e7 a5 99 38 54 92     .x.`@~@@.....8T.
     5fa:	54 38 32 4e 80 4e 32 0c 52 b2 b2 0c 0c 12 1e 12     T82N.N2.R.......
     60a:	0c 3d 46 5a 62 bc 7c 92 92 92 00 7e 80 80 80 7e     .=FZb.|....~...~
     61a:	54 54 54 54 54 22 22 fa 22 22 02 8a 52 22 02 02     TTTTT"".""..R"..
     62a:	22 52 8a 02 00 00 ff 80 c0 07 01 ff 00 00 10 10     "R..............
     63a:	d6 d6 10 6c 48 6c 24 6c 60 f0 90 f0 60 00 00 18     ...lHl$l`...`...
     64a:	18 00 00 00 08 08 00 0c 02 ff 80 80 00 f8 80 80     ................
     65a:	78 00 98 b8 e8 48 00 3c 3c 3c 3c 00                 x....H.<<<<.

00000666 <__ctors_end>:
     666:	11 24       	eor	r1, r1
     668:	1f be       	out	0x3f, r1	; 63
     66a:	cf ef       	ldi	r28, 0xFF	; 255
     66c:	d8 e0       	ldi	r29, 0x08	; 8
     66e:	de bf       	out	0x3e, r29	; 62
     670:	cd bf       	out	0x3d, r28	; 61

00000672 <__do_copy_data>:
     672:	15 e0       	ldi	r17, 0x05	; 5
     674:	a0 e0       	ldi	r26, 0x00	; 0
     676:	b1 e0       	ldi	r27, 0x01	; 1
     678:	e6 e0       	ldi	r30, 0x06	; 6
     67a:	f5 e2       	ldi	r31, 0x25	; 37
     67c:	02 c0       	rjmp	.+4      	; 0x682 <__do_copy_data+0x10>
     67e:	05 90       	lpm	r0, Z+
     680:	0d 92       	st	X+, r0
     682:	a8 33       	cpi	r26, 0x38	; 56
     684:	b1 07       	cpc	r27, r17
     686:	d9 f7       	brne	.-10     	; 0x67e <__do_copy_data+0xc>

00000688 <__do_clear_bss>:
     688:	25 e0       	ldi	r18, 0x05	; 5
     68a:	a8 e3       	ldi	r26, 0x38	; 56
     68c:	b5 e0       	ldi	r27, 0x05	; 5
     68e:	01 c0       	rjmp	.+2      	; 0x692 <.do_clear_bss_start>

00000690 <.do_clear_bss_loop>:
     690:	1d 92       	st	X+, r1

00000692 <.do_clear_bss_start>:
     692:	ad 36       	cpi	r26, 0x6D	; 109
     694:	b2 07       	cpc	r27, r18
     696:	e1 f7       	brne	.-8      	; 0x690 <.do_clear_bss_loop>
     698:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <main>
     69c:	0c 94 81 12 	jmp	0x2502	; 0x2502 <_exit>

000006a0 <__bad_interrupt>:
     6a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a4 <lcd_command>:
		setpixel(buff, x0 - y, y0 - x, color);
		setpixel(buff, x0 + y, y0 - x, color);
		setpixel(buff, x0 + x, y0 - y, color);
		
	}
}
     6a4:	5c 98       	cbi	0x0b, 4	; 11
     6a6:	27 e0       	ldi	r18, 0x07	; 7
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	5d 98       	cbi	0x0b, 5	; 11
     6ae:	ac 01       	movw	r20, r24
     6b0:	02 2e       	mov	r0, r18
     6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <lcd_command+0x14>
     6b4:	55 95       	asr	r21
     6b6:	47 95       	ror	r20
     6b8:	0a 94       	dec	r0
     6ba:	e2 f7       	brpl	.-8      	; 0x6b4 <lcd_command+0x10>
     6bc:	40 ff       	sbrs	r20, 0
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <lcd_command+0x20>
     6c0:	5e 9a       	sbi	0x0b, 6	; 11
     6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <lcd_command+0x22>
     6c4:	5e 98       	cbi	0x0b, 6	; 11
     6c6:	5d 9a       	sbi	0x0b, 5	; 11
     6c8:	21 50       	subi	r18, 0x01	; 1
     6ca:	31 09       	sbc	r19, r1
     6cc:	78 f7       	brcc	.-34     	; 0x6ac <lcd_command+0x8>
     6ce:	08 95       	ret

000006d0 <lcd_init>:
     6d0:	56 9a       	sbi	0x0a, 6	; 10
     6d2:	55 9a       	sbi	0x0a, 5	; 10
     6d4:	54 9a       	sbi	0x0a, 4	; 10
     6d6:	53 9a       	sbi	0x0a, 3	; 10
     6d8:	52 9a       	sbi	0x0a, 2	; 10
     6da:	5a 98       	cbi	0x0b, 2	; 11
     6dc:	5b 98       	cbi	0x0b, 3	; 11
     6de:	2f e9       	ldi	r18, 0x9F	; 159
     6e0:	86 e8       	ldi	r24, 0x86	; 134
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	21 50       	subi	r18, 0x01	; 1
     6e6:	80 40       	sbci	r24, 0x00	; 0
     6e8:	90 40       	sbci	r25, 0x00	; 0
     6ea:	e1 f7       	brne	.-8      	; 0x6e4 <lcd_init+0x14>
     6ec:	00 c0       	rjmp	.+0      	; 0x6ee <lcd_init+0x1e>
     6ee:	00 00       	nop
     6f0:	5b 9a       	sbi	0x0b, 3	; 11
     6f2:	83 ea       	ldi	r24, 0xA3	; 163
     6f4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     6f8:	80 ea       	ldi	r24, 0xA0	; 160
     6fa:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     6fe:	80 ec       	ldi	r24, 0xC0	; 192
     700:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     704:	80 e4       	ldi	r24, 0x40	; 64
     706:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     70a:	8c e2       	ldi	r24, 0x2C	; 44
     70c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     710:	83 ed       	ldi	r24, 0xD3	; 211
     712:	90 e3       	ldi	r25, 0x30	; 48
     714:	01 97       	sbiw	r24, 0x01	; 1
     716:	f1 f7       	brne	.-4      	; 0x714 <lcd_init+0x44>
     718:	00 c0       	rjmp	.+0      	; 0x71a <lcd_init+0x4a>
     71a:	00 00       	nop
     71c:	8e e2       	ldi	r24, 0x2E	; 46
     71e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     722:	83 ed       	ldi	r24, 0xD3	; 211
     724:	90 e3       	ldi	r25, 0x30	; 48
     726:	01 97       	sbiw	r24, 0x01	; 1
     728:	f1 f7       	brne	.-4      	; 0x726 <lcd_init+0x56>
     72a:	00 c0       	rjmp	.+0      	; 0x72c <lcd_init+0x5c>
     72c:	00 00       	nop
     72e:	8f e2       	ldi	r24, 0x2F	; 47
     730:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     734:	83 ec       	ldi	r24, 0xC3	; 195
     736:	99 e0       	ldi	r25, 0x09	; 9
     738:	01 97       	sbiw	r24, 0x01	; 1
     73a:	f1 f7       	brne	.-4      	; 0x738 <lcd_init+0x68>
     73c:	00 c0       	rjmp	.+0      	; 0x73e <lcd_init+0x6e>
     73e:	00 00       	nop
     740:	86 e2       	ldi	r24, 0x26	; 38
     742:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     746:	08 95       	ret

00000748 <lcd_data>:
     748:	5c 9a       	sbi	0x0b, 4	; 11
     74a:	27 e0       	ldi	r18, 0x07	; 7
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	5d 98       	cbi	0x0b, 5	; 11
     752:	ac 01       	movw	r20, r24
     754:	02 2e       	mov	r0, r18
     756:	02 c0       	rjmp	.+4      	; 0x75c <lcd_data+0x14>
     758:	55 95       	asr	r21
     75a:	47 95       	ror	r20
     75c:	0a 94       	dec	r0
     75e:	e2 f7       	brpl	.-8      	; 0x758 <lcd_data+0x10>
     760:	40 ff       	sbrs	r20, 0
     762:	02 c0       	rjmp	.+4      	; 0x768 <lcd_data+0x20>
     764:	5e 9a       	sbi	0x0b, 6	; 11
     766:	01 c0       	rjmp	.+2      	; 0x76a <lcd_data+0x22>
     768:	5e 98       	cbi	0x0b, 6	; 11
     76a:	5d 9a       	sbi	0x0b, 5	; 11
     76c:	21 50       	subi	r18, 0x01	; 1
     76e:	31 09       	sbc	r19, r1
     770:	78 f7       	brcc	.-34     	; 0x750 <lcd_data+0x8>
     772:	08 95       	ret

00000774 <lcd_set_brightness>:
     774:	cf 93       	push	r28
     776:	c8 2f       	mov	r28, r24
     778:	81 e8       	ldi	r24, 0x81	; 129
     77a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     77e:	8c 2f       	mov	r24, r28
     780:	8f 73       	andi	r24, 0x3F	; 63
     782:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     786:	cf 91       	pop	r28
     788:	08 95       	ret

0000078a <write_buffer>:
     78a:	cf 92       	push	r12
     78c:	df 92       	push	r13
     78e:	ef 92       	push	r14
     790:	ff 92       	push	r15
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	0f 2e       	mov	r0, r31
     79c:	f4 e0       	ldi	r31, 0x04	; 4
     79e:	ef 2e       	mov	r14, r31
     7a0:	f5 e0       	ldi	r31, 0x05	; 5
     7a2:	ff 2e       	mov	r15, r31
     7a4:	f0 2d       	mov	r31, r0
     7a6:	ec 01       	movw	r28, r24
     7a8:	0f 2e       	mov	r0, r31
     7aa:	f4 e1       	ldi	r31, 0x14	; 20
     7ac:	cf 2e       	mov	r12, r31
     7ae:	f5 e0       	ldi	r31, 0x05	; 5
     7b0:	df 2e       	mov	r13, r31
     7b2:	f0 2d       	mov	r31, r0
     7b4:	f7 01       	movw	r30, r14
     7b6:	80 81       	ld	r24, Z
     7b8:	f2 e0       	ldi	r31, 0x02	; 2
     7ba:	ef 0e       	add	r14, r31
     7bc:	f1 1c       	adc	r15, r1
     7be:	80 6b       	ori	r24, 0xB0	; 176
     7c0:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7ca:	80 e1       	ldi	r24, 0x10	; 16
     7cc:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7d0:	80 ee       	ldi	r24, 0xE0	; 224
     7d2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7d6:	8f ef       	ldi	r24, 0xFF	; 255
     7d8:	0e 94 a4 03 	call	0x748	; 0x748 <lcd_data>
     7dc:	8e 01       	movw	r16, r28
     7de:	00 58       	subi	r16, 0x80	; 128
     7e0:	1f 4f       	sbci	r17, 0xFF	; 255
     7e2:	89 91       	ld	r24, Y+
     7e4:	0e 94 a4 03 	call	0x748	; 0x748 <lcd_data>
     7e8:	c0 17       	cp	r28, r16
     7ea:	d1 07       	cpc	r29, r17
     7ec:	d1 f7       	brne	.-12     	; 0x7e2 <write_buffer+0x58>
     7ee:	e8 01       	movw	r28, r16
     7f0:	ce 14       	cp	r12, r14
     7f2:	df 04       	cpc	r13, r15
     7f4:	f9 f6       	brne	.-66     	; 0x7b4 <write_buffer+0x2a>
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	df 90       	pop	r13
     804:	cf 90       	pop	r12
     806:	08 95       	ret

00000808 <clear_buffer>:
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	34 e0       	ldi	r19, 0x04	; 4
     80c:	fc 01       	movw	r30, r24
     80e:	a9 01       	movw	r20, r18
     810:	11 92       	st	Z+, r1
     812:	41 50       	subi	r20, 0x01	; 1
     814:	50 40       	sbci	r21, 0x00	; 0
     816:	e1 f7       	brne	.-8      	; 0x810 <clear_buffer+0x8>
     818:	08 95       	ret

0000081a <drawchar>:
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	f9 01       	movw	r30, r18
     81e:	ee 0f       	add	r30, r30
     820:	ff 1f       	adc	r31, r31
     822:	ee 0f       	add	r30, r30
     824:	ff 1f       	adc	r31, r31
     826:	e2 0f       	add	r30, r18
     828:	f3 1f       	adc	r31, r19
     82a:	e6 59       	subi	r30, 0x96	; 150
     82c:	fe 4f       	sbci	r31, 0xFE	; 254
     82e:	55 e0       	ldi	r21, 0x05	; 5
     830:	56 0f       	add	r21, r22
     832:	9c 01       	movw	r18, r24
     834:	70 e8       	ldi	r23, 0x80	; 128
     836:	47 9f       	mul	r20, r23
     838:	20 0d       	add	r18, r0
     83a:	31 1d       	adc	r19, r1
     83c:	11 24       	eor	r1, r1
     83e:	94 91       	lpm	r25, Z
     840:	d9 01       	movw	r26, r18
     842:	a6 0f       	add	r26, r22
     844:	b1 1d       	adc	r27, r1
     846:	9c 93       	st	X, r25
     848:	6f 5f       	subi	r22, 0xFF	; 255
     84a:	31 96       	adiw	r30, 0x01	; 1
     84c:	65 13       	cpse	r22, r21
     84e:	f7 cf       	rjmp	.-18     	; 0x83e <drawchar+0x24>
     850:	08 95       	ret

00000852 <setpixel>:
     852:	66 23       	and	r22, r22
     854:	f4 f0       	brlt	.+60     	; 0x892 <setpixel+0x40>
     856:	48 30       	cpi	r20, 0x08	; 8
     858:	e0 f4       	brcc	.+56     	; 0x892 <setpixel+0x40>
     85a:	24 2f       	mov	r18, r20
     85c:	26 95       	lsr	r18
     85e:	26 95       	lsr	r18
     860:	26 95       	lsr	r18
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	30 e8       	ldi	r19, 0x80	; 128
     866:	23 9f       	mul	r18, r19
     868:	60 0d       	add	r22, r0
     86a:	71 1d       	adc	r23, r1
     86c:	11 24       	eor	r1, r1
     86e:	fc 01       	movw	r30, r24
     870:	e6 0f       	add	r30, r22
     872:	f7 1f       	adc	r31, r23
     874:	50 e0       	ldi	r21, 0x00	; 0
     876:	40 95       	com	r20
     878:	50 95       	com	r21
     87a:	47 70       	andi	r20, 0x07	; 7
     87c:	55 27       	eor	r21, r21
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	02 c0       	rjmp	.+4      	; 0x888 <setpixel+0x36>
     884:	88 0f       	add	r24, r24
     886:	99 1f       	adc	r25, r25
     888:	4a 95       	dec	r20
     88a:	e2 f7       	brpl	.-8      	; 0x884 <setpixel+0x32>
     88c:	90 81       	ld	r25, Z
     88e:	89 2b       	or	r24, r25
     890:	80 83       	st	Z, r24
     892:	08 95       	ret

00000894 <clearpixel>:
     894:	24 2f       	mov	r18, r20
     896:	26 95       	lsr	r18
     898:	26 95       	lsr	r18
     89a:	26 95       	lsr	r18
     89c:	e6 2f       	mov	r30, r22
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	30 e8       	ldi	r19, 0x80	; 128
     8a2:	23 9f       	mul	r18, r19
     8a4:	e0 0d       	add	r30, r0
     8a6:	f1 1d       	adc	r31, r1
     8a8:	11 24       	eor	r1, r1
     8aa:	e8 0f       	add	r30, r24
     8ac:	f9 1f       	adc	r31, r25
     8ae:	50 e0       	ldi	r21, 0x00	; 0
     8b0:	40 95       	com	r20
     8b2:	50 95       	com	r21
     8b4:	47 70       	andi	r20, 0x07	; 7
     8b6:	55 27       	eor	r21, r21
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <clearpixel+0x2e>
     8be:	88 0f       	add	r24, r24
     8c0:	99 1f       	adc	r25, r25
     8c2:	4a 95       	dec	r20
     8c4:	e2 f7       	brpl	.-8      	; 0x8be <clearpixel+0x2a>
     8c6:	80 95       	com	r24
     8c8:	90 81       	ld	r25, Z
     8ca:	89 23       	and	r24, r25
     8cc:	80 83       	st	Z, r24
     8ce:	08 95       	ret

000008d0 <drawstring>:
     8d0:	ef 92       	push	r14
     8d2:	ff 92       	push	r15
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	7c 01       	movw	r14, r24
     8de:	c6 2f       	mov	r28, r22
     8e0:	d4 2f       	mov	r29, r20
     8e2:	89 01       	movw	r16, r18
     8e4:	10 c0       	rjmp	.+32     	; 0x906 <__stack+0x7>
     8e6:	4d 2f       	mov	r20, r29
     8e8:	6c 2f       	mov	r22, r28
     8ea:	c7 01       	movw	r24, r14
     8ec:	0e 94 0d 04 	call	0x81a	; 0x81a <drawchar>
     8f0:	ca 5f       	subi	r28, 0xFA	; 250
     8f2:	8c 2f       	mov	r24, r28
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	06 96       	adiw	r24, 0x06	; 6
     8f8:	80 38       	cpi	r24, 0x80	; 128
     8fa:	91 05       	cpc	r25, r1
     8fc:	14 f0       	brlt	.+4      	; 0x902 <__stack+0x3>
     8fe:	df 5f       	subi	r29, 0xFF	; 255
     900:	c0 e0       	ldi	r28, 0x00	; 0
     902:	d8 30       	cpi	r29, 0x08	; 8
     904:	28 f4       	brcc	.+10     	; 0x910 <__stack+0x11>
     906:	f8 01       	movw	r30, r16
     908:	21 91       	ld	r18, Z+
     90a:	8f 01       	movw	r16, r30
     90c:	21 11       	cpse	r18, r1
     90e:	eb cf       	rjmp	.-42     	; 0x8e6 <drawstring+0x16>
     910:	df 91       	pop	r29
     912:	cf 91       	pop	r28
     914:	1f 91       	pop	r17
     916:	0f 91       	pop	r16
     918:	ff 90       	pop	r15
     91a:	ef 90       	pop	r14
     91c:	08 95       	ret

0000091e <drawline>:
     91e:	7f 92       	push	r7
     920:	8f 92       	push	r8
     922:	9f 92       	push	r9
     924:	af 92       	push	r10
     926:	bf 92       	push	r11
     928:	cf 92       	push	r12
     92a:	df 92       	push	r13
     92c:	ef 92       	push	r14
     92e:	ff 92       	push	r15
     930:	0f 93       	push	r16
     932:	1f 93       	push	r17
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	5c 01       	movw	r10, r24
     93a:	80 2f       	mov	r24, r16
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	84 1b       	sub	r24, r20
     940:	91 09       	sbc	r25, r1
     942:	6c 01       	movw	r12, r24
     944:	22 f4       	brpl	.+8      	; 0x94e <drawline+0x30>
     946:	cc 24       	eor	r12, r12
     948:	dd 24       	eor	r13, r13
     94a:	c8 1a       	sub	r12, r24
     94c:	d9 0a       	sbc	r13, r25
     94e:	82 2f       	mov	r24, r18
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	86 1b       	sub	r24, r22
     954:	91 09       	sbc	r25, r1
     956:	4c 01       	movw	r8, r24
     958:	22 f4       	brpl	.+8      	; 0x962 <drawline+0x44>
     95a:	88 24       	eor	r8, r8
     95c:	99 24       	eor	r9, r9
     95e:	88 1a       	sub	r8, r24
     960:	99 0a       	sbc	r9, r25
     962:	8c 14       	cp	r8, r12
     964:	9d 04       	cpc	r9, r13
     966:	34 f4       	brge	.+12     	; 0x974 <drawline+0x56>
     968:	82 2f       	mov	r24, r18
     96a:	20 2f       	mov	r18, r16
     96c:	08 2f       	mov	r16, r24
     96e:	86 2f       	mov	r24, r22
     970:	64 2f       	mov	r22, r20
     972:	48 2f       	mov	r20, r24
     974:	26 17       	cp	r18, r22
     976:	30 f4       	brcc	.+12     	; 0x984 <drawline+0x66>
     978:	84 2f       	mov	r24, r20
     97a:	40 2f       	mov	r20, r16
     97c:	08 2f       	mov	r16, r24
     97e:	86 2f       	mov	r24, r22
     980:	62 2f       	mov	r22, r18
     982:	28 2f       	mov	r18, r24
     984:	82 2f       	mov	r24, r18
     986:	86 1b       	sub	r24, r22
     988:	04 1b       	sub	r16, r20
     98a:	70 2e       	mov	r7, r16
     98c:	77 0c       	add	r7, r7
     98e:	17 2d       	mov	r17, r7
     990:	18 1b       	sub	r17, r24
     992:	c6 2f       	mov	r28, r22
     994:	d4 2f       	mov	r29, r20
     996:	e2 2e       	mov	r14, r18
     998:	f1 2c       	mov	r15, r1
     99a:	9f ef       	ldi	r25, 0xFF	; 255
     99c:	e9 1a       	sub	r14, r25
     99e:	f9 0a       	sbc	r15, r25
     9a0:	06 2e       	mov	r0, r22
     9a2:	00 0c       	add	r0, r0
     9a4:	77 0b       	sbc	r23, r23
     9a6:	6e 15       	cp	r22, r14
     9a8:	7f 05       	cpc	r23, r15
     9aa:	81 f1       	breq	.+96     	; 0xa0c <drawline+0xee>
     9ac:	08 1b       	sub	r16, r24
     9ae:	00 0f       	add	r16, r16
     9b0:	11 23       	and	r17, r17
     9b2:	94 f4       	brge	.+36     	; 0x9d8 <drawline+0xba>
     9b4:	17 0d       	add	r17, r7
     9b6:	8c 14       	cp	r8, r12
     9b8:	9d 04       	cpc	r9, r13
     9ba:	3c f4       	brge	.+14     	; 0x9ca <drawline+0xac>
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	4c 2f       	mov	r20, r28
     9c0:	6d 2f       	mov	r22, r29
     9c2:	c5 01       	movw	r24, r10
     9c4:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     9c8:	19 c0       	rjmp	.+50     	; 0x9fc <drawline+0xde>
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	4d 2f       	mov	r20, r29
     9ce:	6c 2f       	mov	r22, r28
     9d0:	c5 01       	movw	r24, r10
     9d2:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     9d6:	12 c0       	rjmp	.+36     	; 0x9fc <drawline+0xde>
     9d8:	10 0f       	add	r17, r16
     9da:	df 5f       	subi	r29, 0xFF	; 255
     9dc:	8c 14       	cp	r8, r12
     9de:	9d 04       	cpc	r9, r13
     9e0:	3c f4       	brge	.+14     	; 0x9f0 <drawline+0xd2>
     9e2:	20 e0       	ldi	r18, 0x00	; 0
     9e4:	4c 2f       	mov	r20, r28
     9e6:	6d 2f       	mov	r22, r29
     9e8:	c5 01       	movw	r24, r10
     9ea:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     9ee:	06 c0       	rjmp	.+12     	; 0x9fc <drawline+0xde>
     9f0:	20 e0       	ldi	r18, 0x00	; 0
     9f2:	4d 2f       	mov	r20, r29
     9f4:	6c 2f       	mov	r22, r28
     9f6:	c5 01       	movw	r24, r10
     9f8:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     9fc:	cf 5f       	subi	r28, 0xFF	; 255
     9fe:	8c 2f       	mov	r24, r28
     a00:	0c 2e       	mov	r0, r28
     a02:	00 0c       	add	r0, r0
     a04:	99 0b       	sbc	r25, r25
     a06:	8e 15       	cp	r24, r14
     a08:	9f 05       	cpc	r25, r15
     a0a:	91 f6       	brne	.-92     	; 0x9b0 <drawline+0x92>
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	1f 91       	pop	r17
     a12:	0f 91       	pop	r16
     a14:	ff 90       	pop	r15
     a16:	ef 90       	pop	r14
     a18:	df 90       	pop	r13
     a1a:	cf 90       	pop	r12
     a1c:	bf 90       	pop	r11
     a1e:	af 90       	pop	r10
     a20:	9f 90       	pop	r9
     a22:	8f 90       	pop	r8
     a24:	7f 90       	pop	r7
     a26:	08 95       	ret

00000a28 <fillrect>:
     a28:	8f 92       	push	r8
     a2a:	9f 92       	push	r9
     a2c:	af 92       	push	r10
     a2e:	bf 92       	push	r11
     a30:	cf 92       	push	r12
     a32:	df 92       	push	r13
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	6c 01       	movw	r12, r24
     a42:	d6 2f       	mov	r29, r22
     a44:	f4 2e       	mov	r15, r20
     a46:	86 2f       	mov	r24, r22
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	4c 01       	movw	r8, r24
     a4c:	82 0e       	add	r8, r18
     a4e:	91 1c       	adc	r9, r1
     a50:	88 15       	cp	r24, r8
     a52:	99 05       	cpc	r25, r9
     a54:	ac f0       	brlt	.+42     	; 0xa80 <fillrect+0x58>
     a56:	1e c0       	rjmp	.+60     	; 0xa94 <fillrect+0x6c>
     a58:	cf 2d       	mov	r28, r15
     a5a:	2e 2d       	mov	r18, r14
     a5c:	4c 2f       	mov	r20, r28
     a5e:	6d 2f       	mov	r22, r29
     a60:	c6 01       	movw	r24, r12
     a62:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     a66:	cf 5f       	subi	r28, 0xFF	; 255
     a68:	8c 2f       	mov	r24, r28
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	80 17       	cp	r24, r16
     a6e:	91 07       	cpc	r25, r17
     a70:	a4 f3       	brlt	.-24     	; 0xa5a <fillrect+0x32>
     a72:	df 5f       	subi	r29, 0xFF	; 255
     a74:	8d 2f       	mov	r24, r29
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	88 15       	cp	r24, r8
     a7a:	99 05       	cpc	r25, r9
     a7c:	3c f0       	brlt	.+14     	; 0xa8c <fillrect+0x64>
     a7e:	0a c0       	rjmp	.+20     	; 0xa94 <fillrect+0x6c>
     a80:	a4 2e       	mov	r10, r20
     a82:	b1 2c       	mov	r11, r1
     a84:	c5 01       	movw	r24, r10
     a86:	80 0f       	add	r24, r16
     a88:	91 1d       	adc	r25, r1
     a8a:	8c 01       	movw	r16, r24
     a8c:	a0 16       	cp	r10, r16
     a8e:	b1 06       	cpc	r11, r17
     a90:	1c f3       	brlt	.-58     	; 0xa58 <fillrect+0x30>
     a92:	ef cf       	rjmp	.-34     	; 0xa72 <fillrect+0x4a>
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	ef 90       	pop	r14
     aa0:	df 90       	pop	r13
     aa2:	cf 90       	pop	r12
     aa4:	bf 90       	pop	r11
     aa6:	af 90       	pop	r10
     aa8:	9f 90       	pop	r9
     aaa:	8f 90       	pop	r8
     aac:	08 95       	ret

00000aae <clearrect>:
     aae:	9f 92       	push	r9
     ab0:	af 92       	push	r10
     ab2:	bf 92       	push	r11
     ab4:	cf 92       	push	r12
     ab6:	df 92       	push	r13
     ab8:	ef 92       	push	r14
     aba:	ff 92       	push	r15
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	7c 01       	movw	r14, r24
     ac6:	d6 2f       	mov	r29, r22
     ac8:	94 2e       	mov	r9, r20
     aca:	86 2f       	mov	r24, r22
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	5c 01       	movw	r10, r24
     ad0:	a2 0e       	add	r10, r18
     ad2:	b1 1c       	adc	r11, r1
     ad4:	8a 15       	cp	r24, r10
     ad6:	9b 05       	cpc	r25, r11
     ad8:	a4 f0       	brlt	.+40     	; 0xb02 <clearrect+0x54>
     ada:	1d c0       	rjmp	.+58     	; 0xb16 <clearrect+0x68>
     adc:	c9 2d       	mov	r28, r9
     ade:	4c 2f       	mov	r20, r28
     ae0:	6d 2f       	mov	r22, r29
     ae2:	c7 01       	movw	r24, r14
     ae4:	0e 94 4a 04 	call	0x894	; 0x894 <clearpixel>
     ae8:	cf 5f       	subi	r28, 0xFF	; 255
     aea:	8c 2f       	mov	r24, r28
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	80 17       	cp	r24, r16
     af0:	91 07       	cpc	r25, r17
     af2:	ac f3       	brlt	.-22     	; 0xade <clearrect+0x30>
     af4:	df 5f       	subi	r29, 0xFF	; 255
     af6:	8d 2f       	mov	r24, r29
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	8a 15       	cp	r24, r10
     afc:	9b 05       	cpc	r25, r11
     afe:	3c f0       	brlt	.+14     	; 0xb0e <clearrect+0x60>
     b00:	0a c0       	rjmp	.+20     	; 0xb16 <clearrect+0x68>
     b02:	c4 2e       	mov	r12, r20
     b04:	d1 2c       	mov	r13, r1
     b06:	c6 01       	movw	r24, r12
     b08:	80 0f       	add	r24, r16
     b0a:	91 1d       	adc	r25, r1
     b0c:	8c 01       	movw	r16, r24
     b0e:	c0 16       	cp	r12, r16
     b10:	d1 06       	cpc	r13, r17
     b12:	24 f3       	brlt	.-56     	; 0xadc <clearrect+0x2e>
     b14:	ef cf       	rjmp	.-34     	; 0xaf4 <clearrect+0x46>
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	1f 91       	pop	r17
     b1c:	0f 91       	pop	r16
     b1e:	ff 90       	pop	r15
     b20:	ef 90       	pop	r14
     b22:	df 90       	pop	r13
     b24:	cf 90       	pop	r12
     b26:	bf 90       	pop	r11
     b28:	af 90       	pop	r10
     b2a:	9f 90       	pop	r9
     b2c:	08 95       	ret

00000b2e <drawrect>:
     b2e:	9f 92       	push	r9
     b30:	af 92       	push	r10
     b32:	bf 92       	push	r11
     b34:	cf 92       	push	r12
     b36:	df 92       	push	r13
     b38:	ef 92       	push	r14
     b3a:	ff 92       	push	r15
     b3c:	0f 93       	push	r16
     b3e:	1f 93       	push	r17
     b40:	cf 93       	push	r28
     b42:	df 93       	push	r29
     b44:	6c 01       	movw	r12, r24
     b46:	f6 2e       	mov	r15, r22
     b48:	c4 2f       	mov	r28, r20
     b4a:	12 2f       	mov	r17, r18
     b4c:	86 2f       	mov	r24, r22
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	5c 01       	movw	r10, r24
     b52:	a2 0e       	add	r10, r18
     b54:	b1 1c       	adc	r11, r1
     b56:	8a 15       	cp	r24, r10
     b58:	9b 05       	cpc	r25, r11
     b5a:	bc f4       	brge	.+46     	; 0xb8a <drawrect+0x5c>
     b5c:	d6 2f       	mov	r29, r22
     b5e:	99 24       	eor	r9, r9
     b60:	9a 94       	dec	r9
     b62:	90 0e       	add	r9, r16
     b64:	94 0e       	add	r9, r20
     b66:	2e 2d       	mov	r18, r14
     b68:	4c 2f       	mov	r20, r28
     b6a:	6d 2f       	mov	r22, r29
     b6c:	c6 01       	movw	r24, r12
     b6e:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     b72:	2e 2d       	mov	r18, r14
     b74:	49 2d       	mov	r20, r9
     b76:	6d 2f       	mov	r22, r29
     b78:	c6 01       	movw	r24, r12
     b7a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     b7e:	df 5f       	subi	r29, 0xFF	; 255
     b80:	8d 2f       	mov	r24, r29
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	8a 15       	cp	r24, r10
     b86:	9b 05       	cpc	r25, r11
     b88:	74 f3       	brlt	.-36     	; 0xb66 <drawrect+0x38>
     b8a:	8c 2f       	mov	r24, r28
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	5c 01       	movw	r10, r24
     b90:	a0 0e       	add	r10, r16
     b92:	b1 1c       	adc	r11, r1
     b94:	8a 15       	cp	r24, r10
     b96:	9b 05       	cpc	r25, r11
     b98:	ac f4       	brge	.+42     	; 0xbc4 <drawrect+0x96>
     b9a:	df ef       	ldi	r29, 0xFF	; 255
     b9c:	d1 0f       	add	r29, r17
     b9e:	df 0d       	add	r29, r15
     ba0:	2e 2d       	mov	r18, r14
     ba2:	4c 2f       	mov	r20, r28
     ba4:	6f 2d       	mov	r22, r15
     ba6:	c6 01       	movw	r24, r12
     ba8:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     bac:	2e 2d       	mov	r18, r14
     bae:	4c 2f       	mov	r20, r28
     bb0:	6d 2f       	mov	r22, r29
     bb2:	c6 01       	movw	r24, r12
     bb4:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     bb8:	cf 5f       	subi	r28, 0xFF	; 255
     bba:	8c 2f       	mov	r24, r28
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	8a 15       	cp	r24, r10
     bc0:	9b 05       	cpc	r25, r11
     bc2:	74 f3       	brlt	.-36     	; 0xba0 <drawrect+0x72>
     bc4:	df 91       	pop	r29
     bc6:	cf 91       	pop	r28
     bc8:	1f 91       	pop	r17
     bca:	0f 91       	pop	r16
     bcc:	ff 90       	pop	r15
     bce:	ef 90       	pop	r14
     bd0:	df 90       	pop	r13
     bd2:	cf 90       	pop	r12
     bd4:	bf 90       	pop	r11
     bd6:	af 90       	pop	r10
     bd8:	9f 90       	pop	r9
     bda:	08 95       	ret

00000bdc <fillcircle>:


// function to draw a filled circle
void fillcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
     bdc:	2f 92       	push	r2
     bde:	3f 92       	push	r3
     be0:	4f 92       	push	r4
     be2:	5f 92       	push	r5
     be4:	6f 92       	push	r6
     be6:	7f 92       	push	r7
     be8:	8f 92       	push	r8
     bea:	9f 92       	push	r9
     bec:	af 92       	push	r10
     bee:	bf 92       	push	r11
     bf0:	cf 92       	push	r12
     bf2:	df 92       	push	r13
     bf4:	ef 92       	push	r14
     bf6:	ff 92       	push	r15
     bf8:	0f 93       	push	r16
     bfa:	1f 93       	push	r17
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	7c 01       	movw	r14, r24
     c02:	86 2e       	mov	r8, r22
     c04:	94 2e       	mov	r9, r20
	int8_t x = r;
     c06:	d2 2f       	mov	r29, r18
	int8_t y = 0;
	int8_t dx = -(2 * r);
     c08:	72 2e       	mov	r7, r18
     c0a:	71 94       	neg	r7
     c0c:	77 0c       	add	r7, r7
	int8_t dy = 1;
	int8_t temp = dy - r;
     c0e:	11 e0       	ldi	r17, 0x01	; 1
     c10:	12 1b       	sub	r17, r18

	for (uint8_t i = x0 - r; i <= x0 + r; i++) {
     c12:	c6 2f       	mov	r28, r22
     c14:	c2 1b       	sub	r28, r18
     c16:	a6 2e       	mov	r10, r22
     c18:	b1 2c       	mov	r11, r1
     c1a:	65 01       	movw	r12, r10
     c1c:	c2 0e       	add	r12, r18
     c1e:	d1 1c       	adc	r13, r1
     c20:	8c 2f       	mov	r24, r28
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	c8 16       	cp	r12, r24
     c26:	d9 06       	cpc	r13, r25
     c28:	0c f4       	brge	.+2      	; 0xc2c <fillcircle+0x50>
     c2a:	62 c0       	rjmp	.+196    	; 0xcf0 <fillcircle+0x114>
		setpixel(buff, i, y0, color);
     c2c:	20 2f       	mov	r18, r16
     c2e:	49 2d       	mov	r20, r9
     c30:	6c 2f       	mov	r22, r28
     c32:	c7 01       	movw	r24, r14
     c34:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	int8_t y = 0;
	int8_t dx = -(2 * r);
	int8_t dy = 1;
	int8_t temp = dy - r;

	for (uint8_t i = x0 - r; i <= x0 + r; i++) {
     c38:	cf 5f       	subi	r28, 0xFF	; 255
     c3a:	8c 2f       	mov	r24, r28
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	c8 16       	cp	r12, r24
     c40:	d9 06       	cpc	r13, r25
     c42:	a4 f7       	brge	.-24     	; 0xc2c <fillcircle+0x50>
     c44:	55 c0       	rjmp	.+170    	; 0xcf0 <fillcircle+0x114>
		setpixel(buff, i, y0, color);
	}

	while (x >= y) {
     c46:	61 2c       	mov	r6, r1
		if (temp >= 0) {
     c48:	11 23       	and	r17, r17
     c4a:	24 f0       	brlt	.+8      	; 0xc54 <fillcircle+0x78>
			x--;
     c4c:	d1 50       	subi	r29, 0x01	; 1
			dx += 2;
     c4e:	73 94       	inc	r7
     c50:	73 94       	inc	r7
			temp += dx;
     c52:	17 0d       	add	r17, r7
     c54:	63 94       	inc	r6
     c56:	26 2c       	mov	r2, r6
		}
		y++;
		dy += 2;
		temp += dy;
     c58:	86 2d       	mov	r24, r6
     c5a:	88 0f       	add	r24, r24
     c5c:	8f 5f       	subi	r24, 0xFF	; 255
     c5e:	18 0f       	add	r17, r24
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
     c60:	5d 2e       	mov	r5, r29
     c62:	c8 2d       	mov	r28, r8
     c64:	cd 1b       	sub	r28, r29
     c66:	65 01       	movw	r12, r10
     c68:	cd 0e       	add	r12, r29
     c6a:	d1 1c       	adc	r13, r1
     c6c:	d7 fd       	sbrc	r29, 7
     c6e:	da 94       	dec	r13
     c70:	8c 2f       	mov	r24, r28
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	c8 16       	cp	r12, r24
     c76:	d9 06       	cpc	r13, r25
     c78:	b4 f0       	brlt	.+44     	; 0xca6 <fillcircle+0xca>
			setpixel(buff, i, y0 - y, color);
     c7a:	39 2c       	mov	r3, r9
     c7c:	36 18       	sub	r3, r6
			setpixel(buff, i, y0 + y, color);
     c7e:	46 2c       	mov	r4, r6
     c80:	49 0c       	add	r4, r9
		y++;
		dy += 2;
		temp += dy;
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
			setpixel(buff, i, y0 - y, color);
     c82:	20 2f       	mov	r18, r16
     c84:	43 2d       	mov	r20, r3
     c86:	6c 2f       	mov	r22, r28
     c88:	c7 01       	movw	r24, r14
     c8a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
			setpixel(buff, i, y0 + y, color);
     c8e:	20 2f       	mov	r18, r16
     c90:	44 2d       	mov	r20, r4
     c92:	6c 2f       	mov	r22, r28
     c94:	c7 01       	movw	r24, r14
     c96:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		}
		y++;
		dy += 2;
		temp += dy;
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
     c9a:	cf 5f       	subi	r28, 0xFF	; 255
     c9c:	8c 2f       	mov	r24, r28
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	c8 16       	cp	r12, r24
     ca2:	d9 06       	cpc	r13, r25
     ca4:	74 f7       	brge	.-36     	; 0xc82 <fillcircle+0xa6>
     ca6:	c8 2d       	mov	r28, r8
     ca8:	c2 19       	sub	r28, r2
			setpixel(buff, i, y0 - y, color);
			setpixel(buff, i, y0 + y, color);
		}
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
     caa:	65 01       	movw	r12, r10
     cac:	c6 0c       	add	r12, r6
     cae:	d1 1c       	adc	r13, r1
     cb0:	67 fc       	sbrc	r6, 7
     cb2:	da 94       	dec	r13
     cb4:	8c 2f       	mov	r24, r28
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	c8 16       	cp	r12, r24
     cba:	d9 06       	cpc	r13, r25
     cbc:	ac f0       	brlt	.+42     	; 0xce8 <fillcircle+0x10c>
			setpixel(buff, i, y0 - x, color);
     cbe:	49 2c       	mov	r4, r9
     cc0:	45 18       	sub	r4, r5
			setpixel(buff, i, y0 + x, color);
     cc2:	59 0c       	add	r5, r9
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
			setpixel(buff, i, y0 - y, color);
			setpixel(buff, i, y0 + y, color);
		}
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
			setpixel(buff, i, y0 - x, color);
     cc4:	20 2f       	mov	r18, r16
     cc6:	44 2d       	mov	r20, r4
     cc8:	6c 2f       	mov	r22, r28
     cca:	c7 01       	movw	r24, r14
     ccc:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
			setpixel(buff, i, y0 + x, color);
     cd0:	20 2f       	mov	r18, r16
     cd2:	45 2d       	mov	r20, r5
     cd4:	6c 2f       	mov	r22, r28
     cd6:	c7 01       	movw	r24, r14
     cd8:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
			setpixel(buff, i, y0 - y, color);
			setpixel(buff, i, y0 + y, color);
		}
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
     cdc:	cf 5f       	subi	r28, 0xFF	; 255
     cde:	8c 2f       	mov	r24, r28
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	c8 16       	cp	r12, r24
     ce4:	d9 06       	cpc	r13, r25
     ce6:	74 f7       	brge	.-36     	; 0xcc4 <fillcircle+0xe8>

	for (uint8_t i = x0 - r; i <= x0 + r; i++) {
		setpixel(buff, i, y0, color);
	}

	while (x >= y) {
     ce8:	d6 15       	cp	r29, r6
     cea:	0c f0       	brlt	.+2      	; 0xcee <fillcircle+0x112>
     cec:	ad cf       	rjmp	.-166    	; 0xc48 <fillcircle+0x6c>
     cee:	03 c0       	rjmp	.+6      	; 0xcf6 <fillcircle+0x11a>
     cf0:	dd 23       	and	r29, r29
     cf2:	0c f0       	brlt	.+2      	; 0xcf6 <fillcircle+0x11a>
     cf4:	a8 cf       	rjmp	.-176    	; 0xc46 <fillcircle+0x6a>
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
			setpixel(buff, i, y0 - x, color);
			setpixel(buff, i, y0 + x, color);
		}
	}
}
     cf6:	df 91       	pop	r29
     cf8:	cf 91       	pop	r28
     cfa:	1f 91       	pop	r17
     cfc:	0f 91       	pop	r16
     cfe:	ff 90       	pop	r15
     d00:	ef 90       	pop	r14
     d02:	df 90       	pop	r13
     d04:	cf 90       	pop	r12
     d06:	bf 90       	pop	r11
     d08:	af 90       	pop	r10
     d0a:	9f 90       	pop	r9
     d0c:	8f 90       	pop	r8
     d0e:	7f 90       	pop	r7
     d10:	6f 90       	pop	r6
     d12:	5f 90       	pop	r5
     d14:	4f 90       	pop	r4
     d16:	3f 90       	pop	r3
     d18:	2f 90       	pop	r2
     d1a:	08 95       	ret

00000d1c <clearcircle>:

void clearcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
     d1c:	2f 92       	push	r2
     d1e:	3f 92       	push	r3
     d20:	4f 92       	push	r4
     d22:	5f 92       	push	r5
     d24:	6f 92       	push	r6
     d26:	7f 92       	push	r7
     d28:	8f 92       	push	r8
     d2a:	9f 92       	push	r9
     d2c:	af 92       	push	r10
     d2e:	bf 92       	push	r11
     d30:	cf 92       	push	r12
     d32:	df 92       	push	r13
     d34:	ef 92       	push	r14
     d36:	ff 92       	push	r15
     d38:	0f 93       	push	r16
     d3a:	1f 93       	push	r17
     d3c:	cf 93       	push	r28
     d3e:	df 93       	push	r29
     d40:	8c 01       	movw	r16, r24
     d42:	76 2e       	mov	r7, r22
     d44:	94 2e       	mov	r9, r20
     d46:	d2 2f       	mov	r29, r18
	int8_t x = r;
	int8_t y = 0;
	int8_t dx = -(2 * r);
     d48:	82 2e       	mov	r8, r18
     d4a:	81 94       	neg	r8
     d4c:	88 0c       	add	r8, r8
	int8_t dy = 1;
	int8_t temp = dy - r;
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	a8 2e       	mov	r10, r24
     d52:	a2 1a       	sub	r10, r18

	for (uint8_t i = x0 - r; i <= x0 + r; i++) {
     d54:	c6 2f       	mov	r28, r22
     d56:	c2 1b       	sub	r28, r18
     d58:	c6 2e       	mov	r12, r22
     d5a:	d1 2c       	mov	r13, r1
     d5c:	76 01       	movw	r14, r12
     d5e:	e2 0e       	add	r14, r18
     d60:	f1 1c       	adc	r15, r1
     d62:	8c 2f       	mov	r24, r28
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	e8 16       	cp	r14, r24
     d68:	f9 06       	cpc	r15, r25
     d6a:	0c f4       	brge	.+2      	; 0xd6e <clearcircle+0x52>
     d6c:	60 c0       	rjmp	.+192    	; 0xe2e <clearcircle+0x112>
		clearpixel(buff, i, y0);
     d6e:	49 2d       	mov	r20, r9
     d70:	6c 2f       	mov	r22, r28
     d72:	c8 01       	movw	r24, r16
     d74:	0e 94 4a 04 	call	0x894	; 0x894 <clearpixel>
	int8_t y = 0;
	int8_t dx = -(2 * r);
	int8_t dy = 1;
	int8_t temp = dy - r;

	for (uint8_t i = x0 - r; i <= x0 + r; i++) {
     d78:	cf 5f       	subi	r28, 0xFF	; 255
     d7a:	8c 2f       	mov	r24, r28
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	e8 16       	cp	r14, r24
     d80:	f9 06       	cpc	r15, r25
     d82:	ac f7       	brge	.-22     	; 0xd6e <clearcircle+0x52>
     d84:	54 c0       	rjmp	.+168    	; 0xe2e <clearcircle+0x112>
		clearpixel(buff, i, y0);
	}

	while (x >= y) {
     d86:	0f 2e       	mov	r0, r31
     d88:	f3 e0       	ldi	r31, 0x03	; 3
     d8a:	6f 2e       	mov	r6, r31
     d8c:	f0 2d       	mov	r31, r0
     d8e:	b1 2c       	mov	r11, r1
		if (temp >= 0) {
     d90:	aa 20       	and	r10, r10
     d92:	24 f0       	brlt	.+8      	; 0xd9c <clearcircle+0x80>
			x--;
     d94:	d1 50       	subi	r29, 0x01	; 1
			dx += 2;
     d96:	83 94       	inc	r8
     d98:	83 94       	inc	r8
			temp += dx;
     d9a:	a8 0c       	add	r10, r8
     d9c:	b3 94       	inc	r11
     d9e:	2b 2c       	mov	r2, r11
		}
		y++;
		dy += 2;
		temp += dy;
     da0:	a6 0c       	add	r10, r6
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
     da2:	5d 2e       	mov	r5, r29
     da4:	c7 2d       	mov	r28, r7
     da6:	cd 1b       	sub	r28, r29
     da8:	76 01       	movw	r14, r12
     daa:	ed 0e       	add	r14, r29
     dac:	f1 1c       	adc	r15, r1
     dae:	d7 fd       	sbrc	r29, 7
     db0:	fa 94       	dec	r15
     db2:	8c 2f       	mov	r24, r28
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	e8 16       	cp	r14, r24
     db8:	f9 06       	cpc	r15, r25
     dba:	a4 f0       	brlt	.+40     	; 0xde4 <clearcircle+0xc8>
			clearpixel(buff, i, y0 - y);
     dbc:	39 2c       	mov	r3, r9
     dbe:	3b 18       	sub	r3, r11
			clearpixel(buff, i, y0 + y);
     dc0:	49 2c       	mov	r4, r9
     dc2:	4b 0c       	add	r4, r11
		y++;
		dy += 2;
		temp += dy;
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
			clearpixel(buff, i, y0 - y);
     dc4:	43 2d       	mov	r20, r3
     dc6:	6c 2f       	mov	r22, r28
     dc8:	c8 01       	movw	r24, r16
     dca:	0e 94 4a 04 	call	0x894	; 0x894 <clearpixel>
			clearpixel(buff, i, y0 + y);
     dce:	44 2d       	mov	r20, r4
     dd0:	6c 2f       	mov	r22, r28
     dd2:	c8 01       	movw	r24, r16
     dd4:	0e 94 4a 04 	call	0x894	; 0x894 <clearpixel>
		}
		y++;
		dy += 2;
		temp += dy;
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
     dd8:	cf 5f       	subi	r28, 0xFF	; 255
     dda:	8c 2f       	mov	r24, r28
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	e8 16       	cp	r14, r24
     de0:	f9 06       	cpc	r15, r25
     de2:	84 f7       	brge	.-32     	; 0xdc4 <clearcircle+0xa8>
     de4:	c7 2d       	mov	r28, r7
     de6:	c2 19       	sub	r28, r2
			clearpixel(buff, i, y0 - y);
			clearpixel(buff, i, y0 + y);
		}
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
     de8:	76 01       	movw	r14, r12
     dea:	eb 0c       	add	r14, r11
     dec:	f1 1c       	adc	r15, r1
     dee:	b7 fc       	sbrc	r11, 7
     df0:	fa 94       	dec	r15
     df2:	8c 2f       	mov	r24, r28
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	e8 16       	cp	r14, r24
     df8:	f9 06       	cpc	r15, r25
     dfa:	9c f0       	brlt	.+38     	; 0xe22 <clearcircle+0x106>
			clearpixel(buff, i, y0 - x);
     dfc:	49 2c       	mov	r4, r9
     dfe:	45 18       	sub	r4, r5
			clearpixel(buff, i, y0 + x);
     e00:	59 0c       	add	r5, r9
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
			clearpixel(buff, i, y0 - y);
			clearpixel(buff, i, y0 + y);
		}
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
			clearpixel(buff, i, y0 - x);
     e02:	44 2d       	mov	r20, r4
     e04:	6c 2f       	mov	r22, r28
     e06:	c8 01       	movw	r24, r16
     e08:	0e 94 4a 04 	call	0x894	; 0x894 <clearpixel>
			clearpixel(buff, i, y0 + x);
     e0c:	45 2d       	mov	r20, r5
     e0e:	6c 2f       	mov	r22, r28
     e10:	c8 01       	movw	r24, r16
     e12:	0e 94 4a 04 	call	0x894	; 0x894 <clearpixel>
		
		for (uint8_t i = x0 - x; i <= x0 + x; i++) {
			clearpixel(buff, i, y0 - y);
			clearpixel(buff, i, y0 + y);
		}
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
     e16:	cf 5f       	subi	r28, 0xFF	; 255
     e18:	8c 2f       	mov	r24, r28
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	e8 16       	cp	r14, r24
     e1e:	f9 06       	cpc	r15, r25
     e20:	84 f7       	brge	.-32     	; 0xe02 <clearcircle+0xe6>
     e22:	63 94       	inc	r6
     e24:	63 94       	inc	r6

	for (uint8_t i = x0 - r; i <= x0 + r; i++) {
		clearpixel(buff, i, y0);
	}

	while (x >= y) {
     e26:	db 15       	cp	r29, r11
     e28:	0c f0       	brlt	.+2      	; 0xe2c <clearcircle+0x110>
     e2a:	b2 cf       	rjmp	.-156    	; 0xd90 <clearcircle+0x74>
     e2c:	03 c0       	rjmp	.+6      	; 0xe34 <clearcircle+0x118>
     e2e:	dd 23       	and	r29, r29
     e30:	0c f0       	brlt	.+2      	; 0xe34 <clearcircle+0x118>
     e32:	a9 cf       	rjmp	.-174    	; 0xd86 <clearcircle+0x6a>
		for (uint8_t i = x0 - y; i <= x0 + y; i++) {
			clearpixel(buff, i, y0 - x);
			clearpixel(buff, i, y0 + x);
		}
	}
}
     e34:	df 91       	pop	r29
     e36:	cf 91       	pop	r28
     e38:	1f 91       	pop	r17
     e3a:	0f 91       	pop	r16
     e3c:	ff 90       	pop	r15
     e3e:	ef 90       	pop	r14
     e40:	df 90       	pop	r13
     e42:	cf 90       	pop	r12
     e44:	bf 90       	pop	r11
     e46:	af 90       	pop	r10
     e48:	9f 90       	pop	r9
     e4a:	8f 90       	pop	r8
     e4c:	7f 90       	pop	r7
     e4e:	6f 90       	pop	r6
     e50:	5f 90       	pop	r5
     e52:	4f 90       	pop	r4
     e54:	3f 90       	pop	r3
     e56:	2f 90       	pop	r2
     e58:	08 95       	ret

00000e5a <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
     e5a:	cf 93       	push	r28
     e5c:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     e5e:	8a 30       	cpi	r24, 0x0A	; 10
     e60:	19 f4       	brne	.+6      	; 0xe68 <uart_putchar+0xe>
		uart_putchar('\r', stream);
     e62:	8d e0       	ldi	r24, 0x0D	; 13
     e64:	0e 94 2d 07 	call	0xe5a	; 0xe5a <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     e68:	e0 ec       	ldi	r30, 0xC0	; 192
     e6a:	f0 e0       	ldi	r31, 0x00	; 0
     e6c:	80 81       	ld	r24, Z
     e6e:	85 ff       	sbrs	r24, 5
     e70:	fd cf       	rjmp	.-6      	; 0xe6c <uart_putchar+0x12>
	UDR0 = c;
     e72:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
     e76:	80 e0       	ldi	r24, 0x00	; 0
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	cf 91       	pop	r28
     e7c:	08 95       	ret

00000e7e <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
     e7e:	e0 ec       	ldi	r30, 0xC0	; 192
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	80 81       	ld	r24, Z
     e84:	88 23       	and	r24, r24
     e86:	ec f7       	brge	.-6      	; 0xe82 <uart_getchar+0x4>
	return UDR0;
     e88:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	08 95       	ret

00000e90 <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
     e90:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
     e94:	87 e6       	ldi	r24, 0x67	; 103
     e96:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     e9a:	e0 ec       	ldi	r30, 0xC0	; 192
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	80 81       	ld	r24, Z
     ea0:	8d 7f       	andi	r24, 0xFD	; 253
     ea2:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     ea4:	86 e0       	ldi	r24, 0x06	; 6
     ea6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     eaa:	88 e1       	ldi	r24, 0x18	; 24
     eac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
     eb0:	e7 e6       	ldi	r30, 0x67	; 103
     eb2:	f5 e0       	ldi	r31, 0x05	; 5
     eb4:	86 e2       	ldi	r24, 0x26	; 38
     eb6:	95 e0       	ldi	r25, 0x05	; 5
     eb8:	93 83       	std	Z+3, r25	; 0x03
     eba:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
     ebc:	88 e1       	ldi	r24, 0x18	; 24
     ebe:	95 e0       	ldi	r25, 0x05	; 5
     ec0:	91 83       	std	Z+1, r25	; 0x01
     ec2:	80 83       	st	Z, r24
     ec4:	08 95       	ret

00000ec6 <init_game>:
	int8_t flagx;
	int8_t flagy;
}ball1;

void init_game()
{
     ec6:	ef 92       	push	r14
     ec8:	0f 93       	push	r16
     eca:	cf 93       	push	r28
     ecc:	df 93       	push	r29
	PORTB |= (1<<PORTB0);                                //open PB0 to change color
     ece:	28 9a       	sbi	0x05, 0	; 5
	fillrect(buff,1,paddle_y1,2,10,displayChar);         //draw paddle1
     ed0:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <paddle_y1>
     ed4:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <paddle_y1+0x1>
     ed8:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     edc:	0a e0       	ldi	r16, 0x0A	; 10
     ede:	22 e0       	ldi	r18, 0x02	; 2
     ee0:	61 e0       	ldi	r22, 0x01	; 1
     ee2:	84 e0       	ldi	r24, 0x04	; 4
     ee4:	91 e0       	ldi	r25, 0x01	; 1
     ee6:	0e 94 14 05 	call	0xa28	; 0xa28 <fillrect>
	fillrect(buff,125,paddle_y2,2,10,displayChar);       //draw paddle2
     eea:	40 91 14 05 	lds	r20, 0x0514	; 0x800514 <paddle_y2>
     eee:	50 91 15 05 	lds	r21, 0x0515	; 0x800515 <paddle_y2+0x1>
     ef2:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     ef6:	22 e0       	ldi	r18, 0x02	; 2
     ef8:	6d e7       	ldi	r22, 0x7D	; 125
     efa:	84 e0       	ldi	r24, 0x04	; 4
     efc:	91 e0       	ldi	r25, 0x01	; 1
     efe:	0e 94 14 05 	call	0xa28	; 0xa28 <fillrect>
	
	drawrect(buff,0,0,128,64,displayChar);
     f02:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f06:	00 e4       	ldi	r16, 0x40	; 64
     f08:	20 e8       	ldi	r18, 0x80	; 128
     f0a:	40 e0       	ldi	r20, 0x00	; 0
     f0c:	60 e0       	ldi	r22, 0x00	; 0
     f0e:	84 e0       	ldi	r24, 0x04	; 4
     f10:	91 e0       	ldi	r25, 0x01	; 1
     f12:	0e 94 97 05 	call	0xb2e	; 0xb2e <drawrect>
	drawline(buff,64,0,64,2,displayChar);
     f16:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f1a:	02 e0       	ldi	r16, 0x02	; 2
     f1c:	20 e4       	ldi	r18, 0x40	; 64
     f1e:	40 e0       	ldi	r20, 0x00	; 0
     f20:	60 e4       	ldi	r22, 0x40	; 64
     f22:	84 e0       	ldi	r24, 0x04	; 4
     f24:	91 e0       	ldi	r25, 0x01	; 1
     f26:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,6,64,8,displayChar);
     f2a:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f2e:	08 e0       	ldi	r16, 0x08	; 8
     f30:	20 e4       	ldi	r18, 0x40	; 64
     f32:	46 e0       	ldi	r20, 0x06	; 6
     f34:	60 e4       	ldi	r22, 0x40	; 64
     f36:	84 e0       	ldi	r24, 0x04	; 4
     f38:	91 e0       	ldi	r25, 0x01	; 1
     f3a:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,12,64,14,displayChar);
     f3e:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f42:	0e e0       	ldi	r16, 0x0E	; 14
     f44:	20 e4       	ldi	r18, 0x40	; 64
     f46:	4c e0       	ldi	r20, 0x0C	; 12
     f48:	60 e4       	ldi	r22, 0x40	; 64
     f4a:	84 e0       	ldi	r24, 0x04	; 4
     f4c:	91 e0       	ldi	r25, 0x01	; 1
     f4e:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,18,64,20,displayChar);
     f52:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f56:	04 e1       	ldi	r16, 0x14	; 20
     f58:	20 e4       	ldi	r18, 0x40	; 64
     f5a:	42 e1       	ldi	r20, 0x12	; 18
     f5c:	60 e4       	ldi	r22, 0x40	; 64
     f5e:	84 e0       	ldi	r24, 0x04	; 4
     f60:	91 e0       	ldi	r25, 0x01	; 1
     f62:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,24,64,26,displayChar);
     f66:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f6a:	0a e1       	ldi	r16, 0x1A	; 26
     f6c:	20 e4       	ldi	r18, 0x40	; 64
     f6e:	48 e1       	ldi	r20, 0x18	; 24
     f70:	60 e4       	ldi	r22, 0x40	; 64
     f72:	84 e0       	ldi	r24, 0x04	; 4
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,37,64,39,displayChar);
     f7a:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f7e:	07 e2       	ldi	r16, 0x27	; 39
     f80:	20 e4       	ldi	r18, 0x40	; 64
     f82:	45 e2       	ldi	r20, 0x25	; 37
     f84:	60 e4       	ldi	r22, 0x40	; 64
     f86:	84 e0       	ldi	r24, 0x04	; 4
     f88:	91 e0       	ldi	r25, 0x01	; 1
     f8a:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,43,64,45,displayChar);
     f8e:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     f92:	0d e2       	ldi	r16, 0x2D	; 45
     f94:	20 e4       	ldi	r18, 0x40	; 64
     f96:	4b e2       	ldi	r20, 0x2B	; 43
     f98:	60 e4       	ldi	r22, 0x40	; 64
     f9a:	84 e0       	ldi	r24, 0x04	; 4
     f9c:	91 e0       	ldi	r25, 0x01	; 1
     f9e:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,49,64,51,displayChar);
     fa2:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     fa6:	03 e3       	ldi	r16, 0x33	; 51
     fa8:	20 e4       	ldi	r18, 0x40	; 64
     faa:	41 e3       	ldi	r20, 0x31	; 49
     fac:	60 e4       	ldi	r22, 0x40	; 64
     fae:	84 e0       	ldi	r24, 0x04	; 4
     fb0:	91 e0       	ldi	r25, 0x01	; 1
     fb2:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,55,64,57,displayChar);
     fb6:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     fba:	09 e3       	ldi	r16, 0x39	; 57
     fbc:	20 e4       	ldi	r18, 0x40	; 64
     fbe:	47 e3       	ldi	r20, 0x37	; 55
     fc0:	60 e4       	ldi	r22, 0x40	; 64
     fc2:	84 e0       	ldi	r24, 0x04	; 4
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
	drawline(buff,64,61,64,63,displayChar);
     fca:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
     fce:	0f e3       	ldi	r16, 0x3F	; 63
     fd0:	20 e4       	ldi	r18, 0x40	; 64
     fd2:	4d e3       	ldi	r20, 0x3D	; 61
     fd4:	60 e4       	ldi	r22, 0x40	; 64
     fd6:	84 e0       	ldi	r24, 0x04	; 4
     fd8:	91 e0       	ldi	r25, 0x01	; 1
     fda:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>

	OCR1A = (rand()%6 + 1) * 100 + 750;                 //create random velocity
     fde:	0e 94 64 10 	call	0x20c8	; 0x20c8 <rand>
     fe2:	66 e0       	ldi	r22, 0x06	; 6
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__divmodhi4>
     fea:	9c 01       	movw	r18, r24
     fec:	2f 5f       	subi	r18, 0xFF	; 255
     fee:	3f 4f       	sbci	r19, 0xFF	; 255
     ff0:	44 e6       	ldi	r20, 0x64	; 100
     ff2:	42 9f       	mul	r20, r18
     ff4:	c0 01       	movw	r24, r0
     ff6:	43 9f       	mul	r20, r19
     ff8:	90 0d       	add	r25, r0
     ffa:	11 24       	eor	r1, r1
     ffc:	82 51       	subi	r24, 0x12	; 18
     ffe:	9d 4f       	sbci	r25, 0xFD	; 253
    1000:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1004:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCNT1 = 0;                                          //initial timer1
    1008:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    100c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	if(score1 >= 9 || score2 >= 9){                    //reset the game after scrore 9
    1010:	80 91 3c 05 	lds	r24, 0x053C	; 0x80053c <score1>
    1014:	90 91 3d 05 	lds	r25, 0x053D	; 0x80053d <score1+0x1>
    1018:	09 97       	sbiw	r24, 0x09	; 9
    101a:	30 f4       	brcc	.+12     	; 0x1028 <init_game+0x162>
    101c:	80 91 3a 05 	lds	r24, 0x053A	; 0x80053a <score2>
    1020:	90 91 3b 05 	lds	r25, 0x053B	; 0x80053b <score2+0x1>
    1024:	09 97       	sbiw	r24, 0x09	; 9
    1026:	40 f0       	brcs	.+16     	; 0x1038 <init_game+0x172>
		score1 = 0;
    1028:	10 92 3d 05 	sts	0x053D, r1	; 0x80053d <score1+0x1>
    102c:	10 92 3c 05 	sts	0x053C, r1	; 0x80053c <score1>
		score2 = 0;
    1030:	10 92 3b 05 	sts	0x053B, r1	; 0x80053b <score2+0x1>
    1034:	10 92 3a 05 	sts	0x053A, r1	; 0x80053a <score2>
	}
	
	sprintf(s1, "%d", score1);                       //convert score from int to string
    1038:	80 91 3c 05 	lds	r24, 0x053C	; 0x80053c <score1>
    103c:	90 91 3d 05 	lds	r25, 0x053D	; 0x80053d <score1+0x1>
    1040:	9f 93       	push	r25
    1042:	8f 93       	push	r24
    1044:	c4 e3       	ldi	r28, 0x34	; 52
    1046:	d5 e0       	ldi	r29, 0x05	; 5
    1048:	df 93       	push	r29
    104a:	cf 93       	push	r28
    104c:	8b e4       	ldi	r24, 0x4B	; 75
    104e:	95 e0       	ldi	r25, 0x05	; 5
    1050:	9f 93       	push	r25
    1052:	8f 93       	push	r24
    1054:	0e 94 9e 11 	call	0x233c	; 0x233c <sprintf>
	sprintf(s2, "%d", score2);
    1058:	80 91 3a 05 	lds	r24, 0x053A	; 0x80053a <score2>
    105c:	90 91 3b 05 	lds	r25, 0x053B	; 0x80053b <score2+0x1>
    1060:	9f 93       	push	r25
    1062:	8f 93       	push	r24
    1064:	df 93       	push	r29
    1066:	cf 93       	push	r28
    1068:	8b e5       	ldi	r24, 0x5B	; 91
    106a:	95 e0       	ldi	r25, 0x05	; 5
    106c:	9f 93       	push	r25
    106e:	8f 93       	push	r24
    1070:	0e 94 9e 11 	call	0x233c	; 0x233c <sprintf>
	drawstring(buff,50,0,s1);                        //print score
    1074:	2b e4       	ldi	r18, 0x4B	; 75
    1076:	35 e0       	ldi	r19, 0x05	; 5
    1078:	40 e0       	ldi	r20, 0x00	; 0
    107a:	62 e3       	ldi	r22, 0x32	; 50
    107c:	84 e0       	ldi	r24, 0x04	; 4
    107e:	91 e0       	ldi	r25, 0x01	; 1
    1080:	0e 94 68 04 	call	0x8d0	; 0x8d0 <drawstring>
	drawstring(buff,76,0,s2);
    1084:	2b e5       	ldi	r18, 0x5B	; 91
    1086:	35 e0       	ldi	r19, 0x05	; 5
    1088:	40 e0       	ldi	r20, 0x00	; 0
    108a:	6c e4       	ldi	r22, 0x4C	; 76
    108c:	84 e0       	ldi	r24, 0x04	; 4
    108e:	91 e0       	ldi	r25, 0x01	; 1
    1090:	0e 94 68 04 	call	0x8d0	; 0x8d0 <drawstring>
	
	ball1.x = 64;                                   //ball initialization
    1094:	e7 e5       	ldi	r30, 0x57	; 87
    1096:	f5 e0       	ldi	r31, 0x05	; 5
    1098:	80 e4       	ldi	r24, 0x40	; 64
    109a:	80 83       	st	Z, r24
	ball1.y = 32;
    109c:	80 e2       	ldi	r24, 0x20	; 32
    109e:	81 83       	std	Z+1, r24	; 0x01
	ball1.flagx = rand()%2;                         //create random direction
    10a0:	0e 94 64 10 	call	0x20c8	; 0x20c8 <rand>
    10a4:	81 70       	andi	r24, 0x01	; 1
    10a6:	90 78       	andi	r25, 0x80	; 128
    10a8:	2d b7       	in	r18, 0x3d	; 61
    10aa:	3e b7       	in	r19, 0x3e	; 62
    10ac:	24 5f       	subi	r18, 0xF4	; 244
    10ae:	3f 4f       	sbci	r19, 0xFF	; 255
    10b0:	0f b6       	in	r0, 0x3f	; 63
    10b2:	f8 94       	cli
    10b4:	3e bf       	out	0x3e, r19	; 62
    10b6:	0f be       	out	0x3f, r0	; 63
    10b8:	2d bf       	out	0x3d, r18	; 61
    10ba:	99 23       	and	r25, r25
    10bc:	24 f4       	brge	.+8      	; 0x10c6 <init_game+0x200>
    10be:	01 97       	sbiw	r24, 0x01	; 1
    10c0:	8e 6f       	ori	r24, 0xFE	; 254
    10c2:	9f 6f       	ori	r25, 0xFF	; 255
    10c4:	01 96       	adiw	r24, 0x01	; 1
    10c6:	80 93 59 05 	sts	0x0559, r24	; 0x800559 <ball1+0x2>
	ball1.flagy = rand()%2;
    10ca:	0e 94 64 10 	call	0x20c8	; 0x20c8 <rand>
    10ce:	81 70       	andi	r24, 0x01	; 1
    10d0:	90 78       	andi	r25, 0x80	; 128
    10d2:	99 23       	and	r25, r25
    10d4:	24 f4       	brge	.+8      	; 0x10de <init_game+0x218>
    10d6:	01 97       	sbiw	r24, 0x01	; 1
    10d8:	8e 6f       	ori	r24, 0xFE	; 254
    10da:	9f 6f       	ori	r25, 0xFF	; 255
    10dc:	01 96       	adiw	r24, 0x01	; 1
    10de:	98 2f       	mov	r25, r24
    10e0:	e7 e5       	ldi	r30, 0x57	; 87
    10e2:	f5 e0       	ldi	r31, 0x05	; 5
    10e4:	83 83       	std	Z+3, r24	; 0x03
	if(ball1.flagx == 0){
    10e6:	82 81       	ldd	r24, Z+2	; 0x02
    10e8:	81 11       	cpse	r24, r1
    10ea:	07 c0       	rjmp	.+14     	; 0x10fa <init_game+0x234>
		x_direct = -1;
    10ec:	2f ef       	ldi	r18, 0xFF	; 255
    10ee:	3f ef       	ldi	r19, 0xFF	; 255
    10f0:	30 93 45 05 	sts	0x0545, r19	; 0x800545 <x_direct+0x1>
    10f4:	20 93 44 05 	sts	0x0544, r18	; 0x800544 <x_direct>
    10f8:	06 c0       	rjmp	.+12     	; 0x1106 <init_game+0x240>
	}
	else{
		x_direct = 1;
    10fa:	21 e0       	ldi	r18, 0x01	; 1
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	30 93 45 05 	sts	0x0545, r19	; 0x800545 <x_direct+0x1>
    1102:	20 93 44 05 	sts	0x0544, r18	; 0x800544 <x_direct>
	}
	if(ball1.flagy == 0){
    1106:	91 11       	cpse	r25, r1
    1108:	07 c0       	rjmp	.+14     	; 0x1118 <init_game+0x252>
		y_direct = -1;
    110a:	8f ef       	ldi	r24, 0xFF	; 255
    110c:	9f ef       	ldi	r25, 0xFF	; 255
    110e:	90 93 43 05 	sts	0x0543, r25	; 0x800543 <y_direct+0x1>
    1112:	80 93 42 05 	sts	0x0542, r24	; 0x800542 <y_direct>
    1116:	06 c0       	rjmp	.+12     	; 0x1124 <init_game+0x25e>
	}
	else{
		y_direct = 1;
    1118:	81 e0       	ldi	r24, 0x01	; 1
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	90 93 43 05 	sts	0x0543, r25	; 0x800543 <y_direct+0x1>
    1120:	80 93 42 05 	sts	0x0542, r24	; 0x800542 <y_direct>
	}
	
	fillcircle(buff,ball1.x,ball1.y,2,displayChar);             //draw the ball
    1124:	e7 e5       	ldi	r30, 0x57	; 87
    1126:	f5 e0       	ldi	r31, 0x05	; 5
    1128:	00 91 4a 05 	lds	r16, 0x054A	; 0x80054a <displayChar>
    112c:	22 e0       	ldi	r18, 0x02	; 2
    112e:	41 81       	ldd	r20, Z+1	; 0x01
    1130:	60 81       	ld	r22, Z
    1132:	84 e0       	ldi	r24, 0x04	; 4
    1134:	91 e0       	ldi	r25, 0x01	; 1
    1136:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fillcircle>
	write_buffer(buff);
    113a:	84 e0       	ldi	r24, 0x04	; 4
    113c:	91 e0       	ldi	r25, 0x01	; 1
    113e:	0e 94 c5 03 	call	0x78a	; 0x78a <write_buffer>
	PORTB &= ~(1<<PORTB0);                                     //change the background color back
    1142:	28 98       	cbi	0x05, 0	; 5
}
    1144:	df 91       	pop	r29
    1146:	cf 91       	pop	r28
    1148:	0f 91       	pop	r16
    114a:	ef 90       	pop	r14
    114c:	08 95       	ret

0000114e <init_x>:

void init_x()
{
	DDRC &= ~(1 << PORTC3);	
    114e:	3b 98       	cbi	0x07, 3	; 7
	DDRC |= (1 << PORTC0) | (1 << PORTC2);
    1150:	87 b1       	in	r24, 0x07	; 7
    1152:	85 60       	ori	r24, 0x05	; 5
    1154:	87 b9       	out	0x07, r24	; 7
	PORTC &= ~(1 << PORTC2);
    1156:	42 98       	cbi	0x08, 2	; 8
	PORTC |= (1 << PORTC0);
    1158:	40 9a       	sbi	0x08, 0	; 8
	DDRC &= ~(1 << PORTC1);	
    115a:	39 98       	cbi	0x07, 1	; 7
	
	PORTC |= (1 << PORTC1);
    115c:	41 9a       	sbi	0x08, 1	; 8
	ADMUX |= (1 << MUX0);
    115e:	ec e7       	ldi	r30, 0x7C	; 124
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	80 81       	ld	r24, Z
    1164:	81 60       	ori	r24, 0x01	; 1
    1166:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);
    1168:	ea e7       	ldi	r30, 0x7A	; 122
    116a:	f0 e0       	ldi	r31, 0x00	; 0
    116c:	80 81       	ld	r24, Z
    116e:	80 64       	ori	r24, 0x40	; 64
    1170:	80 83       	st	Z, r24
    1172:	08 95       	ret

00001174 <get_x>:
}

unsigned int get_x(int x)
{
	ADCSRA &= ~(1 << ADSC);
    1174:	ea e7       	ldi	r30, 0x7A	; 122
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	20 81       	ld	r18, Z
    117a:	2f 7b       	andi	r18, 0xBF	; 191
    117c:	20 83       	st	Z, r18
	return ((x - 89) * 33/(860 - 89))*4;
    117e:	9c 01       	movw	r18, r24
    1180:	29 55       	subi	r18, 0x59	; 89
    1182:	31 09       	sbc	r19, r1
    1184:	41 e2       	ldi	r20, 0x21	; 33
    1186:	42 9f       	mul	r20, r18
    1188:	c0 01       	movw	r24, r0
    118a:	43 9f       	mul	r20, r19
    118c:	90 0d       	add	r25, r0
    118e:	11 24       	eor	r1, r1
    1190:	63 e0       	ldi	r22, 0x03	; 3
    1192:	73 e0       	ldi	r23, 0x03	; 3
    1194:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__divmodhi4>
}
    1198:	cb 01       	movw	r24, r22
    119a:	88 0f       	add	r24, r24
    119c:	99 1f       	adc	r25, r25
    119e:	88 0f       	add	r24, r24
    11a0:	99 1f       	adc	r25, r25
    11a2:	08 95       	ret

000011a4 <init_y>:

void init_y()
{
	DDRC &= ~(1 << PORTC2);
    11a4:	3a 98       	cbi	0x07, 2	; 7
	DDRC |= (1 << PORTC1) | (1 << PORTC3);
    11a6:	87 b1       	in	r24, 0x07	; 7
    11a8:	8a 60       	ori	r24, 0x0A	; 10
    11aa:	87 b9       	out	0x07, r24	; 7
	PORTC &= ~(1 << PORTC3);
    11ac:	43 98       	cbi	0x08, 3	; 8
	PORTC |= (1 << PORTC1);
    11ae:	41 9a       	sbi	0x08, 1	; 8
	DDRC &= ~(1 << PORTC0);
    11b0:	38 98       	cbi	0x07, 0	; 7
	
	PORTC |= (1 << PORTC0);
    11b2:	40 9a       	sbi	0x08, 0	; 8
	ADMUX &= ~(1 << MUX0);
    11b4:	ec e7       	ldi	r30, 0x7C	; 124
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	80 81       	ld	r24, Z
    11ba:	8e 7f       	andi	r24, 0xFE	; 254
    11bc:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);
    11be:	ea e7       	ldi	r30, 0x7A	; 122
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	80 81       	ld	r24, Z
    11c4:	80 64       	ori	r24, 0x40	; 64
    11c6:	80 83       	st	Z, r24
    11c8:	08 95       	ret

000011ca <get_y>:
}

unsigned int get_y(int y)
{
	ADCSRA &= ~(1 << ADSC);
    11ca:	ea e7       	ldi	r30, 0x7A	; 122
    11cc:	f0 e0       	ldi	r31, 0x00	; 0
    11ce:	20 81       	ld	r18, Z
    11d0:	2f 7b       	andi	r18, 0xBF	; 191
    11d2:	20 83       	st	Z, r18
	return ((y - 125) * 33/(640 - 125))*2;
    11d4:	9c 01       	movw	r18, r24
    11d6:	2d 57       	subi	r18, 0x7D	; 125
    11d8:	31 09       	sbc	r19, r1
    11da:	41 e2       	ldi	r20, 0x21	; 33
    11dc:	42 9f       	mul	r20, r18
    11de:	c0 01       	movw	r24, r0
    11e0:	43 9f       	mul	r20, r19
    11e2:	90 0d       	add	r25, r0
    11e4:	11 24       	eor	r1, r1
    11e6:	63 e0       	ldi	r22, 0x03	; 3
    11e8:	72 e0       	ldi	r23, 0x02	; 2
    11ea:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__divmodhi4>
}
    11ee:	cb 01       	movw	r24, r22
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	08 95       	ret

000011f6 <main>:

int main(void)
{
	uart_init();
    11f6:	0e 94 48 07 	call	0xe90	; 0xe90 <uart_init>
	//setting up the gpio for backlight
	DDRD |= 0x80;
    11fa:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
    11fc:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
    11fe:	8b b1       	in	r24, 0x0b	; 11
    1200:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x05;
    1202:	84 b1       	in	r24, 0x04	; 4
    1204:	85 60       	ori	r24, 0x05	; 5
    1206:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
    1208:	85 b1       	in	r24, 0x05	; 5
    120a:	8a 7f       	andi	r24, 0xFA	; 250
    120c:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
    120e:	85 b1       	in	r24, 0x05	; 5
    1210:	85 b9       	out	0x05, r24	; 5
	
	DDRB |= (1<<PORTB1);                                           //Use PB1 as buzzer output
    1212:	21 9a       	sbi	0x04, 1	; 4
	PORTB &= ~(1<<PORTB1);
    1214:	29 98       	cbi	0x05, 1	; 5
	
	ADMUX |= (1 << REFS0);                                            //reference 5V
    1216:	ec e7       	ldi	r30, 0x7C	; 124
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	80 81       	ld	r24, Z
    121c:	80 64       	ori	r24, 0x40	; 64
    121e:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);                                            //enable ADC
    1220:	ea e7       	ldi	r30, 0x7A	; 122
    1222:	f0 e0       	ldi	r31, 0x00	; 0
    1224:	80 81       	ld	r24, Z
    1226:	80 68       	ori	r24, 0x80	; 128
    1228:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);             //factor 128
    122a:	80 81       	ld	r24, Z
    122c:	87 60       	ori	r24, 0x07	; 7
    122e:	80 83       	st	Z, r24
	ADCSRA &= ~(1 << ADATE);                                           //single ADC bit
    1230:	80 81       	ld	r24, Z
    1232:	8f 7d       	andi	r24, 0xDF	; 223
    1234:	80 83       	st	Z, r24
	
	//lcd initialization
	lcd_init();
    1236:	0e 94 68 03 	call	0x6d0	; 0x6d0 <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
    123a:	8f ea       	ldi	r24, 0xAF	; 175
    123c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
	lcd_set_brightness(0x18);
    1240:	88 e1       	ldi	r24, 0x18	; 24
    1242:	0e 94 ba 03 	call	0x774	; 0x774 <lcd_set_brightness>
	write_buffer(buff);
    1246:	84 e0       	ldi	r24, 0x04	; 4
    1248:	91 e0       	ldi	r25, 0x01	; 1
    124a:	0e 94 c5 03 	call	0x78a	; 0x78a <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    124e:	2f ef       	ldi	r18, 0xFF	; 255
    1250:	83 ed       	ldi	r24, 0xD3	; 211
    1252:	90 e3       	ldi	r25, 0x30	; 48
    1254:	21 50       	subi	r18, 0x01	; 1
    1256:	80 40       	sbci	r24, 0x00	; 0
    1258:	90 40       	sbci	r25, 0x00	; 0
    125a:	e1 f7       	brne	.-8      	; 0x1254 <main+0x5e>
    125c:	00 c0       	rjmp	.+0      	; 0x125e <main+0x68>
    125e:	00 00       	nop
	_delay_ms(1000);
	clear_buffer(buff);
    1260:	84 e0       	ldi	r24, 0x04	; 4
    1262:	91 e0       	ldi	r25, 0x01	; 1
    1264:	0e 94 04 04 	call	0x808	; 0x808 <clear_buffer>
	
	init_game();
    1268:	0e 94 63 07 	call	0xec6	; 0xec6 <init_game>
	
	TCCR1B |= (1 << CS12)|(1 << CS10)|(1 << WGM12);
    126c:	e1 e8       	ldi	r30, 0x81	; 129
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	80 81       	ld	r24, Z
    1272:	8d 60       	ori	r24, 0x0D	; 13
    1274:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1A);
    1276:	ef e6       	ldi	r30, 0x6F	; 111
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	80 81       	ld	r24, Z
    127c:	82 60       	ori	r24, 0x02	; 2
    127e:	80 83       	st	Z, r24
	OCR1A = (rand()%10 + 1) * 50 + 750;
    1280:	0e 94 64 10 	call	0x20c8	; 0x20c8 <rand>
    1284:	6a e0       	ldi	r22, 0x0A	; 10
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__divmodhi4>
    128c:	9c 01       	movw	r18, r24
    128e:	2f 5f       	subi	r18, 0xFF	; 255
    1290:	3f 4f       	sbci	r19, 0xFF	; 255
    1292:	42 e3       	ldi	r20, 0x32	; 50
    1294:	42 9f       	mul	r20, r18
    1296:	c0 01       	movw	r24, r0
    1298:	43 9f       	mul	r20, r19
    129a:	90 0d       	add	r25, r0
    129c:	11 24       	eor	r1, r1
    129e:	82 51       	subi	r24, 0x12	; 18
    12a0:	9d 4f       	sbci	r25, 0xFD	; 253
    12a2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    12a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCNT1 = 0;
    12aa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12ae:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	sei();
    12b2:	78 94       	sei
	while (1)
	{
		
		init_x();
		_delay_us(300);
		x_axis = get_x(ADC);
    12b4:	c8 e7       	ldi	r28, 0x78	; 120
    12b6:	d0 e0       	ldi	r29, 0x00	; 0
	sei();
	
	while (1)
	{
		
		init_x();
    12b8:	0e 94 a7 08 	call	0x114e	; 0x114e <init_x>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    12bc:	8f ea       	ldi	r24, 0xAF	; 175
    12be:	94 e0       	ldi	r25, 0x04	; 4
    12c0:	01 97       	sbiw	r24, 0x01	; 1
    12c2:	f1 f7       	brne	.-4      	; 0x12c0 <main+0xca>
    12c4:	00 c0       	rjmp	.+0      	; 0x12c6 <main+0xd0>
    12c6:	00 00       	nop
		_delay_us(300);
		x_axis = get_x(ADC);
    12c8:	88 81       	ld	r24, Y
    12ca:	99 81       	ldd	r25, Y+1	; 0x01
    12cc:	0e 94 ba 08 	call	0x1174	; 0x1174 <get_x>
    12d0:	90 93 49 05 	sts	0x0549, r25	; 0x800549 <x_axis+0x1>
    12d4:	80 93 48 05 	sts	0x0548, r24	; 0x800548 <x_axis>
		
		init_y();
    12d8:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <init_y>
    12dc:	8f ea       	ldi	r24, 0xAF	; 175
    12de:	94 e0       	ldi	r25, 0x04	; 4
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	f1 f7       	brne	.-4      	; 0x12e0 <main+0xea>
    12e4:	00 c0       	rjmp	.+0      	; 0x12e6 <main+0xf0>
    12e6:	00 00       	nop
		_delay_us(300);
		y_axis = get_y(ADC);
    12e8:	88 81       	ld	r24, Y
    12ea:	99 81       	ldd	r25, Y+1	; 0x01
    12ec:	0e 94 e5 08 	call	0x11ca	; 0x11ca <get_y>
    12f0:	90 93 47 05 	sts	0x0547, r25	; 0x800547 <y_axis+0x1>
    12f4:	80 93 46 05 	sts	0x0546, r24	; 0x800546 <y_axis>

		drawrect(buff,0,0,128,64,displayChar);
    12f8:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    12fc:	00 e4       	ldi	r16, 0x40	; 64
    12fe:	20 e8       	ldi	r18, 0x80	; 128
    1300:	40 e0       	ldi	r20, 0x00	; 0
    1302:	60 e0       	ldi	r22, 0x00	; 0
    1304:	84 e0       	ldi	r24, 0x04	; 4
    1306:	91 e0       	ldi	r25, 0x01	; 1
    1308:	0e 94 97 05 	call	0xb2e	; 0xb2e <drawrect>
		drawline(buff,64,0,64,2,displayChar);
    130c:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1310:	02 e0       	ldi	r16, 0x02	; 2
    1312:	20 e4       	ldi	r18, 0x40	; 64
    1314:	40 e0       	ldi	r20, 0x00	; 0
    1316:	60 e4       	ldi	r22, 0x40	; 64
    1318:	84 e0       	ldi	r24, 0x04	; 4
    131a:	91 e0       	ldi	r25, 0x01	; 1
    131c:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,6,64,8,displayChar);
    1320:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1324:	08 e0       	ldi	r16, 0x08	; 8
    1326:	20 e4       	ldi	r18, 0x40	; 64
    1328:	46 e0       	ldi	r20, 0x06	; 6
    132a:	60 e4       	ldi	r22, 0x40	; 64
    132c:	84 e0       	ldi	r24, 0x04	; 4
    132e:	91 e0       	ldi	r25, 0x01	; 1
    1330:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,12,64,14,displayChar);
    1334:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1338:	0e e0       	ldi	r16, 0x0E	; 14
    133a:	20 e4       	ldi	r18, 0x40	; 64
    133c:	4c e0       	ldi	r20, 0x0C	; 12
    133e:	60 e4       	ldi	r22, 0x40	; 64
    1340:	84 e0       	ldi	r24, 0x04	; 4
    1342:	91 e0       	ldi	r25, 0x01	; 1
    1344:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,18,64,20,displayChar);
    1348:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    134c:	04 e1       	ldi	r16, 0x14	; 20
    134e:	20 e4       	ldi	r18, 0x40	; 64
    1350:	42 e1       	ldi	r20, 0x12	; 18
    1352:	60 e4       	ldi	r22, 0x40	; 64
    1354:	84 e0       	ldi	r24, 0x04	; 4
    1356:	91 e0       	ldi	r25, 0x01	; 1
    1358:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,24,64,26,displayChar);
    135c:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1360:	0a e1       	ldi	r16, 0x1A	; 26
    1362:	20 e4       	ldi	r18, 0x40	; 64
    1364:	48 e1       	ldi	r20, 0x18	; 24
    1366:	60 e4       	ldi	r22, 0x40	; 64
    1368:	84 e0       	ldi	r24, 0x04	; 4
    136a:	91 e0       	ldi	r25, 0x01	; 1
    136c:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,37,64,39,displayChar);
    1370:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1374:	07 e2       	ldi	r16, 0x27	; 39
    1376:	20 e4       	ldi	r18, 0x40	; 64
    1378:	45 e2       	ldi	r20, 0x25	; 37
    137a:	60 e4       	ldi	r22, 0x40	; 64
    137c:	84 e0       	ldi	r24, 0x04	; 4
    137e:	91 e0       	ldi	r25, 0x01	; 1
    1380:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,43,64,45,displayChar);
    1384:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1388:	0d e2       	ldi	r16, 0x2D	; 45
    138a:	20 e4       	ldi	r18, 0x40	; 64
    138c:	4b e2       	ldi	r20, 0x2B	; 43
    138e:	60 e4       	ldi	r22, 0x40	; 64
    1390:	84 e0       	ldi	r24, 0x04	; 4
    1392:	91 e0       	ldi	r25, 0x01	; 1
    1394:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,49,64,51,displayChar);
    1398:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    139c:	03 e3       	ldi	r16, 0x33	; 51
    139e:	20 e4       	ldi	r18, 0x40	; 64
    13a0:	41 e3       	ldi	r20, 0x31	; 49
    13a2:	60 e4       	ldi	r22, 0x40	; 64
    13a4:	84 e0       	ldi	r24, 0x04	; 4
    13a6:	91 e0       	ldi	r25, 0x01	; 1
    13a8:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,55,64,57,displayChar);
    13ac:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    13b0:	09 e3       	ldi	r16, 0x39	; 57
    13b2:	20 e4       	ldi	r18, 0x40	; 64
    13b4:	47 e3       	ldi	r20, 0x37	; 55
    13b6:	60 e4       	ldi	r22, 0x40	; 64
    13b8:	84 e0       	ldi	r24, 0x04	; 4
    13ba:	91 e0       	ldi	r25, 0x01	; 1
    13bc:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
		drawline(buff,64,61,64,63,displayChar);
    13c0:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    13c4:	0f e3       	ldi	r16, 0x3F	; 63
    13c6:	20 e4       	ldi	r18, 0x40	; 64
    13c8:	4d e3       	ldi	r20, 0x3D	; 61
    13ca:	60 e4       	ldi	r22, 0x40	; 64
    13cc:	84 e0       	ldi	r24, 0x04	; 4
    13ce:	91 e0       	ldi	r25, 0x01	; 1
    13d0:	0e 94 8f 04 	call	0x91e	; 0x91e <drawline>
    13d4:	71 cf       	rjmp	.-286    	; 0x12b8 <main+0xc2>

000013d6 <__vector_11>:

	}
}

ISR(TIMER1_COMPA_vect)
{
    13d6:	1f 92       	push	r1
    13d8:	0f 92       	push	r0
    13da:	0f b6       	in	r0, 0x3f	; 63
    13dc:	0f 92       	push	r0
    13de:	11 24       	eor	r1, r1
    13e0:	ef 92       	push	r14
    13e2:	ff 92       	push	r15
    13e4:	0f 93       	push	r16
    13e6:	1f 93       	push	r17
    13e8:	2f 93       	push	r18
    13ea:	3f 93       	push	r19
    13ec:	4f 93       	push	r20
    13ee:	5f 93       	push	r21
    13f0:	6f 93       	push	r22
    13f2:	7f 93       	push	r23
    13f4:	8f 93       	push	r24
    13f6:	9f 93       	push	r25
    13f8:	af 93       	push	r26
    13fa:	bf 93       	push	r27
    13fc:	cf 93       	push	r28
    13fe:	df 93       	push	r29
    1400:	ef 93       	push	r30
    1402:	ff 93       	push	r31
	if(flag == 1){                                         //change the state of buzzer
    1404:	80 91 38 05 	lds	r24, 0x0538	; 0x800538 <__data_end>
    1408:	90 91 39 05 	lds	r25, 0x0539	; 0x800539 <__data_end+0x1>
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	29 f4       	brne	.+10     	; 0x141a <__vector_11+0x44>
		flag = 0;
    1410:	10 92 39 05 	sts	0x0539, r1	; 0x800539 <__data_end+0x1>
    1414:	10 92 38 05 	sts	0x0538, r1	; 0x800538 <__data_end>
		PORTB &= ~(1<<PORTB1);
    1418:	29 98       	cbi	0x05, 1	; 5
	}
	clearcircle(buff,ball1.x,ball1.y,2,displayChar);        //clear the old circle
    141a:	00 91 4a 05 	lds	r16, 0x054A	; 0x80054a <displayChar>
    141e:	10 e0       	ldi	r17, 0x00	; 0
    1420:	c7 e5       	ldi	r28, 0x57	; 87
    1422:	d5 e0       	ldi	r29, 0x05	; 5
    1424:	49 81       	ldd	r20, Y+1	; 0x01
    1426:	04 2e       	mov	r0, r20
    1428:	00 0c       	add	r0, r0
    142a:	55 0b       	sbc	r21, r21
    142c:	68 81       	ld	r22, Y
    142e:	06 2e       	mov	r0, r22
    1430:	00 0c       	add	r0, r0
    1432:	77 0b       	sbc	r23, r23
    1434:	22 e0       	ldi	r18, 0x02	; 2
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	84 e0       	ldi	r24, 0x04	; 4
    143a:	91 e0       	ldi	r25, 0x01	; 1
    143c:	0e 94 8e 06 	call	0xd1c	; 0xd1c <clearcircle>
	if(ball1.x == 5)                                       
    1440:	88 81       	ld	r24, Y
    1442:	85 30       	cpi	r24, 0x05	; 5
    1444:	09 f0       	breq	.+2      	; 0x1448 <__vector_11+0x72>
    1446:	77 c0       	rjmp	.+238    	; 0x1536 <__vector_11+0x160>
	{
		if(ball1.y >= paddle_y1 && ball1.y <= paddle_y1 + 9){       //if the ball hits the paddle on the left
    1448:	80 91 58 05 	lds	r24, 0x0558	; 0x800558 <ball1+0x1>
    144c:	08 2e       	mov	r0, r24
    144e:	00 0c       	add	r0, r0
    1450:	99 0b       	sbc	r25, r25
    1452:	20 91 16 05 	lds	r18, 0x0516	; 0x800516 <paddle_y1>
    1456:	30 91 17 05 	lds	r19, 0x0517	; 0x800517 <paddle_y1+0x1>
    145a:	82 17       	cp	r24, r18
    145c:	93 07       	cpc	r25, r19
    145e:	e0 f0       	brcs	.+56     	; 0x1498 <__vector_11+0xc2>
    1460:	20 91 16 05 	lds	r18, 0x0516	; 0x800516 <paddle_y1>
    1464:	30 91 17 05 	lds	r19, 0x0517	; 0x800517 <paddle_y1+0x1>
    1468:	27 5f       	subi	r18, 0xF7	; 247
    146a:	3f 4f       	sbci	r19, 0xFF	; 255
    146c:	28 17       	cp	r18, r24
    146e:	39 07       	cpc	r19, r25
    1470:	98 f0       	brcs	.+38     	; 0x1498 <__vector_11+0xc2>
			x_direct = -x_direct;
    1472:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <x_direct>
    1476:	90 91 45 05 	lds	r25, 0x0545	; 0x800545 <x_direct+0x1>
    147a:	91 95       	neg	r25
    147c:	81 95       	neg	r24
    147e:	91 09       	sbc	r25, r1
    1480:	90 93 45 05 	sts	0x0545, r25	; 0x800545 <x_direct+0x1>
    1484:	80 93 44 05 	sts	0x0544, r24	; 0x800544 <x_direct>
			PORTB |= (1<<PORTB1);
    1488:	29 9a       	sbi	0x05, 1	; 5
			flag = 1;
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <__data_end+0x1>
    1492:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <__data_end>
    1496:	4f c0       	rjmp	.+158    	; 0x1536 <__vector_11+0x160>
		}
		else{                                                        //if the ball misses the paddle on the left
			score2++;
    1498:	80 91 3a 05 	lds	r24, 0x053A	; 0x80053a <score2>
    149c:	90 91 3b 05 	lds	r25, 0x053B	; 0x80053b <score2+0x1>
    14a0:	01 96       	adiw	r24, 0x01	; 1
    14a2:	90 93 3b 05 	sts	0x053B, r25	; 0x80053b <score2+0x1>
    14a6:	80 93 3a 05 	sts	0x053A, r24	; 0x80053a <score2>
			clearrect(buff,1,paddle_y1,2,10,displayChar);
    14aa:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <paddle_y1>
    14ae:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <paddle_y1+0x1>
    14b2:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    14b6:	f1 2c       	mov	r15, r1
    14b8:	0a e0       	ldi	r16, 0x0A	; 10
    14ba:	10 e0       	ldi	r17, 0x00	; 0
    14bc:	22 e0       	ldi	r18, 0x02	; 2
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	61 e0       	ldi	r22, 0x01	; 1
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	84 e0       	ldi	r24, 0x04	; 4
    14c6:	91 e0       	ldi	r25, 0x01	; 1
    14c8:	0e 94 57 05 	call	0xaae	; 0xaae <clearrect>
			clearrect(buff,125,paddle_y2,2,10,displayChar);
    14cc:	40 91 14 05 	lds	r20, 0x0514	; 0x800514 <paddle_y2>
    14d0:	50 91 15 05 	lds	r21, 0x0515	; 0x800515 <paddle_y2+0x1>
    14d4:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    14d8:	f1 2c       	mov	r15, r1
    14da:	22 e0       	ldi	r18, 0x02	; 2
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	6d e7       	ldi	r22, 0x7D	; 125
    14e0:	70 e0       	ldi	r23, 0x00	; 0
    14e2:	84 e0       	ldi	r24, 0x04	; 4
    14e4:	91 e0       	ldi	r25, 0x01	; 1
    14e6:	0e 94 57 05 	call	0xaae	; 0xaae <clearrect>
			paddle_y1 = 27;
    14ea:	8b e1       	ldi	r24, 0x1B	; 27
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	90 93 17 05 	sts	0x0517, r25	; 0x800517 <paddle_y1+0x1>
    14f2:	80 93 16 05 	sts	0x0516, r24	; 0x800516 <paddle_y1>
			paddle_y2 = 27;
    14f6:	90 93 15 05 	sts	0x0515, r25	; 0x800515 <paddle_y2+0x1>
    14fa:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <paddle_y2>
			init_game();
    14fe:	0e 94 63 07 	call	0xec6	; 0xec6 <init_game>
			clearcircle(buff,ball1.x,ball1.y,2,displayChar);
    1502:	00 91 4a 05 	lds	r16, 0x054A	; 0x80054a <displayChar>
    1506:	10 e0       	ldi	r17, 0x00	; 0
    1508:	e7 e5       	ldi	r30, 0x57	; 87
    150a:	f5 e0       	ldi	r31, 0x05	; 5
    150c:	41 81       	ldd	r20, Z+1	; 0x01
    150e:	04 2e       	mov	r0, r20
    1510:	00 0c       	add	r0, r0
    1512:	55 0b       	sbc	r21, r21
    1514:	60 81       	ld	r22, Z
    1516:	06 2e       	mov	r0, r22
    1518:	00 0c       	add	r0, r0
    151a:	77 0b       	sbc	r23, r23
    151c:	22 e0       	ldi	r18, 0x02	; 2
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	84 e0       	ldi	r24, 0x04	; 4
    1522:	91 e0       	ldi	r25, 0x01	; 1
    1524:	0e 94 8e 06 	call	0xd1c	; 0xd1c <clearcircle>
			PORTB |= (1<<PORTB1);
    1528:	29 9a       	sbi	0x05, 1	; 5
			flag = 1;
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <__data_end+0x1>
    1532:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <__data_end>
		}
	}
	if(ball1.x == 122)
    1536:	80 91 57 05 	lds	r24, 0x0557	; 0x800557 <ball1>
    153a:	8a 37       	cpi	r24, 0x7A	; 122
    153c:	09 f0       	breq	.+2      	; 0x1540 <__vector_11+0x16a>
    153e:	77 c0       	rjmp	.+238    	; 0x162e <__vector_11+0x258>
	{
		if(ball1.y >= paddle_y2 && ball1.y <= paddle_y2 + 9){          //if the ball hits the paddle on the right
    1540:	80 91 58 05 	lds	r24, 0x0558	; 0x800558 <ball1+0x1>
    1544:	08 2e       	mov	r0, r24
    1546:	00 0c       	add	r0, r0
    1548:	99 0b       	sbc	r25, r25
    154a:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <paddle_y2>
    154e:	30 91 15 05 	lds	r19, 0x0515	; 0x800515 <paddle_y2+0x1>
    1552:	82 17       	cp	r24, r18
    1554:	93 07       	cpc	r25, r19
    1556:	e0 f0       	brcs	.+56     	; 0x1590 <__vector_11+0x1ba>
    1558:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <paddle_y2>
    155c:	30 91 15 05 	lds	r19, 0x0515	; 0x800515 <paddle_y2+0x1>
    1560:	27 5f       	subi	r18, 0xF7	; 247
    1562:	3f 4f       	sbci	r19, 0xFF	; 255
    1564:	28 17       	cp	r18, r24
    1566:	39 07       	cpc	r19, r25
    1568:	98 f0       	brcs	.+38     	; 0x1590 <__vector_11+0x1ba>
			x_direct = -x_direct;
    156a:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <x_direct>
    156e:	90 91 45 05 	lds	r25, 0x0545	; 0x800545 <x_direct+0x1>
    1572:	91 95       	neg	r25
    1574:	81 95       	neg	r24
    1576:	91 09       	sbc	r25, r1
    1578:	90 93 45 05 	sts	0x0545, r25	; 0x800545 <x_direct+0x1>
    157c:	80 93 44 05 	sts	0x0544, r24	; 0x800544 <x_direct>
			PORTB |= (1<<PORTB1);
    1580:	29 9a       	sbi	0x05, 1	; 5
			flag = 1;
    1582:	81 e0       	ldi	r24, 0x01	; 1
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <__data_end+0x1>
    158a:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <__data_end>
    158e:	4f c0       	rjmp	.+158    	; 0x162e <__vector_11+0x258>
		}
		else{                                                           //if the ball misses the paddle on the right
			score1++;
    1590:	80 91 3c 05 	lds	r24, 0x053C	; 0x80053c <score1>
    1594:	90 91 3d 05 	lds	r25, 0x053D	; 0x80053d <score1+0x1>
    1598:	01 96       	adiw	r24, 0x01	; 1
    159a:	90 93 3d 05 	sts	0x053D, r25	; 0x80053d <score1+0x1>
    159e:	80 93 3c 05 	sts	0x053C, r24	; 0x80053c <score1>
			clearrect(buff,1,paddle_y1,2,10,displayChar);
    15a2:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <paddle_y1>
    15a6:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <paddle_y1+0x1>
    15aa:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    15ae:	f1 2c       	mov	r15, r1
    15b0:	0a e0       	ldi	r16, 0x0A	; 10
    15b2:	10 e0       	ldi	r17, 0x00	; 0
    15b4:	22 e0       	ldi	r18, 0x02	; 2
    15b6:	30 e0       	ldi	r19, 0x00	; 0
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	70 e0       	ldi	r23, 0x00	; 0
    15bc:	84 e0       	ldi	r24, 0x04	; 4
    15be:	91 e0       	ldi	r25, 0x01	; 1
    15c0:	0e 94 57 05 	call	0xaae	; 0xaae <clearrect>
			clearrect(buff,125,paddle_y2,2,10,displayChar);
    15c4:	40 91 14 05 	lds	r20, 0x0514	; 0x800514 <paddle_y2>
    15c8:	50 91 15 05 	lds	r21, 0x0515	; 0x800515 <paddle_y2+0x1>
    15cc:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    15d0:	f1 2c       	mov	r15, r1
    15d2:	22 e0       	ldi	r18, 0x02	; 2
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	6d e7       	ldi	r22, 0x7D	; 125
    15d8:	70 e0       	ldi	r23, 0x00	; 0
    15da:	84 e0       	ldi	r24, 0x04	; 4
    15dc:	91 e0       	ldi	r25, 0x01	; 1
    15de:	0e 94 57 05 	call	0xaae	; 0xaae <clearrect>
			paddle_y1 = 27;
    15e2:	8b e1       	ldi	r24, 0x1B	; 27
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	90 93 17 05 	sts	0x0517, r25	; 0x800517 <paddle_y1+0x1>
    15ea:	80 93 16 05 	sts	0x0516, r24	; 0x800516 <paddle_y1>
			paddle_y2 = 27;
    15ee:	90 93 15 05 	sts	0x0515, r25	; 0x800515 <paddle_y2+0x1>
    15f2:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <paddle_y2>
			init_game();
    15f6:	0e 94 63 07 	call	0xec6	; 0xec6 <init_game>
			clearcircle(buff,ball1.x,ball1.y,2,displayChar);
    15fa:	00 91 4a 05 	lds	r16, 0x054A	; 0x80054a <displayChar>
    15fe:	10 e0       	ldi	r17, 0x00	; 0
    1600:	e7 e5       	ldi	r30, 0x57	; 87
    1602:	f5 e0       	ldi	r31, 0x05	; 5
    1604:	41 81       	ldd	r20, Z+1	; 0x01
    1606:	04 2e       	mov	r0, r20
    1608:	00 0c       	add	r0, r0
    160a:	55 0b       	sbc	r21, r21
    160c:	60 81       	ld	r22, Z
    160e:	06 2e       	mov	r0, r22
    1610:	00 0c       	add	r0, r0
    1612:	77 0b       	sbc	r23, r23
    1614:	22 e0       	ldi	r18, 0x02	; 2
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	84 e0       	ldi	r24, 0x04	; 4
    161a:	91 e0       	ldi	r25, 0x01	; 1
    161c:	0e 94 8e 06 	call	0xd1c	; 0xd1c <clearcircle>
			PORTB |= (1<<PORTB1);
    1620:	29 9a       	sbi	0x05, 1	; 5
			flag = 1;
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <__data_end+0x1>
    162a:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <__data_end>
		}
	}
	if(ball1.y == 3 || ball1.y == 60)                                   //if the ball hits the upper or bottom bound
    162e:	80 91 58 05 	lds	r24, 0x0558	; 0x800558 <ball1+0x1>
    1632:	83 30       	cpi	r24, 0x03	; 3
    1634:	11 f0       	breq	.+4      	; 0x163a <__vector_11+0x264>
    1636:	8c 33       	cpi	r24, 0x3C	; 60
    1638:	91 f4       	brne	.+36     	; 0x165e <__vector_11+0x288>
	{
		y_direct = -y_direct;
    163a:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <y_direct>
    163e:	90 91 43 05 	lds	r25, 0x0543	; 0x800543 <y_direct+0x1>
    1642:	91 95       	neg	r25
    1644:	81 95       	neg	r24
    1646:	91 09       	sbc	r25, r1
    1648:	90 93 43 05 	sts	0x0543, r25	; 0x800543 <y_direct+0x1>
    164c:	80 93 42 05 	sts	0x0542, r24	; 0x800542 <y_direct>
		PORTB |= (1<<PORTB1);
    1650:	29 9a       	sbi	0x05, 1	; 5
		flag = 1;
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <__data_end+0x1>
    165a:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <__data_end>
	}
	
	
	ball1.x += x_direct;                                           //change the direction of the ball
    165e:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <x_direct>
    1662:	90 91 45 05 	lds	r25, 0x0545	; 0x800545 <x_direct+0x1>
    1666:	e7 e5       	ldi	r30, 0x57	; 87
    1668:	f5 e0       	ldi	r31, 0x05	; 5
    166a:	90 81       	ld	r25, Z
    166c:	89 0f       	add	r24, r25
    166e:	80 83       	st	Z, r24
	ball1.y += y_direct;
    1670:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <y_direct>
    1674:	90 91 43 05 	lds	r25, 0x0543	; 0x800543 <y_direct+0x1>
    1678:	91 81       	ldd	r25, Z+1	; 0x01
    167a:	89 0f       	add	r24, r25
    167c:	81 83       	std	Z+1, r24	; 0x01
	
	if(x_axis < 64 && x_axis >= 0){                                 //the paddle on the left
    167e:	80 91 48 05 	lds	r24, 0x0548	; 0x800548 <x_axis>
    1682:	90 91 49 05 	lds	r25, 0x0549	; 0x800549 <x_axis+0x1>
    1686:	80 34       	cpi	r24, 0x40	; 64
    1688:	91 05       	cpc	r25, r1
    168a:	08 f0       	brcs	.+2      	; 0x168e <__vector_11+0x2b8>
    168c:	4c c0       	rjmp	.+152    	; 0x1726 <__vector_11+0x350>
		clearrect(buff,1,paddle_y1,2,10);
    168e:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <paddle_y1>
    1692:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <paddle_y1+0x1>
    1696:	0a e0       	ldi	r16, 0x0A	; 10
    1698:	10 e0       	ldi	r17, 0x00	; 0
    169a:	22 e0       	ldi	r18, 0x02	; 2
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	61 e0       	ldi	r22, 0x01	; 1
    16a0:	70 e0       	ldi	r23, 0x00	; 0
    16a2:	84 e0       	ldi	r24, 0x04	; 4
    16a4:	91 e0       	ldi	r25, 0x01	; 1
    16a6:	0e 94 57 05 	call	0xaae	; 0xaae <clearrect>
		if(y_axis > 64 || y_axis < 0){
    16aa:	80 91 46 05 	lds	r24, 0x0546	; 0x800546 <y_axis>
    16ae:	90 91 47 05 	lds	r25, 0x0547	; 0x800547 <y_axis+0x1>
    16b2:	81 34       	cpi	r24, 0x41	; 65
    16b4:	91 05       	cpc	r25, r1
    16b6:	28 f0       	brcs	.+10     	; 0x16c2 <__vector_11+0x2ec>
			paddle_speed1 = 0;
    16b8:	10 92 41 05 	sts	0x0541, r1	; 0x800541 <paddle_speed1+0x1>
    16bc:	10 92 40 05 	sts	0x0540, r1	; 0x800540 <paddle_speed1>
    16c0:	16 c0       	rjmp	.+44     	; 0x16ee <__vector_11+0x318>
		}
		else if(y_axis > paddle_y1 + 5){                           //paddle go down
    16c2:	20 91 16 05 	lds	r18, 0x0516	; 0x800516 <paddle_y1>
    16c6:	30 91 17 05 	lds	r19, 0x0517	; 0x800517 <paddle_y1+0x1>
    16ca:	2b 5f       	subi	r18, 0xFB	; 251
    16cc:	3f 4f       	sbci	r19, 0xFF	; 255
    16ce:	28 17       	cp	r18, r24
    16d0:	39 07       	cpc	r19, r25
    16d2:	38 f4       	brcc	.+14     	; 0x16e2 <__vector_11+0x30c>
			paddle_speed1 = 1;
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	90 93 41 05 	sts	0x0541, r25	; 0x800541 <paddle_speed1+0x1>
    16dc:	80 93 40 05 	sts	0x0540, r24	; 0x800540 <paddle_speed1>
    16e0:	06 c0       	rjmp	.+12     	; 0x16ee <__vector_11+0x318>
		}
		else{                                                      //paddle go up
			paddle_speed1 = -1;
    16e2:	8f ef       	ldi	r24, 0xFF	; 255
    16e4:	9f ef       	ldi	r25, 0xFF	; 255
    16e6:	90 93 41 05 	sts	0x0541, r25	; 0x800541 <paddle_speed1+0x1>
    16ea:	80 93 40 05 	sts	0x0540, r24	; 0x800540 <paddle_speed1>
		}
		paddle_y1 += paddle_speed1;
    16ee:	20 91 40 05 	lds	r18, 0x0540	; 0x800540 <paddle_speed1>
    16f2:	30 91 41 05 	lds	r19, 0x0541	; 0x800541 <paddle_speed1+0x1>
    16f6:	80 91 16 05 	lds	r24, 0x0516	; 0x800516 <paddle_y1>
    16fa:	90 91 17 05 	lds	r25, 0x0517	; 0x800517 <paddle_y1+0x1>
    16fe:	82 0f       	add	r24, r18
    1700:	93 1f       	adc	r25, r19
    1702:	90 93 17 05 	sts	0x0517, r25	; 0x800517 <paddle_y1+0x1>
    1706:	80 93 16 05 	sts	0x0516, r24	; 0x800516 <paddle_y1>
		fillrect(buff,1,paddle_y1,2,10,displayChar);
    170a:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <paddle_y1>
    170e:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <paddle_y1+0x1>
    1712:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1716:	0a e0       	ldi	r16, 0x0A	; 10
    1718:	22 e0       	ldi	r18, 0x02	; 2
    171a:	61 e0       	ldi	r22, 0x01	; 1
    171c:	84 e0       	ldi	r24, 0x04	; 4
    171e:	91 e0       	ldi	r25, 0x01	; 1
    1720:	0e 94 14 05 	call	0xa28	; 0xa28 <fillrect>
    1724:	73 c0       	rjmp	.+230    	; 0x180c <__vector_11+0x436>
	}
	else if(x_axis < 128 && x_axis >= 64){                        //the paddle on the right
    1726:	80 54       	subi	r24, 0x40	; 64
    1728:	91 09       	sbc	r25, r1
    172a:	80 34       	cpi	r24, 0x40	; 64
    172c:	91 05       	cpc	r25, r1
    172e:	08 f0       	brcs	.+2      	; 0x1732 <__vector_11+0x35c>
    1730:	4c c0       	rjmp	.+152    	; 0x17ca <__vector_11+0x3f4>
		clearrect(buff,125,paddle_y2,2,10);
    1732:	40 91 14 05 	lds	r20, 0x0514	; 0x800514 <paddle_y2>
    1736:	50 91 15 05 	lds	r21, 0x0515	; 0x800515 <paddle_y2+0x1>
    173a:	0a e0       	ldi	r16, 0x0A	; 10
    173c:	10 e0       	ldi	r17, 0x00	; 0
    173e:	22 e0       	ldi	r18, 0x02	; 2
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	6d e7       	ldi	r22, 0x7D	; 125
    1744:	70 e0       	ldi	r23, 0x00	; 0
    1746:	84 e0       	ldi	r24, 0x04	; 4
    1748:	91 e0       	ldi	r25, 0x01	; 1
    174a:	0e 94 57 05 	call	0xaae	; 0xaae <clearrect>
		if(y_axis > 64 || y_axis < 0){                            
    174e:	80 91 46 05 	lds	r24, 0x0546	; 0x800546 <y_axis>
    1752:	90 91 47 05 	lds	r25, 0x0547	; 0x800547 <y_axis+0x1>
    1756:	81 34       	cpi	r24, 0x41	; 65
    1758:	91 05       	cpc	r25, r1
    175a:	28 f0       	brcs	.+10     	; 0x1766 <__vector_11+0x390>
			paddle_speed2 = 0;
    175c:	10 92 3f 05 	sts	0x053F, r1	; 0x80053f <paddle_speed2+0x1>
    1760:	10 92 3e 05 	sts	0x053E, r1	; 0x80053e <paddle_speed2>
    1764:	16 c0       	rjmp	.+44     	; 0x1792 <__vector_11+0x3bc>
		}
		else if(y_axis > paddle_y2 + 5){                          //paddle go down
    1766:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <paddle_y2>
    176a:	30 91 15 05 	lds	r19, 0x0515	; 0x800515 <paddle_y2+0x1>
    176e:	2b 5f       	subi	r18, 0xFB	; 251
    1770:	3f 4f       	sbci	r19, 0xFF	; 255
    1772:	28 17       	cp	r18, r24
    1774:	39 07       	cpc	r19, r25
    1776:	38 f4       	brcc	.+14     	; 0x1786 <__vector_11+0x3b0>
			paddle_speed2 = 1;
    1778:	81 e0       	ldi	r24, 0x01	; 1
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <paddle_speed2+0x1>
    1780:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <paddle_speed2>
    1784:	06 c0       	rjmp	.+12     	; 0x1792 <__vector_11+0x3bc>
		}
		else{                                                     //paddle go up
			paddle_speed2 = -1;
    1786:	8f ef       	ldi	r24, 0xFF	; 255
    1788:	9f ef       	ldi	r25, 0xFF	; 255
    178a:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <paddle_speed2+0x1>
    178e:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <paddle_speed2>
		}
		paddle_y2 += paddle_speed2;
    1792:	20 91 3e 05 	lds	r18, 0x053E	; 0x80053e <paddle_speed2>
    1796:	30 91 3f 05 	lds	r19, 0x053F	; 0x80053f <paddle_speed2+0x1>
    179a:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <paddle_y2>
    179e:	90 91 15 05 	lds	r25, 0x0515	; 0x800515 <paddle_y2+0x1>
    17a2:	82 0f       	add	r24, r18
    17a4:	93 1f       	adc	r25, r19
    17a6:	90 93 15 05 	sts	0x0515, r25	; 0x800515 <paddle_y2+0x1>
    17aa:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <paddle_y2>
		fillrect(buff,125,paddle_y2,2,10,displayChar);
    17ae:	40 91 14 05 	lds	r20, 0x0514	; 0x800514 <paddle_y2>
    17b2:	50 91 15 05 	lds	r21, 0x0515	; 0x800515 <paddle_y2+0x1>
    17b6:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    17ba:	0a e0       	ldi	r16, 0x0A	; 10
    17bc:	22 e0       	ldi	r18, 0x02	; 2
    17be:	6d e7       	ldi	r22, 0x7D	; 125
    17c0:	84 e0       	ldi	r24, 0x04	; 4
    17c2:	91 e0       	ldi	r25, 0x01	; 1
    17c4:	0e 94 14 05 	call	0xa28	; 0xa28 <fillrect>
    17c8:	21 c0       	rjmp	.+66     	; 0x180c <__vector_11+0x436>
	}
	else{                                                            //what if the touching point is outside the box
		paddle_speed1 = 0;
    17ca:	10 92 41 05 	sts	0x0541, r1	; 0x800541 <paddle_speed1+0x1>
    17ce:	10 92 40 05 	sts	0x0540, r1	; 0x800540 <paddle_speed1>
		paddle_speed2 = 0;
    17d2:	10 92 3f 05 	sts	0x053F, r1	; 0x80053f <paddle_speed2+0x1>
    17d6:	10 92 3e 05 	sts	0x053E, r1	; 0x80053e <paddle_speed2>
		fillrect(buff,1,paddle_y1,2,10,displayChar);
    17da:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <paddle_y1>
    17de:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <paddle_y1+0x1>
    17e2:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    17e6:	0a e0       	ldi	r16, 0x0A	; 10
    17e8:	22 e0       	ldi	r18, 0x02	; 2
    17ea:	61 e0       	ldi	r22, 0x01	; 1
    17ec:	84 e0       	ldi	r24, 0x04	; 4
    17ee:	91 e0       	ldi	r25, 0x01	; 1
    17f0:	0e 94 14 05 	call	0xa28	; 0xa28 <fillrect>
		fillrect(buff,125,paddle_y2,2,10,displayChar);
    17f4:	40 91 14 05 	lds	r20, 0x0514	; 0x800514 <paddle_y2>
    17f8:	50 91 15 05 	lds	r21, 0x0515	; 0x800515 <paddle_y2+0x1>
    17fc:	e0 90 4a 05 	lds	r14, 0x054A	; 0x80054a <displayChar>
    1800:	22 e0       	ldi	r18, 0x02	; 2
    1802:	6d e7       	ldi	r22, 0x7D	; 125
    1804:	84 e0       	ldi	r24, 0x04	; 4
    1806:	91 e0       	ldi	r25, 0x01	; 1
    1808:	0e 94 14 05 	call	0xa28	; 0xa28 <fillrect>
	}
	
	fillcircle(buff,ball1.x,ball1.y,2,displayChar);                   //draw the new circle
    180c:	e7 e5       	ldi	r30, 0x57	; 87
    180e:	f5 e0       	ldi	r31, 0x05	; 5
    1810:	00 91 4a 05 	lds	r16, 0x054A	; 0x80054a <displayChar>
    1814:	22 e0       	ldi	r18, 0x02	; 2
    1816:	41 81       	ldd	r20, Z+1	; 0x01
    1818:	60 81       	ld	r22, Z
    181a:	84 e0       	ldi	r24, 0x04	; 4
    181c:	91 e0       	ldi	r25, 0x01	; 1
    181e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fillcircle>
	drawstring(buff,50,0,s1);                                         //print score
    1822:	2b e4       	ldi	r18, 0x4B	; 75
    1824:	35 e0       	ldi	r19, 0x05	; 5
    1826:	40 e0       	ldi	r20, 0x00	; 0
    1828:	62 e3       	ldi	r22, 0x32	; 50
    182a:	84 e0       	ldi	r24, 0x04	; 4
    182c:	91 e0       	ldi	r25, 0x01	; 1
    182e:	0e 94 68 04 	call	0x8d0	; 0x8d0 <drawstring>
	drawstring(buff,76,0,s2);
    1832:	2b e5       	ldi	r18, 0x5B	; 91
    1834:	35 e0       	ldi	r19, 0x05	; 5
    1836:	40 e0       	ldi	r20, 0x00	; 0
    1838:	6c e4       	ldi	r22, 0x4C	; 76
    183a:	84 e0       	ldi	r24, 0x04	; 4
    183c:	91 e0       	ldi	r25, 0x01	; 1
    183e:	0e 94 68 04 	call	0x8d0	; 0x8d0 <drawstring>
	write_buffer(buff);
    1842:	84 e0       	ldi	r24, 0x04	; 4
    1844:	91 e0       	ldi	r25, 0x01	; 1
    1846:	0e 94 c5 03 	call	0x78a	; 0x78a <write_buffer>
}
    184a:	ff 91       	pop	r31
    184c:	ef 91       	pop	r30
    184e:	df 91       	pop	r29
    1850:	cf 91       	pop	r28
    1852:	bf 91       	pop	r27
    1854:	af 91       	pop	r26
    1856:	9f 91       	pop	r25
    1858:	8f 91       	pop	r24
    185a:	7f 91       	pop	r23
    185c:	6f 91       	pop	r22
    185e:	5f 91       	pop	r21
    1860:	4f 91       	pop	r20
    1862:	3f 91       	pop	r19
    1864:	2f 91       	pop	r18
    1866:	1f 91       	pop	r17
    1868:	0f 91       	pop	r16
    186a:	ff 90       	pop	r15
    186c:	ef 90       	pop	r14
    186e:	0f 90       	pop	r0
    1870:	0f be       	out	0x3f, r0	; 63
    1872:	0f 90       	pop	r0
    1874:	1f 90       	pop	r1
    1876:	18 95       	reti

00001878 <vfprintf>:
    1878:	a0 e1       	ldi	r26, 0x10	; 16
    187a:	b0 e0       	ldi	r27, 0x00	; 0
    187c:	e2 e4       	ldi	r30, 0x42	; 66
    187e:	fc e0       	ldi	r31, 0x0C	; 12
    1880:	0c 94 cd 0f 	jmp	0x1f9a	; 0x1f9a <__prologue_saves__>
    1884:	7c 01       	movw	r14, r24
    1886:	1b 01       	movw	r2, r22
    1888:	6a 01       	movw	r12, r20
    188a:	fc 01       	movw	r30, r24
    188c:	17 82       	std	Z+7, r1	; 0x07
    188e:	16 82       	std	Z+6, r1	; 0x06
    1890:	83 81       	ldd	r24, Z+3	; 0x03
    1892:	81 ff       	sbrs	r24, 1
    1894:	44 c3       	rjmp	.+1672   	; 0x1f1e <vfprintf+0x6a6>
    1896:	9e 01       	movw	r18, r28
    1898:	2f 5f       	subi	r18, 0xFF	; 255
    189a:	3f 4f       	sbci	r19, 0xFF	; 255
    189c:	39 01       	movw	r6, r18
    189e:	f7 01       	movw	r30, r14
    18a0:	93 81       	ldd	r25, Z+3	; 0x03
    18a2:	f1 01       	movw	r30, r2
    18a4:	93 fd       	sbrc	r25, 3
    18a6:	85 91       	lpm	r24, Z+
    18a8:	93 ff       	sbrs	r25, 3
    18aa:	81 91       	ld	r24, Z+
    18ac:	1f 01       	movw	r2, r30
    18ae:	88 23       	and	r24, r24
    18b0:	09 f4       	brne	.+2      	; 0x18b4 <vfprintf+0x3c>
    18b2:	31 c3       	rjmp	.+1634   	; 0x1f16 <vfprintf+0x69e>
    18b4:	85 32       	cpi	r24, 0x25	; 37
    18b6:	39 f4       	brne	.+14     	; 0x18c6 <vfprintf+0x4e>
    18b8:	93 fd       	sbrc	r25, 3
    18ba:	85 91       	lpm	r24, Z+
    18bc:	93 ff       	sbrs	r25, 3
    18be:	81 91       	ld	r24, Z+
    18c0:	1f 01       	movw	r2, r30
    18c2:	85 32       	cpi	r24, 0x25	; 37
    18c4:	39 f4       	brne	.+14     	; 0x18d4 <vfprintf+0x5c>
    18c6:	b7 01       	movw	r22, r14
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    18ce:	56 01       	movw	r10, r12
    18d0:	65 01       	movw	r12, r10
    18d2:	e5 cf       	rjmp	.-54     	; 0x189e <vfprintf+0x26>
    18d4:	10 e0       	ldi	r17, 0x00	; 0
    18d6:	51 2c       	mov	r5, r1
    18d8:	91 2c       	mov	r9, r1
    18da:	ff e1       	ldi	r31, 0x1F	; 31
    18dc:	f9 15       	cp	r31, r9
    18de:	d8 f0       	brcs	.+54     	; 0x1916 <vfprintf+0x9e>
    18e0:	8b 32       	cpi	r24, 0x2B	; 43
    18e2:	79 f0       	breq	.+30     	; 0x1902 <vfprintf+0x8a>
    18e4:	38 f4       	brcc	.+14     	; 0x18f4 <vfprintf+0x7c>
    18e6:	80 32       	cpi	r24, 0x20	; 32
    18e8:	79 f0       	breq	.+30     	; 0x1908 <vfprintf+0x90>
    18ea:	83 32       	cpi	r24, 0x23	; 35
    18ec:	a1 f4       	brne	.+40     	; 0x1916 <vfprintf+0x9e>
    18ee:	f9 2d       	mov	r31, r9
    18f0:	f0 61       	ori	r31, 0x10	; 16
    18f2:	2e c0       	rjmp	.+92     	; 0x1950 <vfprintf+0xd8>
    18f4:	8d 32       	cpi	r24, 0x2D	; 45
    18f6:	61 f0       	breq	.+24     	; 0x1910 <vfprintf+0x98>
    18f8:	80 33       	cpi	r24, 0x30	; 48
    18fa:	69 f4       	brne	.+26     	; 0x1916 <vfprintf+0x9e>
    18fc:	29 2d       	mov	r18, r9
    18fe:	21 60       	ori	r18, 0x01	; 1
    1900:	2d c0       	rjmp	.+90     	; 0x195c <vfprintf+0xe4>
    1902:	39 2d       	mov	r19, r9
    1904:	32 60       	ori	r19, 0x02	; 2
    1906:	93 2e       	mov	r9, r19
    1908:	89 2d       	mov	r24, r9
    190a:	84 60       	ori	r24, 0x04	; 4
    190c:	98 2e       	mov	r9, r24
    190e:	2a c0       	rjmp	.+84     	; 0x1964 <vfprintf+0xec>
    1910:	e9 2d       	mov	r30, r9
    1912:	e8 60       	ori	r30, 0x08	; 8
    1914:	15 c0       	rjmp	.+42     	; 0x1940 <vfprintf+0xc8>
    1916:	97 fc       	sbrc	r9, 7
    1918:	2d c0       	rjmp	.+90     	; 0x1974 <vfprintf+0xfc>
    191a:	20 ed       	ldi	r18, 0xD0	; 208
    191c:	28 0f       	add	r18, r24
    191e:	2a 30       	cpi	r18, 0x0A	; 10
    1920:	88 f4       	brcc	.+34     	; 0x1944 <vfprintf+0xcc>
    1922:	96 fe       	sbrs	r9, 6
    1924:	06 c0       	rjmp	.+12     	; 0x1932 <vfprintf+0xba>
    1926:	3a e0       	ldi	r19, 0x0A	; 10
    1928:	13 9f       	mul	r17, r19
    192a:	20 0d       	add	r18, r0
    192c:	11 24       	eor	r1, r1
    192e:	12 2f       	mov	r17, r18
    1930:	19 c0       	rjmp	.+50     	; 0x1964 <vfprintf+0xec>
    1932:	8a e0       	ldi	r24, 0x0A	; 10
    1934:	58 9e       	mul	r5, r24
    1936:	20 0d       	add	r18, r0
    1938:	11 24       	eor	r1, r1
    193a:	52 2e       	mov	r5, r18
    193c:	e9 2d       	mov	r30, r9
    193e:	e0 62       	ori	r30, 0x20	; 32
    1940:	9e 2e       	mov	r9, r30
    1942:	10 c0       	rjmp	.+32     	; 0x1964 <vfprintf+0xec>
    1944:	8e 32       	cpi	r24, 0x2E	; 46
    1946:	31 f4       	brne	.+12     	; 0x1954 <vfprintf+0xdc>
    1948:	96 fc       	sbrc	r9, 6
    194a:	e5 c2       	rjmp	.+1482   	; 0x1f16 <vfprintf+0x69e>
    194c:	f9 2d       	mov	r31, r9
    194e:	f0 64       	ori	r31, 0x40	; 64
    1950:	9f 2e       	mov	r9, r31
    1952:	08 c0       	rjmp	.+16     	; 0x1964 <vfprintf+0xec>
    1954:	8c 36       	cpi	r24, 0x6C	; 108
    1956:	21 f4       	brne	.+8      	; 0x1960 <vfprintf+0xe8>
    1958:	29 2d       	mov	r18, r9
    195a:	20 68       	ori	r18, 0x80	; 128
    195c:	92 2e       	mov	r9, r18
    195e:	02 c0       	rjmp	.+4      	; 0x1964 <vfprintf+0xec>
    1960:	88 36       	cpi	r24, 0x68	; 104
    1962:	41 f4       	brne	.+16     	; 0x1974 <vfprintf+0xfc>
    1964:	f1 01       	movw	r30, r2
    1966:	93 fd       	sbrc	r25, 3
    1968:	85 91       	lpm	r24, Z+
    196a:	93 ff       	sbrs	r25, 3
    196c:	81 91       	ld	r24, Z+
    196e:	1f 01       	movw	r2, r30
    1970:	81 11       	cpse	r24, r1
    1972:	b3 cf       	rjmp	.-154    	; 0x18da <vfprintf+0x62>
    1974:	9b eb       	ldi	r25, 0xBB	; 187
    1976:	98 0f       	add	r25, r24
    1978:	93 30       	cpi	r25, 0x03	; 3
    197a:	20 f4       	brcc	.+8      	; 0x1984 <vfprintf+0x10c>
    197c:	99 2d       	mov	r25, r9
    197e:	90 61       	ori	r25, 0x10	; 16
    1980:	80 5e       	subi	r24, 0xE0	; 224
    1982:	07 c0       	rjmp	.+14     	; 0x1992 <vfprintf+0x11a>
    1984:	9b e9       	ldi	r25, 0x9B	; 155
    1986:	98 0f       	add	r25, r24
    1988:	93 30       	cpi	r25, 0x03	; 3
    198a:	08 f0       	brcs	.+2      	; 0x198e <vfprintf+0x116>
    198c:	66 c1       	rjmp	.+716    	; 0x1c5a <vfprintf+0x3e2>
    198e:	99 2d       	mov	r25, r9
    1990:	9f 7e       	andi	r25, 0xEF	; 239
    1992:	96 ff       	sbrs	r25, 6
    1994:	16 e0       	ldi	r17, 0x06	; 6
    1996:	9f 73       	andi	r25, 0x3F	; 63
    1998:	99 2e       	mov	r9, r25
    199a:	85 36       	cpi	r24, 0x65	; 101
    199c:	19 f4       	brne	.+6      	; 0x19a4 <vfprintf+0x12c>
    199e:	90 64       	ori	r25, 0x40	; 64
    19a0:	99 2e       	mov	r9, r25
    19a2:	08 c0       	rjmp	.+16     	; 0x19b4 <vfprintf+0x13c>
    19a4:	86 36       	cpi	r24, 0x66	; 102
    19a6:	21 f4       	brne	.+8      	; 0x19b0 <vfprintf+0x138>
    19a8:	39 2f       	mov	r19, r25
    19aa:	30 68       	ori	r19, 0x80	; 128
    19ac:	93 2e       	mov	r9, r19
    19ae:	02 c0       	rjmp	.+4      	; 0x19b4 <vfprintf+0x13c>
    19b0:	11 11       	cpse	r17, r1
    19b2:	11 50       	subi	r17, 0x01	; 1
    19b4:	97 fe       	sbrs	r9, 7
    19b6:	07 c0       	rjmp	.+14     	; 0x19c6 <vfprintf+0x14e>
    19b8:	1c 33       	cpi	r17, 0x3C	; 60
    19ba:	50 f4       	brcc	.+20     	; 0x19d0 <vfprintf+0x158>
    19bc:	44 24       	eor	r4, r4
    19be:	43 94       	inc	r4
    19c0:	41 0e       	add	r4, r17
    19c2:	27 e0       	ldi	r18, 0x07	; 7
    19c4:	0b c0       	rjmp	.+22     	; 0x19dc <vfprintf+0x164>
    19c6:	18 30       	cpi	r17, 0x08	; 8
    19c8:	38 f0       	brcs	.+14     	; 0x19d8 <vfprintf+0x160>
    19ca:	27 e0       	ldi	r18, 0x07	; 7
    19cc:	17 e0       	ldi	r17, 0x07	; 7
    19ce:	05 c0       	rjmp	.+10     	; 0x19da <vfprintf+0x162>
    19d0:	27 e0       	ldi	r18, 0x07	; 7
    19d2:	9c e3       	ldi	r25, 0x3C	; 60
    19d4:	49 2e       	mov	r4, r25
    19d6:	02 c0       	rjmp	.+4      	; 0x19dc <vfprintf+0x164>
    19d8:	21 2f       	mov	r18, r17
    19da:	41 2c       	mov	r4, r1
    19dc:	56 01       	movw	r10, r12
    19de:	84 e0       	ldi	r24, 0x04	; 4
    19e0:	a8 0e       	add	r10, r24
    19e2:	b1 1c       	adc	r11, r1
    19e4:	f6 01       	movw	r30, r12
    19e6:	60 81       	ld	r22, Z
    19e8:	71 81       	ldd	r23, Z+1	; 0x01
    19ea:	82 81       	ldd	r24, Z+2	; 0x02
    19ec:	93 81       	ldd	r25, Z+3	; 0x03
    19ee:	04 2d       	mov	r16, r4
    19f0:	a3 01       	movw	r20, r6
    19f2:	0e 94 74 10 	call	0x20e8	; 0x20e8 <__ftoa_engine>
    19f6:	6c 01       	movw	r12, r24
    19f8:	f9 81       	ldd	r31, Y+1	; 0x01
    19fa:	fc 87       	std	Y+12, r31	; 0x0c
    19fc:	f0 ff       	sbrs	r31, 0
    19fe:	02 c0       	rjmp	.+4      	; 0x1a04 <vfprintf+0x18c>
    1a00:	f3 ff       	sbrs	r31, 3
    1a02:	06 c0       	rjmp	.+12     	; 0x1a10 <vfprintf+0x198>
    1a04:	91 fc       	sbrc	r9, 1
    1a06:	06 c0       	rjmp	.+12     	; 0x1a14 <vfprintf+0x19c>
    1a08:	92 fe       	sbrs	r9, 2
    1a0a:	06 c0       	rjmp	.+12     	; 0x1a18 <vfprintf+0x1a0>
    1a0c:	00 e2       	ldi	r16, 0x20	; 32
    1a0e:	05 c0       	rjmp	.+10     	; 0x1a1a <vfprintf+0x1a2>
    1a10:	0d e2       	ldi	r16, 0x2D	; 45
    1a12:	03 c0       	rjmp	.+6      	; 0x1a1a <vfprintf+0x1a2>
    1a14:	0b e2       	ldi	r16, 0x2B	; 43
    1a16:	01 c0       	rjmp	.+2      	; 0x1a1a <vfprintf+0x1a2>
    1a18:	00 e0       	ldi	r16, 0x00	; 0
    1a1a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a1c:	8c 70       	andi	r24, 0x0C	; 12
    1a1e:	19 f0       	breq	.+6      	; 0x1a26 <vfprintf+0x1ae>
    1a20:	01 11       	cpse	r16, r1
    1a22:	5a c2       	rjmp	.+1204   	; 0x1ed8 <vfprintf+0x660>
    1a24:	9b c2       	rjmp	.+1334   	; 0x1f5c <vfprintf+0x6e4>
    1a26:	97 fe       	sbrs	r9, 7
    1a28:	10 c0       	rjmp	.+32     	; 0x1a4a <vfprintf+0x1d2>
    1a2a:	4c 0c       	add	r4, r12
    1a2c:	fc 85       	ldd	r31, Y+12	; 0x0c
    1a2e:	f4 ff       	sbrs	r31, 4
    1a30:	04 c0       	rjmp	.+8      	; 0x1a3a <vfprintf+0x1c2>
    1a32:	8a 81       	ldd	r24, Y+2	; 0x02
    1a34:	81 33       	cpi	r24, 0x31	; 49
    1a36:	09 f4       	brne	.+2      	; 0x1a3a <vfprintf+0x1c2>
    1a38:	4a 94       	dec	r4
    1a3a:	14 14       	cp	r1, r4
    1a3c:	74 f5       	brge	.+92     	; 0x1a9a <vfprintf+0x222>
    1a3e:	28 e0       	ldi	r18, 0x08	; 8
    1a40:	24 15       	cp	r18, r4
    1a42:	78 f5       	brcc	.+94     	; 0x1aa2 <vfprintf+0x22a>
    1a44:	88 e0       	ldi	r24, 0x08	; 8
    1a46:	48 2e       	mov	r4, r24
    1a48:	2c c0       	rjmp	.+88     	; 0x1aa2 <vfprintf+0x22a>
    1a4a:	96 fc       	sbrc	r9, 6
    1a4c:	2a c0       	rjmp	.+84     	; 0x1aa2 <vfprintf+0x22a>
    1a4e:	81 2f       	mov	r24, r17
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	8c 15       	cp	r24, r12
    1a54:	9d 05       	cpc	r25, r13
    1a56:	9c f0       	brlt	.+38     	; 0x1a7e <vfprintf+0x206>
    1a58:	3c ef       	ldi	r19, 0xFC	; 252
    1a5a:	c3 16       	cp	r12, r19
    1a5c:	3f ef       	ldi	r19, 0xFF	; 255
    1a5e:	d3 06       	cpc	r13, r19
    1a60:	74 f0       	brlt	.+28     	; 0x1a7e <vfprintf+0x206>
    1a62:	89 2d       	mov	r24, r9
    1a64:	80 68       	ori	r24, 0x80	; 128
    1a66:	98 2e       	mov	r9, r24
    1a68:	0a c0       	rjmp	.+20     	; 0x1a7e <vfprintf+0x206>
    1a6a:	e2 e0       	ldi	r30, 0x02	; 2
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	ec 0f       	add	r30, r28
    1a70:	fd 1f       	adc	r31, r29
    1a72:	e1 0f       	add	r30, r17
    1a74:	f1 1d       	adc	r31, r1
    1a76:	80 81       	ld	r24, Z
    1a78:	80 33       	cpi	r24, 0x30	; 48
    1a7a:	19 f4       	brne	.+6      	; 0x1a82 <vfprintf+0x20a>
    1a7c:	11 50       	subi	r17, 0x01	; 1
    1a7e:	11 11       	cpse	r17, r1
    1a80:	f4 cf       	rjmp	.-24     	; 0x1a6a <vfprintf+0x1f2>
    1a82:	97 fe       	sbrs	r9, 7
    1a84:	0e c0       	rjmp	.+28     	; 0x1aa2 <vfprintf+0x22a>
    1a86:	44 24       	eor	r4, r4
    1a88:	43 94       	inc	r4
    1a8a:	41 0e       	add	r4, r17
    1a8c:	81 2f       	mov	r24, r17
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	c8 16       	cp	r12, r24
    1a92:	d9 06       	cpc	r13, r25
    1a94:	2c f4       	brge	.+10     	; 0x1aa0 <vfprintf+0x228>
    1a96:	1c 19       	sub	r17, r12
    1a98:	04 c0       	rjmp	.+8      	; 0x1aa2 <vfprintf+0x22a>
    1a9a:	44 24       	eor	r4, r4
    1a9c:	43 94       	inc	r4
    1a9e:	01 c0       	rjmp	.+2      	; 0x1aa2 <vfprintf+0x22a>
    1aa0:	10 e0       	ldi	r17, 0x00	; 0
    1aa2:	97 fe       	sbrs	r9, 7
    1aa4:	06 c0       	rjmp	.+12     	; 0x1ab2 <vfprintf+0x23a>
    1aa6:	1c 14       	cp	r1, r12
    1aa8:	1d 04       	cpc	r1, r13
    1aaa:	34 f4       	brge	.+12     	; 0x1ab8 <vfprintf+0x240>
    1aac:	c6 01       	movw	r24, r12
    1aae:	01 96       	adiw	r24, 0x01	; 1
    1ab0:	05 c0       	rjmp	.+10     	; 0x1abc <vfprintf+0x244>
    1ab2:	85 e0       	ldi	r24, 0x05	; 5
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	02 c0       	rjmp	.+4      	; 0x1abc <vfprintf+0x244>
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	01 11       	cpse	r16, r1
    1abe:	01 96       	adiw	r24, 0x01	; 1
    1ac0:	11 23       	and	r17, r17
    1ac2:	31 f0       	breq	.+12     	; 0x1ad0 <vfprintf+0x258>
    1ac4:	21 2f       	mov	r18, r17
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	2f 5f       	subi	r18, 0xFF	; 255
    1aca:	3f 4f       	sbci	r19, 0xFF	; 255
    1acc:	82 0f       	add	r24, r18
    1ace:	93 1f       	adc	r25, r19
    1ad0:	25 2d       	mov	r18, r5
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	82 17       	cp	r24, r18
    1ad6:	93 07       	cpc	r25, r19
    1ad8:	14 f4       	brge	.+4      	; 0x1ade <vfprintf+0x266>
    1ada:	58 1a       	sub	r5, r24
    1adc:	01 c0       	rjmp	.+2      	; 0x1ae0 <vfprintf+0x268>
    1ade:	51 2c       	mov	r5, r1
    1ae0:	89 2d       	mov	r24, r9
    1ae2:	89 70       	andi	r24, 0x09	; 9
    1ae4:	49 f4       	brne	.+18     	; 0x1af8 <vfprintf+0x280>
    1ae6:	55 20       	and	r5, r5
    1ae8:	39 f0       	breq	.+14     	; 0x1af8 <vfprintf+0x280>
    1aea:	b7 01       	movw	r22, r14
    1aec:	80 e2       	ldi	r24, 0x20	; 32
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1af4:	5a 94       	dec	r5
    1af6:	f7 cf       	rjmp	.-18     	; 0x1ae6 <vfprintf+0x26e>
    1af8:	00 23       	and	r16, r16
    1afa:	29 f0       	breq	.+10     	; 0x1b06 <vfprintf+0x28e>
    1afc:	b7 01       	movw	r22, r14
    1afe:	80 2f       	mov	r24, r16
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1b06:	93 fc       	sbrc	r9, 3
    1b08:	09 c0       	rjmp	.+18     	; 0x1b1c <vfprintf+0x2a4>
    1b0a:	55 20       	and	r5, r5
    1b0c:	39 f0       	breq	.+14     	; 0x1b1c <vfprintf+0x2a4>
    1b0e:	b7 01       	movw	r22, r14
    1b10:	80 e3       	ldi	r24, 0x30	; 48
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1b18:	5a 94       	dec	r5
    1b1a:	f7 cf       	rjmp	.-18     	; 0x1b0a <vfprintf+0x292>
    1b1c:	97 fe       	sbrs	r9, 7
    1b1e:	4c c0       	rjmp	.+152    	; 0x1bb8 <vfprintf+0x340>
    1b20:	46 01       	movw	r8, r12
    1b22:	d7 fe       	sbrs	r13, 7
    1b24:	02 c0       	rjmp	.+4      	; 0x1b2a <vfprintf+0x2b2>
    1b26:	81 2c       	mov	r8, r1
    1b28:	91 2c       	mov	r9, r1
    1b2a:	c6 01       	movw	r24, r12
    1b2c:	88 19       	sub	r24, r8
    1b2e:	99 09       	sbc	r25, r9
    1b30:	f3 01       	movw	r30, r6
    1b32:	e8 0f       	add	r30, r24
    1b34:	f9 1f       	adc	r31, r25
    1b36:	fe 87       	std	Y+14, r31	; 0x0e
    1b38:	ed 87       	std	Y+13, r30	; 0x0d
    1b3a:	96 01       	movw	r18, r12
    1b3c:	24 19       	sub	r18, r4
    1b3e:	31 09       	sbc	r19, r1
    1b40:	38 8b       	std	Y+16, r19	; 0x10
    1b42:	2f 87       	std	Y+15, r18	; 0x0f
    1b44:	01 2f       	mov	r16, r17
    1b46:	10 e0       	ldi	r17, 0x00	; 0
    1b48:	11 95       	neg	r17
    1b4a:	01 95       	neg	r16
    1b4c:	11 09       	sbc	r17, r1
    1b4e:	3f ef       	ldi	r19, 0xFF	; 255
    1b50:	83 16       	cp	r8, r19
    1b52:	93 06       	cpc	r9, r19
    1b54:	29 f4       	brne	.+10     	; 0x1b60 <vfprintf+0x2e8>
    1b56:	b7 01       	movw	r22, r14
    1b58:	8e e2       	ldi	r24, 0x2E	; 46
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1b60:	c8 14       	cp	r12, r8
    1b62:	d9 04       	cpc	r13, r9
    1b64:	4c f0       	brlt	.+18     	; 0x1b78 <vfprintf+0x300>
    1b66:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b68:	98 89       	ldd	r25, Y+16	; 0x10
    1b6a:	88 15       	cp	r24, r8
    1b6c:	99 05       	cpc	r25, r9
    1b6e:	24 f4       	brge	.+8      	; 0x1b78 <vfprintf+0x300>
    1b70:	ed 85       	ldd	r30, Y+13	; 0x0d
    1b72:	fe 85       	ldd	r31, Y+14	; 0x0e
    1b74:	81 81       	ldd	r24, Z+1	; 0x01
    1b76:	01 c0       	rjmp	.+2      	; 0x1b7a <vfprintf+0x302>
    1b78:	80 e3       	ldi	r24, 0x30	; 48
    1b7a:	f1 e0       	ldi	r31, 0x01	; 1
    1b7c:	8f 1a       	sub	r8, r31
    1b7e:	91 08       	sbc	r9, r1
    1b80:	2d 85       	ldd	r18, Y+13	; 0x0d
    1b82:	3e 85       	ldd	r19, Y+14	; 0x0e
    1b84:	2f 5f       	subi	r18, 0xFF	; 255
    1b86:	3f 4f       	sbci	r19, 0xFF	; 255
    1b88:	3e 87       	std	Y+14, r19	; 0x0e
    1b8a:	2d 87       	std	Y+13, r18	; 0x0d
    1b8c:	80 16       	cp	r8, r16
    1b8e:	91 06       	cpc	r9, r17
    1b90:	2c f0       	brlt	.+10     	; 0x1b9c <vfprintf+0x324>
    1b92:	b7 01       	movw	r22, r14
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1b9a:	d9 cf       	rjmp	.-78     	; 0x1b4e <vfprintf+0x2d6>
    1b9c:	c8 14       	cp	r12, r8
    1b9e:	d9 04       	cpc	r13, r9
    1ba0:	41 f4       	brne	.+16     	; 0x1bb2 <vfprintf+0x33a>
    1ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    1ba4:	96 33       	cpi	r25, 0x36	; 54
    1ba6:	20 f4       	brcc	.+8      	; 0x1bb0 <vfprintf+0x338>
    1ba8:	95 33       	cpi	r25, 0x35	; 53
    1baa:	19 f4       	brne	.+6      	; 0x1bb2 <vfprintf+0x33a>
    1bac:	3c 85       	ldd	r19, Y+12	; 0x0c
    1bae:	34 ff       	sbrs	r19, 4
    1bb0:	81 e3       	ldi	r24, 0x31	; 49
    1bb2:	b7 01       	movw	r22, r14
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	4e c0       	rjmp	.+156    	; 0x1c54 <vfprintf+0x3dc>
    1bb8:	8a 81       	ldd	r24, Y+2	; 0x02
    1bba:	81 33       	cpi	r24, 0x31	; 49
    1bbc:	19 f0       	breq	.+6      	; 0x1bc4 <vfprintf+0x34c>
    1bbe:	9c 85       	ldd	r25, Y+12	; 0x0c
    1bc0:	9f 7e       	andi	r25, 0xEF	; 239
    1bc2:	9c 87       	std	Y+12, r25	; 0x0c
    1bc4:	b7 01       	movw	r22, r14
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1bcc:	11 11       	cpse	r17, r1
    1bce:	05 c0       	rjmp	.+10     	; 0x1bda <vfprintf+0x362>
    1bd0:	94 fc       	sbrc	r9, 4
    1bd2:	18 c0       	rjmp	.+48     	; 0x1c04 <vfprintf+0x38c>
    1bd4:	85 e6       	ldi	r24, 0x65	; 101
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	17 c0       	rjmp	.+46     	; 0x1c08 <vfprintf+0x390>
    1bda:	b7 01       	movw	r22, r14
    1bdc:	8e e2       	ldi	r24, 0x2E	; 46
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1be4:	1e 5f       	subi	r17, 0xFE	; 254
    1be6:	82 e0       	ldi	r24, 0x02	; 2
    1be8:	01 e0       	ldi	r16, 0x01	; 1
    1bea:	08 0f       	add	r16, r24
    1bec:	f3 01       	movw	r30, r6
    1bee:	e8 0f       	add	r30, r24
    1bf0:	f1 1d       	adc	r31, r1
    1bf2:	80 81       	ld	r24, Z
    1bf4:	b7 01       	movw	r22, r14
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1bfc:	80 2f       	mov	r24, r16
    1bfe:	01 13       	cpse	r16, r17
    1c00:	f3 cf       	rjmp	.-26     	; 0x1be8 <vfprintf+0x370>
    1c02:	e6 cf       	rjmp	.-52     	; 0x1bd0 <vfprintf+0x358>
    1c04:	85 e4       	ldi	r24, 0x45	; 69
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	b7 01       	movw	r22, r14
    1c0a:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1c0e:	d7 fc       	sbrc	r13, 7
    1c10:	06 c0       	rjmp	.+12     	; 0x1c1e <vfprintf+0x3a6>
    1c12:	c1 14       	cp	r12, r1
    1c14:	d1 04       	cpc	r13, r1
    1c16:	41 f4       	brne	.+16     	; 0x1c28 <vfprintf+0x3b0>
    1c18:	ec 85       	ldd	r30, Y+12	; 0x0c
    1c1a:	e4 ff       	sbrs	r30, 4
    1c1c:	05 c0       	rjmp	.+10     	; 0x1c28 <vfprintf+0x3b0>
    1c1e:	d1 94       	neg	r13
    1c20:	c1 94       	neg	r12
    1c22:	d1 08       	sbc	r13, r1
    1c24:	8d e2       	ldi	r24, 0x2D	; 45
    1c26:	01 c0       	rjmp	.+2      	; 0x1c2a <vfprintf+0x3b2>
    1c28:	8b e2       	ldi	r24, 0x2B	; 43
    1c2a:	b7 01       	movw	r22, r14
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1c32:	80 e3       	ldi	r24, 0x30	; 48
    1c34:	2a e0       	ldi	r18, 0x0A	; 10
    1c36:	c2 16       	cp	r12, r18
    1c38:	d1 04       	cpc	r13, r1
    1c3a:	2c f0       	brlt	.+10     	; 0x1c46 <vfprintf+0x3ce>
    1c3c:	8f 5f       	subi	r24, 0xFF	; 255
    1c3e:	fa e0       	ldi	r31, 0x0A	; 10
    1c40:	cf 1a       	sub	r12, r31
    1c42:	d1 08       	sbc	r13, r1
    1c44:	f7 cf       	rjmp	.-18     	; 0x1c34 <vfprintf+0x3bc>
    1c46:	b7 01       	movw	r22, r14
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1c4e:	b7 01       	movw	r22, r14
    1c50:	c6 01       	movw	r24, r12
    1c52:	c0 96       	adiw	r24, 0x30	; 48
    1c54:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1c58:	54 c1       	rjmp	.+680    	; 0x1f02 <vfprintf+0x68a>
    1c5a:	83 36       	cpi	r24, 0x63	; 99
    1c5c:	31 f0       	breq	.+12     	; 0x1c6a <vfprintf+0x3f2>
    1c5e:	83 37       	cpi	r24, 0x73	; 115
    1c60:	79 f0       	breq	.+30     	; 0x1c80 <vfprintf+0x408>
    1c62:	83 35       	cpi	r24, 0x53	; 83
    1c64:	09 f0       	breq	.+2      	; 0x1c68 <vfprintf+0x3f0>
    1c66:	56 c0       	rjmp	.+172    	; 0x1d14 <vfprintf+0x49c>
    1c68:	20 c0       	rjmp	.+64     	; 0x1caa <vfprintf+0x432>
    1c6a:	56 01       	movw	r10, r12
    1c6c:	32 e0       	ldi	r19, 0x02	; 2
    1c6e:	a3 0e       	add	r10, r19
    1c70:	b1 1c       	adc	r11, r1
    1c72:	f6 01       	movw	r30, r12
    1c74:	80 81       	ld	r24, Z
    1c76:	89 83       	std	Y+1, r24	; 0x01
    1c78:	01 e0       	ldi	r16, 0x01	; 1
    1c7a:	10 e0       	ldi	r17, 0x00	; 0
    1c7c:	63 01       	movw	r12, r6
    1c7e:	12 c0       	rjmp	.+36     	; 0x1ca4 <vfprintf+0x42c>
    1c80:	56 01       	movw	r10, r12
    1c82:	f2 e0       	ldi	r31, 0x02	; 2
    1c84:	af 0e       	add	r10, r31
    1c86:	b1 1c       	adc	r11, r1
    1c88:	f6 01       	movw	r30, r12
    1c8a:	c0 80       	ld	r12, Z
    1c8c:	d1 80       	ldd	r13, Z+1	; 0x01
    1c8e:	96 fe       	sbrs	r9, 6
    1c90:	03 c0       	rjmp	.+6      	; 0x1c98 <vfprintf+0x420>
    1c92:	61 2f       	mov	r22, r17
    1c94:	70 e0       	ldi	r23, 0x00	; 0
    1c96:	02 c0       	rjmp	.+4      	; 0x1c9c <vfprintf+0x424>
    1c98:	6f ef       	ldi	r22, 0xFF	; 255
    1c9a:	7f ef       	ldi	r23, 0xFF	; 255
    1c9c:	c6 01       	movw	r24, r12
    1c9e:	0e 94 57 11 	call	0x22ae	; 0x22ae <strnlen>
    1ca2:	8c 01       	movw	r16, r24
    1ca4:	f9 2d       	mov	r31, r9
    1ca6:	ff 77       	andi	r31, 0x7F	; 127
    1ca8:	14 c0       	rjmp	.+40     	; 0x1cd2 <vfprintf+0x45a>
    1caa:	56 01       	movw	r10, r12
    1cac:	22 e0       	ldi	r18, 0x02	; 2
    1cae:	a2 0e       	add	r10, r18
    1cb0:	b1 1c       	adc	r11, r1
    1cb2:	f6 01       	movw	r30, r12
    1cb4:	c0 80       	ld	r12, Z
    1cb6:	d1 80       	ldd	r13, Z+1	; 0x01
    1cb8:	96 fe       	sbrs	r9, 6
    1cba:	03 c0       	rjmp	.+6      	; 0x1cc2 <vfprintf+0x44a>
    1cbc:	61 2f       	mov	r22, r17
    1cbe:	70 e0       	ldi	r23, 0x00	; 0
    1cc0:	02 c0       	rjmp	.+4      	; 0x1cc6 <vfprintf+0x44e>
    1cc2:	6f ef       	ldi	r22, 0xFF	; 255
    1cc4:	7f ef       	ldi	r23, 0xFF	; 255
    1cc6:	c6 01       	movw	r24, r12
    1cc8:	0e 94 4c 11 	call	0x2298	; 0x2298 <strnlen_P>
    1ccc:	8c 01       	movw	r16, r24
    1cce:	f9 2d       	mov	r31, r9
    1cd0:	f0 68       	ori	r31, 0x80	; 128
    1cd2:	9f 2e       	mov	r9, r31
    1cd4:	f3 fd       	sbrc	r31, 3
    1cd6:	1a c0       	rjmp	.+52     	; 0x1d0c <vfprintf+0x494>
    1cd8:	85 2d       	mov	r24, r5
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	08 17       	cp	r16, r24
    1cde:	19 07       	cpc	r17, r25
    1ce0:	a8 f4       	brcc	.+42     	; 0x1d0c <vfprintf+0x494>
    1ce2:	b7 01       	movw	r22, r14
    1ce4:	80 e2       	ldi	r24, 0x20	; 32
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1cec:	5a 94       	dec	r5
    1cee:	f4 cf       	rjmp	.-24     	; 0x1cd8 <vfprintf+0x460>
    1cf0:	f6 01       	movw	r30, r12
    1cf2:	97 fc       	sbrc	r9, 7
    1cf4:	85 91       	lpm	r24, Z+
    1cf6:	97 fe       	sbrs	r9, 7
    1cf8:	81 91       	ld	r24, Z+
    1cfa:	6f 01       	movw	r12, r30
    1cfc:	b7 01       	movw	r22, r14
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1d04:	51 10       	cpse	r5, r1
    1d06:	5a 94       	dec	r5
    1d08:	01 50       	subi	r16, 0x01	; 1
    1d0a:	11 09       	sbc	r17, r1
    1d0c:	01 15       	cp	r16, r1
    1d0e:	11 05       	cpc	r17, r1
    1d10:	79 f7       	brne	.-34     	; 0x1cf0 <vfprintf+0x478>
    1d12:	f7 c0       	rjmp	.+494    	; 0x1f02 <vfprintf+0x68a>
    1d14:	84 36       	cpi	r24, 0x64	; 100
    1d16:	11 f0       	breq	.+4      	; 0x1d1c <vfprintf+0x4a4>
    1d18:	89 36       	cpi	r24, 0x69	; 105
    1d1a:	61 f5       	brne	.+88     	; 0x1d74 <vfprintf+0x4fc>
    1d1c:	56 01       	movw	r10, r12
    1d1e:	97 fe       	sbrs	r9, 7
    1d20:	09 c0       	rjmp	.+18     	; 0x1d34 <vfprintf+0x4bc>
    1d22:	24 e0       	ldi	r18, 0x04	; 4
    1d24:	a2 0e       	add	r10, r18
    1d26:	b1 1c       	adc	r11, r1
    1d28:	f6 01       	movw	r30, r12
    1d2a:	60 81       	ld	r22, Z
    1d2c:	71 81       	ldd	r23, Z+1	; 0x01
    1d2e:	82 81       	ldd	r24, Z+2	; 0x02
    1d30:	93 81       	ldd	r25, Z+3	; 0x03
    1d32:	0a c0       	rjmp	.+20     	; 0x1d48 <vfprintf+0x4d0>
    1d34:	f2 e0       	ldi	r31, 0x02	; 2
    1d36:	af 0e       	add	r10, r31
    1d38:	b1 1c       	adc	r11, r1
    1d3a:	f6 01       	movw	r30, r12
    1d3c:	60 81       	ld	r22, Z
    1d3e:	71 81       	ldd	r23, Z+1	; 0x01
    1d40:	07 2e       	mov	r0, r23
    1d42:	00 0c       	add	r0, r0
    1d44:	88 0b       	sbc	r24, r24
    1d46:	99 0b       	sbc	r25, r25
    1d48:	f9 2d       	mov	r31, r9
    1d4a:	ff 76       	andi	r31, 0x6F	; 111
    1d4c:	9f 2e       	mov	r9, r31
    1d4e:	97 ff       	sbrs	r25, 7
    1d50:	09 c0       	rjmp	.+18     	; 0x1d64 <vfprintf+0x4ec>
    1d52:	90 95       	com	r25
    1d54:	80 95       	com	r24
    1d56:	70 95       	com	r23
    1d58:	61 95       	neg	r22
    1d5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d5c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d60:	f0 68       	ori	r31, 0x80	; 128
    1d62:	9f 2e       	mov	r9, r31
    1d64:	2a e0       	ldi	r18, 0x0A	; 10
    1d66:	30 e0       	ldi	r19, 0x00	; 0
    1d68:	a3 01       	movw	r20, r6
    1d6a:	0e 94 c0 11 	call	0x2380	; 0x2380 <__ultoa_invert>
    1d6e:	c8 2e       	mov	r12, r24
    1d70:	c6 18       	sub	r12, r6
    1d72:	3f c0       	rjmp	.+126    	; 0x1df2 <vfprintf+0x57a>
    1d74:	09 2d       	mov	r16, r9
    1d76:	85 37       	cpi	r24, 0x75	; 117
    1d78:	21 f4       	brne	.+8      	; 0x1d82 <vfprintf+0x50a>
    1d7a:	0f 7e       	andi	r16, 0xEF	; 239
    1d7c:	2a e0       	ldi	r18, 0x0A	; 10
    1d7e:	30 e0       	ldi	r19, 0x00	; 0
    1d80:	1d c0       	rjmp	.+58     	; 0x1dbc <vfprintf+0x544>
    1d82:	09 7f       	andi	r16, 0xF9	; 249
    1d84:	8f 36       	cpi	r24, 0x6F	; 111
    1d86:	91 f0       	breq	.+36     	; 0x1dac <vfprintf+0x534>
    1d88:	18 f4       	brcc	.+6      	; 0x1d90 <vfprintf+0x518>
    1d8a:	88 35       	cpi	r24, 0x58	; 88
    1d8c:	59 f0       	breq	.+22     	; 0x1da4 <vfprintf+0x52c>
    1d8e:	c3 c0       	rjmp	.+390    	; 0x1f16 <vfprintf+0x69e>
    1d90:	80 37       	cpi	r24, 0x70	; 112
    1d92:	19 f0       	breq	.+6      	; 0x1d9a <vfprintf+0x522>
    1d94:	88 37       	cpi	r24, 0x78	; 120
    1d96:	11 f0       	breq	.+4      	; 0x1d9c <vfprintf+0x524>
    1d98:	be c0       	rjmp	.+380    	; 0x1f16 <vfprintf+0x69e>
    1d9a:	00 61       	ori	r16, 0x10	; 16
    1d9c:	04 ff       	sbrs	r16, 4
    1d9e:	09 c0       	rjmp	.+18     	; 0x1db2 <vfprintf+0x53a>
    1da0:	04 60       	ori	r16, 0x04	; 4
    1da2:	07 c0       	rjmp	.+14     	; 0x1db2 <vfprintf+0x53a>
    1da4:	94 fe       	sbrs	r9, 4
    1da6:	08 c0       	rjmp	.+16     	; 0x1db8 <vfprintf+0x540>
    1da8:	06 60       	ori	r16, 0x06	; 6
    1daa:	06 c0       	rjmp	.+12     	; 0x1db8 <vfprintf+0x540>
    1dac:	28 e0       	ldi	r18, 0x08	; 8
    1dae:	30 e0       	ldi	r19, 0x00	; 0
    1db0:	05 c0       	rjmp	.+10     	; 0x1dbc <vfprintf+0x544>
    1db2:	20 e1       	ldi	r18, 0x10	; 16
    1db4:	30 e0       	ldi	r19, 0x00	; 0
    1db6:	02 c0       	rjmp	.+4      	; 0x1dbc <vfprintf+0x544>
    1db8:	20 e1       	ldi	r18, 0x10	; 16
    1dba:	32 e0       	ldi	r19, 0x02	; 2
    1dbc:	56 01       	movw	r10, r12
    1dbe:	07 ff       	sbrs	r16, 7
    1dc0:	09 c0       	rjmp	.+18     	; 0x1dd4 <vfprintf+0x55c>
    1dc2:	84 e0       	ldi	r24, 0x04	; 4
    1dc4:	a8 0e       	add	r10, r24
    1dc6:	b1 1c       	adc	r11, r1
    1dc8:	f6 01       	movw	r30, r12
    1dca:	60 81       	ld	r22, Z
    1dcc:	71 81       	ldd	r23, Z+1	; 0x01
    1dce:	82 81       	ldd	r24, Z+2	; 0x02
    1dd0:	93 81       	ldd	r25, Z+3	; 0x03
    1dd2:	08 c0       	rjmp	.+16     	; 0x1de4 <vfprintf+0x56c>
    1dd4:	f2 e0       	ldi	r31, 0x02	; 2
    1dd6:	af 0e       	add	r10, r31
    1dd8:	b1 1c       	adc	r11, r1
    1dda:	f6 01       	movw	r30, r12
    1ddc:	60 81       	ld	r22, Z
    1dde:	71 81       	ldd	r23, Z+1	; 0x01
    1de0:	80 e0       	ldi	r24, 0x00	; 0
    1de2:	90 e0       	ldi	r25, 0x00	; 0
    1de4:	a3 01       	movw	r20, r6
    1de6:	0e 94 c0 11 	call	0x2380	; 0x2380 <__ultoa_invert>
    1dea:	c8 2e       	mov	r12, r24
    1dec:	c6 18       	sub	r12, r6
    1dee:	0f 77       	andi	r16, 0x7F	; 127
    1df0:	90 2e       	mov	r9, r16
    1df2:	96 fe       	sbrs	r9, 6
    1df4:	0b c0       	rjmp	.+22     	; 0x1e0c <vfprintf+0x594>
    1df6:	09 2d       	mov	r16, r9
    1df8:	0e 7f       	andi	r16, 0xFE	; 254
    1dfa:	c1 16       	cp	r12, r17
    1dfc:	50 f4       	brcc	.+20     	; 0x1e12 <vfprintf+0x59a>
    1dfe:	94 fe       	sbrs	r9, 4
    1e00:	0a c0       	rjmp	.+20     	; 0x1e16 <vfprintf+0x59e>
    1e02:	92 fc       	sbrc	r9, 2
    1e04:	08 c0       	rjmp	.+16     	; 0x1e16 <vfprintf+0x59e>
    1e06:	09 2d       	mov	r16, r9
    1e08:	0e 7e       	andi	r16, 0xEE	; 238
    1e0a:	05 c0       	rjmp	.+10     	; 0x1e16 <vfprintf+0x59e>
    1e0c:	dc 2c       	mov	r13, r12
    1e0e:	09 2d       	mov	r16, r9
    1e10:	03 c0       	rjmp	.+6      	; 0x1e18 <vfprintf+0x5a0>
    1e12:	dc 2c       	mov	r13, r12
    1e14:	01 c0       	rjmp	.+2      	; 0x1e18 <vfprintf+0x5a0>
    1e16:	d1 2e       	mov	r13, r17
    1e18:	04 ff       	sbrs	r16, 4
    1e1a:	0d c0       	rjmp	.+26     	; 0x1e36 <vfprintf+0x5be>
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	ec 0d       	add	r30, r12
    1e20:	f1 1d       	adc	r31, r1
    1e22:	80 81       	ld	r24, Z
    1e24:	80 33       	cpi	r24, 0x30	; 48
    1e26:	11 f4       	brne	.+4      	; 0x1e2c <vfprintf+0x5b4>
    1e28:	09 7e       	andi	r16, 0xE9	; 233
    1e2a:	09 c0       	rjmp	.+18     	; 0x1e3e <vfprintf+0x5c6>
    1e2c:	02 ff       	sbrs	r16, 2
    1e2e:	06 c0       	rjmp	.+12     	; 0x1e3c <vfprintf+0x5c4>
    1e30:	d3 94       	inc	r13
    1e32:	d3 94       	inc	r13
    1e34:	04 c0       	rjmp	.+8      	; 0x1e3e <vfprintf+0x5c6>
    1e36:	80 2f       	mov	r24, r16
    1e38:	86 78       	andi	r24, 0x86	; 134
    1e3a:	09 f0       	breq	.+2      	; 0x1e3e <vfprintf+0x5c6>
    1e3c:	d3 94       	inc	r13
    1e3e:	03 fd       	sbrc	r16, 3
    1e40:	11 c0       	rjmp	.+34     	; 0x1e64 <vfprintf+0x5ec>
    1e42:	00 ff       	sbrs	r16, 0
    1e44:	06 c0       	rjmp	.+12     	; 0x1e52 <vfprintf+0x5da>
    1e46:	1c 2d       	mov	r17, r12
    1e48:	d5 14       	cp	r13, r5
    1e4a:	80 f4       	brcc	.+32     	; 0x1e6c <vfprintf+0x5f4>
    1e4c:	15 0d       	add	r17, r5
    1e4e:	1d 19       	sub	r17, r13
    1e50:	0d c0       	rjmp	.+26     	; 0x1e6c <vfprintf+0x5f4>
    1e52:	d5 14       	cp	r13, r5
    1e54:	58 f4       	brcc	.+22     	; 0x1e6c <vfprintf+0x5f4>
    1e56:	b7 01       	movw	r22, r14
    1e58:	80 e2       	ldi	r24, 0x20	; 32
    1e5a:	90 e0       	ldi	r25, 0x00	; 0
    1e5c:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1e60:	d3 94       	inc	r13
    1e62:	f7 cf       	rjmp	.-18     	; 0x1e52 <vfprintf+0x5da>
    1e64:	d5 14       	cp	r13, r5
    1e66:	10 f4       	brcc	.+4      	; 0x1e6c <vfprintf+0x5f4>
    1e68:	5d 18       	sub	r5, r13
    1e6a:	01 c0       	rjmp	.+2      	; 0x1e6e <vfprintf+0x5f6>
    1e6c:	51 2c       	mov	r5, r1
    1e6e:	04 ff       	sbrs	r16, 4
    1e70:	10 c0       	rjmp	.+32     	; 0x1e92 <vfprintf+0x61a>
    1e72:	b7 01       	movw	r22, r14
    1e74:	80 e3       	ldi	r24, 0x30	; 48
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1e7c:	02 ff       	sbrs	r16, 2
    1e7e:	17 c0       	rjmp	.+46     	; 0x1eae <vfprintf+0x636>
    1e80:	01 fd       	sbrc	r16, 1
    1e82:	03 c0       	rjmp	.+6      	; 0x1e8a <vfprintf+0x612>
    1e84:	88 e7       	ldi	r24, 0x78	; 120
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	02 c0       	rjmp	.+4      	; 0x1e8e <vfprintf+0x616>
    1e8a:	88 e5       	ldi	r24, 0x58	; 88
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	b7 01       	movw	r22, r14
    1e90:	0c c0       	rjmp	.+24     	; 0x1eaa <vfprintf+0x632>
    1e92:	80 2f       	mov	r24, r16
    1e94:	86 78       	andi	r24, 0x86	; 134
    1e96:	59 f0       	breq	.+22     	; 0x1eae <vfprintf+0x636>
    1e98:	01 ff       	sbrs	r16, 1
    1e9a:	02 c0       	rjmp	.+4      	; 0x1ea0 <vfprintf+0x628>
    1e9c:	8b e2       	ldi	r24, 0x2B	; 43
    1e9e:	01 c0       	rjmp	.+2      	; 0x1ea2 <vfprintf+0x62a>
    1ea0:	80 e2       	ldi	r24, 0x20	; 32
    1ea2:	07 fd       	sbrc	r16, 7
    1ea4:	8d e2       	ldi	r24, 0x2D	; 45
    1ea6:	b7 01       	movw	r22, r14
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1eae:	c1 16       	cp	r12, r17
    1eb0:	38 f4       	brcc	.+14     	; 0x1ec0 <vfprintf+0x648>
    1eb2:	b7 01       	movw	r22, r14
    1eb4:	80 e3       	ldi	r24, 0x30	; 48
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1ebc:	11 50       	subi	r17, 0x01	; 1
    1ebe:	f7 cf       	rjmp	.-18     	; 0x1eae <vfprintf+0x636>
    1ec0:	ca 94       	dec	r12
    1ec2:	f3 01       	movw	r30, r6
    1ec4:	ec 0d       	add	r30, r12
    1ec6:	f1 1d       	adc	r31, r1
    1ec8:	80 81       	ld	r24, Z
    1eca:	b7 01       	movw	r22, r14
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1ed2:	c1 10       	cpse	r12, r1
    1ed4:	f5 cf       	rjmp	.-22     	; 0x1ec0 <vfprintf+0x648>
    1ed6:	15 c0       	rjmp	.+42     	; 0x1f02 <vfprintf+0x68a>
    1ed8:	f4 e0       	ldi	r31, 0x04	; 4
    1eda:	f5 15       	cp	r31, r5
    1edc:	60 f5       	brcc	.+88     	; 0x1f36 <vfprintf+0x6be>
    1ede:	84 e0       	ldi	r24, 0x04	; 4
    1ee0:	58 1a       	sub	r5, r24
    1ee2:	93 fe       	sbrs	r9, 3
    1ee4:	1f c0       	rjmp	.+62     	; 0x1f24 <vfprintf+0x6ac>
    1ee6:	01 11       	cpse	r16, r1
    1ee8:	27 c0       	rjmp	.+78     	; 0x1f38 <vfprintf+0x6c0>
    1eea:	2c 85       	ldd	r18, Y+12	; 0x0c
    1eec:	23 ff       	sbrs	r18, 3
    1eee:	2a c0       	rjmp	.+84     	; 0x1f44 <vfprintf+0x6cc>
    1ef0:	08 e6       	ldi	r16, 0x68	; 104
    1ef2:	10 e0       	ldi	r17, 0x00	; 0
    1ef4:	39 2d       	mov	r19, r9
    1ef6:	30 71       	andi	r19, 0x10	; 16
    1ef8:	93 2e       	mov	r9, r19
    1efa:	f8 01       	movw	r30, r16
    1efc:	84 91       	lpm	r24, Z
    1efe:	81 11       	cpse	r24, r1
    1f00:	24 c0       	rjmp	.+72     	; 0x1f4a <vfprintf+0x6d2>
    1f02:	55 20       	and	r5, r5
    1f04:	09 f4       	brne	.+2      	; 0x1f08 <vfprintf+0x690>
    1f06:	e4 cc       	rjmp	.-1592   	; 0x18d0 <vfprintf+0x58>
    1f08:	b7 01       	movw	r22, r14
    1f0a:	80 e2       	ldi	r24, 0x20	; 32
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1f12:	5a 94       	dec	r5
    1f14:	f6 cf       	rjmp	.-20     	; 0x1f02 <vfprintf+0x68a>
    1f16:	f7 01       	movw	r30, r14
    1f18:	86 81       	ldd	r24, Z+6	; 0x06
    1f1a:	97 81       	ldd	r25, Z+7	; 0x07
    1f1c:	26 c0       	rjmp	.+76     	; 0x1f6a <vfprintf+0x6f2>
    1f1e:	8f ef       	ldi	r24, 0xFF	; 255
    1f20:	9f ef       	ldi	r25, 0xFF	; 255
    1f22:	23 c0       	rjmp	.+70     	; 0x1f6a <vfprintf+0x6f2>
    1f24:	b7 01       	movw	r22, r14
    1f26:	80 e2       	ldi	r24, 0x20	; 32
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1f2e:	5a 94       	dec	r5
    1f30:	51 10       	cpse	r5, r1
    1f32:	f8 cf       	rjmp	.-16     	; 0x1f24 <vfprintf+0x6ac>
    1f34:	d8 cf       	rjmp	.-80     	; 0x1ee6 <vfprintf+0x66e>
    1f36:	51 2c       	mov	r5, r1
    1f38:	b7 01       	movw	r22, r14
    1f3a:	80 2f       	mov	r24, r16
    1f3c:	90 e0       	ldi	r25, 0x00	; 0
    1f3e:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1f42:	d3 cf       	rjmp	.-90     	; 0x1eea <vfprintf+0x672>
    1f44:	0c e6       	ldi	r16, 0x6C	; 108
    1f46:	10 e0       	ldi	r17, 0x00	; 0
    1f48:	d5 cf       	rjmp	.-86     	; 0x1ef4 <vfprintf+0x67c>
    1f4a:	91 10       	cpse	r9, r1
    1f4c:	80 52       	subi	r24, 0x20	; 32
    1f4e:	b7 01       	movw	r22, r14
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	0e 94 62 11 	call	0x22c4	; 0x22c4 <fputc>
    1f56:	0f 5f       	subi	r16, 0xFF	; 255
    1f58:	1f 4f       	sbci	r17, 0xFF	; 255
    1f5a:	cf cf       	rjmp	.-98     	; 0x1efa <vfprintf+0x682>
    1f5c:	23 e0       	ldi	r18, 0x03	; 3
    1f5e:	25 15       	cp	r18, r5
    1f60:	10 f4       	brcc	.+4      	; 0x1f66 <vfprintf+0x6ee>
    1f62:	83 e0       	ldi	r24, 0x03	; 3
    1f64:	bd cf       	rjmp	.-134    	; 0x1ee0 <vfprintf+0x668>
    1f66:	51 2c       	mov	r5, r1
    1f68:	c0 cf       	rjmp	.-128    	; 0x1eea <vfprintf+0x672>
    1f6a:	60 96       	adiw	r28, 0x10	; 16
    1f6c:	e2 e1       	ldi	r30, 0x12	; 18
    1f6e:	0c 94 e9 0f 	jmp	0x1fd2	; 0x1fd2 <__epilogue_restores__>

00001f72 <__divmodhi4>:
    1f72:	97 fb       	bst	r25, 7
    1f74:	07 2e       	mov	r0, r23
    1f76:	16 f4       	brtc	.+4      	; 0x1f7c <__divmodhi4+0xa>
    1f78:	00 94       	com	r0
    1f7a:	07 d0       	rcall	.+14     	; 0x1f8a <__divmodhi4_neg1>
    1f7c:	77 fd       	sbrc	r23, 7
    1f7e:	09 d0       	rcall	.+18     	; 0x1f92 <__divmodhi4_neg2>
    1f80:	0e 94 04 10 	call	0x2008	; 0x2008 <__udivmodhi4>
    1f84:	07 fc       	sbrc	r0, 7
    1f86:	05 d0       	rcall	.+10     	; 0x1f92 <__divmodhi4_neg2>
    1f88:	3e f4       	brtc	.+14     	; 0x1f98 <__divmodhi4_exit>

00001f8a <__divmodhi4_neg1>:
    1f8a:	90 95       	com	r25
    1f8c:	81 95       	neg	r24
    1f8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f90:	08 95       	ret

00001f92 <__divmodhi4_neg2>:
    1f92:	70 95       	com	r23
    1f94:	61 95       	neg	r22
    1f96:	7f 4f       	sbci	r23, 0xFF	; 255

00001f98 <__divmodhi4_exit>:
    1f98:	08 95       	ret

00001f9a <__prologue_saves__>:
    1f9a:	2f 92       	push	r2
    1f9c:	3f 92       	push	r3
    1f9e:	4f 92       	push	r4
    1fa0:	5f 92       	push	r5
    1fa2:	6f 92       	push	r6
    1fa4:	7f 92       	push	r7
    1fa6:	8f 92       	push	r8
    1fa8:	9f 92       	push	r9
    1faa:	af 92       	push	r10
    1fac:	bf 92       	push	r11
    1fae:	cf 92       	push	r12
    1fb0:	df 92       	push	r13
    1fb2:	ef 92       	push	r14
    1fb4:	ff 92       	push	r15
    1fb6:	0f 93       	push	r16
    1fb8:	1f 93       	push	r17
    1fba:	cf 93       	push	r28
    1fbc:	df 93       	push	r29
    1fbe:	cd b7       	in	r28, 0x3d	; 61
    1fc0:	de b7       	in	r29, 0x3e	; 62
    1fc2:	ca 1b       	sub	r28, r26
    1fc4:	db 0b       	sbc	r29, r27
    1fc6:	0f b6       	in	r0, 0x3f	; 63
    1fc8:	f8 94       	cli
    1fca:	de bf       	out	0x3e, r29	; 62
    1fcc:	0f be       	out	0x3f, r0	; 63
    1fce:	cd bf       	out	0x3d, r28	; 61
    1fd0:	09 94       	ijmp

00001fd2 <__epilogue_restores__>:
    1fd2:	2a 88       	ldd	r2, Y+18	; 0x12
    1fd4:	39 88       	ldd	r3, Y+17	; 0x11
    1fd6:	48 88       	ldd	r4, Y+16	; 0x10
    1fd8:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fda:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fdc:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fde:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fe0:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fe2:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fe4:	b9 84       	ldd	r11, Y+9	; 0x09
    1fe6:	c8 84       	ldd	r12, Y+8	; 0x08
    1fe8:	df 80       	ldd	r13, Y+7	; 0x07
    1fea:	ee 80       	ldd	r14, Y+6	; 0x06
    1fec:	fd 80       	ldd	r15, Y+5	; 0x05
    1fee:	0c 81       	ldd	r16, Y+4	; 0x04
    1ff0:	1b 81       	ldd	r17, Y+3	; 0x03
    1ff2:	aa 81       	ldd	r26, Y+2	; 0x02
    1ff4:	b9 81       	ldd	r27, Y+1	; 0x01
    1ff6:	ce 0f       	add	r28, r30
    1ff8:	d1 1d       	adc	r29, r1
    1ffa:	0f b6       	in	r0, 0x3f	; 63
    1ffc:	f8 94       	cli
    1ffe:	de bf       	out	0x3e, r29	; 62
    2000:	0f be       	out	0x3f, r0	; 63
    2002:	cd bf       	out	0x3d, r28	; 61
    2004:	ed 01       	movw	r28, r26
    2006:	08 95       	ret

00002008 <__udivmodhi4>:
    2008:	aa 1b       	sub	r26, r26
    200a:	bb 1b       	sub	r27, r27
    200c:	51 e1       	ldi	r21, 0x11	; 17
    200e:	07 c0       	rjmp	.+14     	; 0x201e <__udivmodhi4_ep>

00002010 <__udivmodhi4_loop>:
    2010:	aa 1f       	adc	r26, r26
    2012:	bb 1f       	adc	r27, r27
    2014:	a6 17       	cp	r26, r22
    2016:	b7 07       	cpc	r27, r23
    2018:	10 f0       	brcs	.+4      	; 0x201e <__udivmodhi4_ep>
    201a:	a6 1b       	sub	r26, r22
    201c:	b7 0b       	sbc	r27, r23

0000201e <__udivmodhi4_ep>:
    201e:	88 1f       	adc	r24, r24
    2020:	99 1f       	adc	r25, r25
    2022:	5a 95       	dec	r21
    2024:	a9 f7       	brne	.-22     	; 0x2010 <__udivmodhi4_loop>
    2026:	80 95       	com	r24
    2028:	90 95       	com	r25
    202a:	bc 01       	movw	r22, r24
    202c:	cd 01       	movw	r24, r26
    202e:	08 95       	ret

00002030 <do_rand>:
    2030:	8f 92       	push	r8
    2032:	9f 92       	push	r9
    2034:	af 92       	push	r10
    2036:	bf 92       	push	r11
    2038:	cf 92       	push	r12
    203a:	df 92       	push	r13
    203c:	ef 92       	push	r14
    203e:	ff 92       	push	r15
    2040:	cf 93       	push	r28
    2042:	df 93       	push	r29
    2044:	ec 01       	movw	r28, r24
    2046:	68 81       	ld	r22, Y
    2048:	79 81       	ldd	r23, Y+1	; 0x01
    204a:	8a 81       	ldd	r24, Y+2	; 0x02
    204c:	9b 81       	ldd	r25, Y+3	; 0x03
    204e:	61 15       	cp	r22, r1
    2050:	71 05       	cpc	r23, r1
    2052:	81 05       	cpc	r24, r1
    2054:	91 05       	cpc	r25, r1
    2056:	21 f4       	brne	.+8      	; 0x2060 <do_rand+0x30>
    2058:	64 e2       	ldi	r22, 0x24	; 36
    205a:	79 ed       	ldi	r23, 0xD9	; 217
    205c:	8b e5       	ldi	r24, 0x5B	; 91
    205e:	97 e0       	ldi	r25, 0x07	; 7
    2060:	2d e1       	ldi	r18, 0x1D	; 29
    2062:	33 ef       	ldi	r19, 0xF3	; 243
    2064:	41 e0       	ldi	r20, 0x01	; 1
    2066:	50 e0       	ldi	r21, 0x00	; 0
    2068:	0e 94 1e 12 	call	0x243c	; 0x243c <__divmodsi4>
    206c:	49 01       	movw	r8, r18
    206e:	5a 01       	movw	r10, r20
    2070:	9b 01       	movw	r18, r22
    2072:	ac 01       	movw	r20, r24
    2074:	a7 ea       	ldi	r26, 0xA7	; 167
    2076:	b1 e4       	ldi	r27, 0x41	; 65
    2078:	0e 94 3d 12 	call	0x247a	; 0x247a <__muluhisi3>
    207c:	6b 01       	movw	r12, r22
    207e:	7c 01       	movw	r14, r24
    2080:	ac ee       	ldi	r26, 0xEC	; 236
    2082:	b4 ef       	ldi	r27, 0xF4	; 244
    2084:	a5 01       	movw	r20, r10
    2086:	94 01       	movw	r18, r8
    2088:	0e 94 4b 12 	call	0x2496	; 0x2496 <__mulohisi3>
    208c:	dc 01       	movw	r26, r24
    208e:	cb 01       	movw	r24, r22
    2090:	8c 0d       	add	r24, r12
    2092:	9d 1d       	adc	r25, r13
    2094:	ae 1d       	adc	r26, r14
    2096:	bf 1d       	adc	r27, r15
    2098:	b7 ff       	sbrs	r27, 7
    209a:	03 c0       	rjmp	.+6      	; 0x20a2 <do_rand+0x72>
    209c:	01 97       	sbiw	r24, 0x01	; 1
    209e:	a1 09       	sbc	r26, r1
    20a0:	b0 48       	sbci	r27, 0x80	; 128
    20a2:	88 83       	st	Y, r24
    20a4:	99 83       	std	Y+1, r25	; 0x01
    20a6:	aa 83       	std	Y+2, r26	; 0x02
    20a8:	bb 83       	std	Y+3, r27	; 0x03
    20aa:	9f 77       	andi	r25, 0x7F	; 127
    20ac:	df 91       	pop	r29
    20ae:	cf 91       	pop	r28
    20b0:	ff 90       	pop	r15
    20b2:	ef 90       	pop	r14
    20b4:	df 90       	pop	r13
    20b6:	cf 90       	pop	r12
    20b8:	bf 90       	pop	r11
    20ba:	af 90       	pop	r10
    20bc:	9f 90       	pop	r9
    20be:	8f 90       	pop	r8
    20c0:	08 95       	ret

000020c2 <rand_r>:
    20c2:	0e 94 18 10 	call	0x2030	; 0x2030 <do_rand>
    20c6:	08 95       	ret

000020c8 <rand>:
    20c8:	80 e0       	ldi	r24, 0x00	; 0
    20ca:	91 e0       	ldi	r25, 0x01	; 1
    20cc:	0e 94 18 10 	call	0x2030	; 0x2030 <do_rand>
    20d0:	08 95       	ret

000020d2 <srand>:
    20d2:	a0 e0       	ldi	r26, 0x00	; 0
    20d4:	b0 e0       	ldi	r27, 0x00	; 0
    20d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    20da:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    20de:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    20e2:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    20e6:	08 95       	ret

000020e8 <__ftoa_engine>:
    20e8:	28 30       	cpi	r18, 0x08	; 8
    20ea:	08 f0       	brcs	.+2      	; 0x20ee <__ftoa_engine+0x6>
    20ec:	27 e0       	ldi	r18, 0x07	; 7
    20ee:	33 27       	eor	r19, r19
    20f0:	da 01       	movw	r26, r20
    20f2:	99 0f       	add	r25, r25
    20f4:	31 1d       	adc	r19, r1
    20f6:	87 fd       	sbrc	r24, 7
    20f8:	91 60       	ori	r25, 0x01	; 1
    20fa:	00 96       	adiw	r24, 0x00	; 0
    20fc:	61 05       	cpc	r22, r1
    20fe:	71 05       	cpc	r23, r1
    2100:	39 f4       	brne	.+14     	; 0x2110 <__ftoa_engine+0x28>
    2102:	32 60       	ori	r19, 0x02	; 2
    2104:	2e 5f       	subi	r18, 0xFE	; 254
    2106:	3d 93       	st	X+, r19
    2108:	30 e3       	ldi	r19, 0x30	; 48
    210a:	2a 95       	dec	r18
    210c:	e1 f7       	brne	.-8      	; 0x2106 <__ftoa_engine+0x1e>
    210e:	08 95       	ret
    2110:	9f 3f       	cpi	r25, 0xFF	; 255
    2112:	30 f0       	brcs	.+12     	; 0x2120 <__ftoa_engine+0x38>
    2114:	80 38       	cpi	r24, 0x80	; 128
    2116:	71 05       	cpc	r23, r1
    2118:	61 05       	cpc	r22, r1
    211a:	09 f0       	breq	.+2      	; 0x211e <__ftoa_engine+0x36>
    211c:	3c 5f       	subi	r19, 0xFC	; 252
    211e:	3c 5f       	subi	r19, 0xFC	; 252
    2120:	3d 93       	st	X+, r19
    2122:	91 30       	cpi	r25, 0x01	; 1
    2124:	08 f0       	brcs	.+2      	; 0x2128 <__ftoa_engine+0x40>
    2126:	80 68       	ori	r24, 0x80	; 128
    2128:	91 1d       	adc	r25, r1
    212a:	df 93       	push	r29
    212c:	cf 93       	push	r28
    212e:	1f 93       	push	r17
    2130:	0f 93       	push	r16
    2132:	ff 92       	push	r15
    2134:	ef 92       	push	r14
    2136:	19 2f       	mov	r17, r25
    2138:	98 7f       	andi	r25, 0xF8	; 248
    213a:	96 95       	lsr	r25
    213c:	e9 2f       	mov	r30, r25
    213e:	96 95       	lsr	r25
    2140:	96 95       	lsr	r25
    2142:	e9 0f       	add	r30, r25
    2144:	ff 27       	eor	r31, r31
    2146:	e6 53       	subi	r30, 0x36	; 54
    2148:	ff 4f       	sbci	r31, 0xFF	; 255
    214a:	99 27       	eor	r25, r25
    214c:	33 27       	eor	r19, r19
    214e:	ee 24       	eor	r14, r14
    2150:	ff 24       	eor	r15, r15
    2152:	a7 01       	movw	r20, r14
    2154:	e7 01       	movw	r28, r14
    2156:	05 90       	lpm	r0, Z+
    2158:	08 94       	sec
    215a:	07 94       	ror	r0
    215c:	28 f4       	brcc	.+10     	; 0x2168 <__ftoa_engine+0x80>
    215e:	36 0f       	add	r19, r22
    2160:	e7 1e       	adc	r14, r23
    2162:	f8 1e       	adc	r15, r24
    2164:	49 1f       	adc	r20, r25
    2166:	51 1d       	adc	r21, r1
    2168:	66 0f       	add	r22, r22
    216a:	77 1f       	adc	r23, r23
    216c:	88 1f       	adc	r24, r24
    216e:	99 1f       	adc	r25, r25
    2170:	06 94       	lsr	r0
    2172:	a1 f7       	brne	.-24     	; 0x215c <__ftoa_engine+0x74>
    2174:	05 90       	lpm	r0, Z+
    2176:	07 94       	ror	r0
    2178:	28 f4       	brcc	.+10     	; 0x2184 <__ftoa_engine+0x9c>
    217a:	e7 0e       	add	r14, r23
    217c:	f8 1e       	adc	r15, r24
    217e:	49 1f       	adc	r20, r25
    2180:	56 1f       	adc	r21, r22
    2182:	c1 1d       	adc	r28, r1
    2184:	77 0f       	add	r23, r23
    2186:	88 1f       	adc	r24, r24
    2188:	99 1f       	adc	r25, r25
    218a:	66 1f       	adc	r22, r22
    218c:	06 94       	lsr	r0
    218e:	a1 f7       	brne	.-24     	; 0x2178 <__ftoa_engine+0x90>
    2190:	05 90       	lpm	r0, Z+
    2192:	07 94       	ror	r0
    2194:	28 f4       	brcc	.+10     	; 0x21a0 <__ftoa_engine+0xb8>
    2196:	f8 0e       	add	r15, r24
    2198:	49 1f       	adc	r20, r25
    219a:	56 1f       	adc	r21, r22
    219c:	c7 1f       	adc	r28, r23
    219e:	d1 1d       	adc	r29, r1
    21a0:	88 0f       	add	r24, r24
    21a2:	99 1f       	adc	r25, r25
    21a4:	66 1f       	adc	r22, r22
    21a6:	77 1f       	adc	r23, r23
    21a8:	06 94       	lsr	r0
    21aa:	a1 f7       	brne	.-24     	; 0x2194 <__ftoa_engine+0xac>
    21ac:	05 90       	lpm	r0, Z+
    21ae:	07 94       	ror	r0
    21b0:	20 f4       	brcc	.+8      	; 0x21ba <__ftoa_engine+0xd2>
    21b2:	49 0f       	add	r20, r25
    21b4:	56 1f       	adc	r21, r22
    21b6:	c7 1f       	adc	r28, r23
    21b8:	d8 1f       	adc	r29, r24
    21ba:	99 0f       	add	r25, r25
    21bc:	66 1f       	adc	r22, r22
    21be:	77 1f       	adc	r23, r23
    21c0:	88 1f       	adc	r24, r24
    21c2:	06 94       	lsr	r0
    21c4:	a9 f7       	brne	.-22     	; 0x21b0 <__ftoa_engine+0xc8>
    21c6:	84 91       	lpm	r24, Z
    21c8:	10 95       	com	r17
    21ca:	17 70       	andi	r17, 0x07	; 7
    21cc:	41 f0       	breq	.+16     	; 0x21de <__ftoa_engine+0xf6>
    21ce:	d6 95       	lsr	r29
    21d0:	c7 95       	ror	r28
    21d2:	57 95       	ror	r21
    21d4:	47 95       	ror	r20
    21d6:	f7 94       	ror	r15
    21d8:	e7 94       	ror	r14
    21da:	1a 95       	dec	r17
    21dc:	c1 f7       	brne	.-16     	; 0x21ce <__ftoa_engine+0xe6>
    21de:	e0 e7       	ldi	r30, 0x70	; 112
    21e0:	f0 e0       	ldi	r31, 0x00	; 0
    21e2:	68 94       	set
    21e4:	15 90       	lpm	r1, Z+
    21e6:	15 91       	lpm	r17, Z+
    21e8:	35 91       	lpm	r19, Z+
    21ea:	65 91       	lpm	r22, Z+
    21ec:	95 91       	lpm	r25, Z+
    21ee:	05 90       	lpm	r0, Z+
    21f0:	7f e2       	ldi	r23, 0x2F	; 47
    21f2:	73 95       	inc	r23
    21f4:	e1 18       	sub	r14, r1
    21f6:	f1 0a       	sbc	r15, r17
    21f8:	43 0b       	sbc	r20, r19
    21fa:	56 0b       	sbc	r21, r22
    21fc:	c9 0b       	sbc	r28, r25
    21fe:	d0 09       	sbc	r29, r0
    2200:	c0 f7       	brcc	.-16     	; 0x21f2 <__ftoa_engine+0x10a>
    2202:	e1 0c       	add	r14, r1
    2204:	f1 1e       	adc	r15, r17
    2206:	43 1f       	adc	r20, r19
    2208:	56 1f       	adc	r21, r22
    220a:	c9 1f       	adc	r28, r25
    220c:	d0 1d       	adc	r29, r0
    220e:	7e f4       	brtc	.+30     	; 0x222e <__ftoa_engine+0x146>
    2210:	70 33       	cpi	r23, 0x30	; 48
    2212:	11 f4       	brne	.+4      	; 0x2218 <__ftoa_engine+0x130>
    2214:	8a 95       	dec	r24
    2216:	e6 cf       	rjmp	.-52     	; 0x21e4 <__ftoa_engine+0xfc>
    2218:	e8 94       	clt
    221a:	01 50       	subi	r16, 0x01	; 1
    221c:	30 f0       	brcs	.+12     	; 0x222a <__ftoa_engine+0x142>
    221e:	08 0f       	add	r16, r24
    2220:	0a f4       	brpl	.+2      	; 0x2224 <__ftoa_engine+0x13c>
    2222:	00 27       	eor	r16, r16
    2224:	02 17       	cp	r16, r18
    2226:	08 f4       	brcc	.+2      	; 0x222a <__ftoa_engine+0x142>
    2228:	20 2f       	mov	r18, r16
    222a:	23 95       	inc	r18
    222c:	02 2f       	mov	r16, r18
    222e:	7a 33       	cpi	r23, 0x3A	; 58
    2230:	28 f0       	brcs	.+10     	; 0x223c <__ftoa_engine+0x154>
    2232:	79 e3       	ldi	r23, 0x39	; 57
    2234:	7d 93       	st	X+, r23
    2236:	2a 95       	dec	r18
    2238:	e9 f7       	brne	.-6      	; 0x2234 <__ftoa_engine+0x14c>
    223a:	10 c0       	rjmp	.+32     	; 0x225c <__ftoa_engine+0x174>
    223c:	7d 93       	st	X+, r23
    223e:	2a 95       	dec	r18
    2240:	89 f6       	brne	.-94     	; 0x21e4 <__ftoa_engine+0xfc>
    2242:	06 94       	lsr	r0
    2244:	97 95       	ror	r25
    2246:	67 95       	ror	r22
    2248:	37 95       	ror	r19
    224a:	17 95       	ror	r17
    224c:	17 94       	ror	r1
    224e:	e1 18       	sub	r14, r1
    2250:	f1 0a       	sbc	r15, r17
    2252:	43 0b       	sbc	r20, r19
    2254:	56 0b       	sbc	r21, r22
    2256:	c9 0b       	sbc	r28, r25
    2258:	d0 09       	sbc	r29, r0
    225a:	98 f0       	brcs	.+38     	; 0x2282 <__ftoa_engine+0x19a>
    225c:	23 95       	inc	r18
    225e:	7e 91       	ld	r23, -X
    2260:	73 95       	inc	r23
    2262:	7a 33       	cpi	r23, 0x3A	; 58
    2264:	08 f0       	brcs	.+2      	; 0x2268 <__ftoa_engine+0x180>
    2266:	70 e3       	ldi	r23, 0x30	; 48
    2268:	7c 93       	st	X, r23
    226a:	20 13       	cpse	r18, r16
    226c:	b8 f7       	brcc	.-18     	; 0x225c <__ftoa_engine+0x174>
    226e:	7e 91       	ld	r23, -X
    2270:	70 61       	ori	r23, 0x10	; 16
    2272:	7d 93       	st	X+, r23
    2274:	30 f0       	brcs	.+12     	; 0x2282 <__ftoa_engine+0x19a>
    2276:	83 95       	inc	r24
    2278:	71 e3       	ldi	r23, 0x31	; 49
    227a:	7d 93       	st	X+, r23
    227c:	70 e3       	ldi	r23, 0x30	; 48
    227e:	2a 95       	dec	r18
    2280:	e1 f7       	brne	.-8      	; 0x227a <__ftoa_engine+0x192>
    2282:	11 24       	eor	r1, r1
    2284:	ef 90       	pop	r14
    2286:	ff 90       	pop	r15
    2288:	0f 91       	pop	r16
    228a:	1f 91       	pop	r17
    228c:	cf 91       	pop	r28
    228e:	df 91       	pop	r29
    2290:	99 27       	eor	r25, r25
    2292:	87 fd       	sbrc	r24, 7
    2294:	90 95       	com	r25
    2296:	08 95       	ret

00002298 <strnlen_P>:
    2298:	fc 01       	movw	r30, r24
    229a:	05 90       	lpm	r0, Z+
    229c:	61 50       	subi	r22, 0x01	; 1
    229e:	70 40       	sbci	r23, 0x00	; 0
    22a0:	01 10       	cpse	r0, r1
    22a2:	d8 f7       	brcc	.-10     	; 0x229a <strnlen_P+0x2>
    22a4:	80 95       	com	r24
    22a6:	90 95       	com	r25
    22a8:	8e 0f       	add	r24, r30
    22aa:	9f 1f       	adc	r25, r31
    22ac:	08 95       	ret

000022ae <strnlen>:
    22ae:	fc 01       	movw	r30, r24
    22b0:	61 50       	subi	r22, 0x01	; 1
    22b2:	70 40       	sbci	r23, 0x00	; 0
    22b4:	01 90       	ld	r0, Z+
    22b6:	01 10       	cpse	r0, r1
    22b8:	d8 f7       	brcc	.-10     	; 0x22b0 <strnlen+0x2>
    22ba:	80 95       	com	r24
    22bc:	90 95       	com	r25
    22be:	8e 0f       	add	r24, r30
    22c0:	9f 1f       	adc	r25, r31
    22c2:	08 95       	ret

000022c4 <fputc>:
    22c4:	0f 93       	push	r16
    22c6:	1f 93       	push	r17
    22c8:	cf 93       	push	r28
    22ca:	df 93       	push	r29
    22cc:	fb 01       	movw	r30, r22
    22ce:	23 81       	ldd	r18, Z+3	; 0x03
    22d0:	21 fd       	sbrc	r18, 1
    22d2:	03 c0       	rjmp	.+6      	; 0x22da <fputc+0x16>
    22d4:	8f ef       	ldi	r24, 0xFF	; 255
    22d6:	9f ef       	ldi	r25, 0xFF	; 255
    22d8:	2c c0       	rjmp	.+88     	; 0x2332 <fputc+0x6e>
    22da:	22 ff       	sbrs	r18, 2
    22dc:	16 c0       	rjmp	.+44     	; 0x230a <fputc+0x46>
    22de:	46 81       	ldd	r20, Z+6	; 0x06
    22e0:	57 81       	ldd	r21, Z+7	; 0x07
    22e2:	24 81       	ldd	r18, Z+4	; 0x04
    22e4:	35 81       	ldd	r19, Z+5	; 0x05
    22e6:	42 17       	cp	r20, r18
    22e8:	53 07       	cpc	r21, r19
    22ea:	44 f4       	brge	.+16     	; 0x22fc <fputc+0x38>
    22ec:	a0 81       	ld	r26, Z
    22ee:	b1 81       	ldd	r27, Z+1	; 0x01
    22f0:	9d 01       	movw	r18, r26
    22f2:	2f 5f       	subi	r18, 0xFF	; 255
    22f4:	3f 4f       	sbci	r19, 0xFF	; 255
    22f6:	31 83       	std	Z+1, r19	; 0x01
    22f8:	20 83       	st	Z, r18
    22fa:	8c 93       	st	X, r24
    22fc:	26 81       	ldd	r18, Z+6	; 0x06
    22fe:	37 81       	ldd	r19, Z+7	; 0x07
    2300:	2f 5f       	subi	r18, 0xFF	; 255
    2302:	3f 4f       	sbci	r19, 0xFF	; 255
    2304:	37 83       	std	Z+7, r19	; 0x07
    2306:	26 83       	std	Z+6, r18	; 0x06
    2308:	14 c0       	rjmp	.+40     	; 0x2332 <fputc+0x6e>
    230a:	8b 01       	movw	r16, r22
    230c:	ec 01       	movw	r28, r24
    230e:	fb 01       	movw	r30, r22
    2310:	00 84       	ldd	r0, Z+8	; 0x08
    2312:	f1 85       	ldd	r31, Z+9	; 0x09
    2314:	e0 2d       	mov	r30, r0
    2316:	09 95       	icall
    2318:	89 2b       	or	r24, r25
    231a:	e1 f6       	brne	.-72     	; 0x22d4 <fputc+0x10>
    231c:	d8 01       	movw	r26, r16
    231e:	16 96       	adiw	r26, 0x06	; 6
    2320:	8d 91       	ld	r24, X+
    2322:	9c 91       	ld	r25, X
    2324:	17 97       	sbiw	r26, 0x07	; 7
    2326:	01 96       	adiw	r24, 0x01	; 1
    2328:	17 96       	adiw	r26, 0x07	; 7
    232a:	9c 93       	st	X, r25
    232c:	8e 93       	st	-X, r24
    232e:	16 97       	sbiw	r26, 0x06	; 6
    2330:	ce 01       	movw	r24, r28
    2332:	df 91       	pop	r29
    2334:	cf 91       	pop	r28
    2336:	1f 91       	pop	r17
    2338:	0f 91       	pop	r16
    233a:	08 95       	ret

0000233c <sprintf>:
    233c:	ae e0       	ldi	r26, 0x0E	; 14
    233e:	b0 e0       	ldi	r27, 0x00	; 0
    2340:	e4 ea       	ldi	r30, 0xA4	; 164
    2342:	f1 e1       	ldi	r31, 0x11	; 17
    2344:	0c 94 db 0f 	jmp	0x1fb6	; 0x1fb6 <__prologue_saves__+0x1c>
    2348:	0d 89       	ldd	r16, Y+21	; 0x15
    234a:	1e 89       	ldd	r17, Y+22	; 0x16
    234c:	86 e0       	ldi	r24, 0x06	; 6
    234e:	8c 83       	std	Y+4, r24	; 0x04
    2350:	1a 83       	std	Y+2, r17	; 0x02
    2352:	09 83       	std	Y+1, r16	; 0x01
    2354:	8f ef       	ldi	r24, 0xFF	; 255
    2356:	9f e7       	ldi	r25, 0x7F	; 127
    2358:	9e 83       	std	Y+6, r25	; 0x06
    235a:	8d 83       	std	Y+5, r24	; 0x05
    235c:	ae 01       	movw	r20, r28
    235e:	47 5e       	subi	r20, 0xE7	; 231
    2360:	5f 4f       	sbci	r21, 0xFF	; 255
    2362:	6f 89       	ldd	r22, Y+23	; 0x17
    2364:	78 8d       	ldd	r23, Y+24	; 0x18
    2366:	ce 01       	movw	r24, r28
    2368:	01 96       	adiw	r24, 0x01	; 1
    236a:	0e 94 3c 0c 	call	0x1878	; 0x1878 <vfprintf>
    236e:	ef 81       	ldd	r30, Y+7	; 0x07
    2370:	f8 85       	ldd	r31, Y+8	; 0x08
    2372:	e0 0f       	add	r30, r16
    2374:	f1 1f       	adc	r31, r17
    2376:	10 82       	st	Z, r1
    2378:	2e 96       	adiw	r28, 0x0e	; 14
    237a:	e4 e0       	ldi	r30, 0x04	; 4
    237c:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <__epilogue_restores__+0x1c>

00002380 <__ultoa_invert>:
    2380:	fa 01       	movw	r30, r20
    2382:	aa 27       	eor	r26, r26
    2384:	28 30       	cpi	r18, 0x08	; 8
    2386:	51 f1       	breq	.+84     	; 0x23dc <__ultoa_invert+0x5c>
    2388:	20 31       	cpi	r18, 0x10	; 16
    238a:	81 f1       	breq	.+96     	; 0x23ec <__ultoa_invert+0x6c>
    238c:	e8 94       	clt
    238e:	6f 93       	push	r22
    2390:	6e 7f       	andi	r22, 0xFE	; 254
    2392:	6e 5f       	subi	r22, 0xFE	; 254
    2394:	7f 4f       	sbci	r23, 0xFF	; 255
    2396:	8f 4f       	sbci	r24, 0xFF	; 255
    2398:	9f 4f       	sbci	r25, 0xFF	; 255
    239a:	af 4f       	sbci	r26, 0xFF	; 255
    239c:	b1 e0       	ldi	r27, 0x01	; 1
    239e:	3e d0       	rcall	.+124    	; 0x241c <__ultoa_invert+0x9c>
    23a0:	b4 e0       	ldi	r27, 0x04	; 4
    23a2:	3c d0       	rcall	.+120    	; 0x241c <__ultoa_invert+0x9c>
    23a4:	67 0f       	add	r22, r23
    23a6:	78 1f       	adc	r23, r24
    23a8:	89 1f       	adc	r24, r25
    23aa:	9a 1f       	adc	r25, r26
    23ac:	a1 1d       	adc	r26, r1
    23ae:	68 0f       	add	r22, r24
    23b0:	79 1f       	adc	r23, r25
    23b2:	8a 1f       	adc	r24, r26
    23b4:	91 1d       	adc	r25, r1
    23b6:	a1 1d       	adc	r26, r1
    23b8:	6a 0f       	add	r22, r26
    23ba:	71 1d       	adc	r23, r1
    23bc:	81 1d       	adc	r24, r1
    23be:	91 1d       	adc	r25, r1
    23c0:	a1 1d       	adc	r26, r1
    23c2:	20 d0       	rcall	.+64     	; 0x2404 <__ultoa_invert+0x84>
    23c4:	09 f4       	brne	.+2      	; 0x23c8 <__ultoa_invert+0x48>
    23c6:	68 94       	set
    23c8:	3f 91       	pop	r19
    23ca:	2a e0       	ldi	r18, 0x0A	; 10
    23cc:	26 9f       	mul	r18, r22
    23ce:	11 24       	eor	r1, r1
    23d0:	30 19       	sub	r19, r0
    23d2:	30 5d       	subi	r19, 0xD0	; 208
    23d4:	31 93       	st	Z+, r19
    23d6:	de f6       	brtc	.-74     	; 0x238e <__ultoa_invert+0xe>
    23d8:	cf 01       	movw	r24, r30
    23da:	08 95       	ret
    23dc:	46 2f       	mov	r20, r22
    23de:	47 70       	andi	r20, 0x07	; 7
    23e0:	40 5d       	subi	r20, 0xD0	; 208
    23e2:	41 93       	st	Z+, r20
    23e4:	b3 e0       	ldi	r27, 0x03	; 3
    23e6:	0f d0       	rcall	.+30     	; 0x2406 <__ultoa_invert+0x86>
    23e8:	c9 f7       	brne	.-14     	; 0x23dc <__ultoa_invert+0x5c>
    23ea:	f6 cf       	rjmp	.-20     	; 0x23d8 <__ultoa_invert+0x58>
    23ec:	46 2f       	mov	r20, r22
    23ee:	4f 70       	andi	r20, 0x0F	; 15
    23f0:	40 5d       	subi	r20, 0xD0	; 208
    23f2:	4a 33       	cpi	r20, 0x3A	; 58
    23f4:	18 f0       	brcs	.+6      	; 0x23fc <__ultoa_invert+0x7c>
    23f6:	49 5d       	subi	r20, 0xD9	; 217
    23f8:	31 fd       	sbrc	r19, 1
    23fa:	40 52       	subi	r20, 0x20	; 32
    23fc:	41 93       	st	Z+, r20
    23fe:	02 d0       	rcall	.+4      	; 0x2404 <__ultoa_invert+0x84>
    2400:	a9 f7       	brne	.-22     	; 0x23ec <__ultoa_invert+0x6c>
    2402:	ea cf       	rjmp	.-44     	; 0x23d8 <__ultoa_invert+0x58>
    2404:	b4 e0       	ldi	r27, 0x04	; 4
    2406:	a6 95       	lsr	r26
    2408:	97 95       	ror	r25
    240a:	87 95       	ror	r24
    240c:	77 95       	ror	r23
    240e:	67 95       	ror	r22
    2410:	ba 95       	dec	r27
    2412:	c9 f7       	brne	.-14     	; 0x2406 <__ultoa_invert+0x86>
    2414:	00 97       	sbiw	r24, 0x00	; 0
    2416:	61 05       	cpc	r22, r1
    2418:	71 05       	cpc	r23, r1
    241a:	08 95       	ret
    241c:	9b 01       	movw	r18, r22
    241e:	ac 01       	movw	r20, r24
    2420:	0a 2e       	mov	r0, r26
    2422:	06 94       	lsr	r0
    2424:	57 95       	ror	r21
    2426:	47 95       	ror	r20
    2428:	37 95       	ror	r19
    242a:	27 95       	ror	r18
    242c:	ba 95       	dec	r27
    242e:	c9 f7       	brne	.-14     	; 0x2422 <__ultoa_invert+0xa2>
    2430:	62 0f       	add	r22, r18
    2432:	73 1f       	adc	r23, r19
    2434:	84 1f       	adc	r24, r20
    2436:	95 1f       	adc	r25, r21
    2438:	a0 1d       	adc	r26, r0
    243a:	08 95       	ret

0000243c <__divmodsi4>:
    243c:	05 2e       	mov	r0, r21
    243e:	97 fb       	bst	r25, 7
    2440:	1e f4       	brtc	.+6      	; 0x2448 <__divmodsi4+0xc>
    2442:	00 94       	com	r0
    2444:	0e 94 35 12 	call	0x246a	; 0x246a <__negsi2>
    2448:	57 fd       	sbrc	r21, 7
    244a:	07 d0       	rcall	.+14     	; 0x245a <__divmodsi4_neg2>
    244c:	0e 94 50 12 	call	0x24a0	; 0x24a0 <__udivmodsi4>
    2450:	07 fc       	sbrc	r0, 7
    2452:	03 d0       	rcall	.+6      	; 0x245a <__divmodsi4_neg2>
    2454:	4e f4       	brtc	.+18     	; 0x2468 <__divmodsi4_exit>
    2456:	0c 94 35 12 	jmp	0x246a	; 0x246a <__negsi2>

0000245a <__divmodsi4_neg2>:
    245a:	50 95       	com	r21
    245c:	40 95       	com	r20
    245e:	30 95       	com	r19
    2460:	21 95       	neg	r18
    2462:	3f 4f       	sbci	r19, 0xFF	; 255
    2464:	4f 4f       	sbci	r20, 0xFF	; 255
    2466:	5f 4f       	sbci	r21, 0xFF	; 255

00002468 <__divmodsi4_exit>:
    2468:	08 95       	ret

0000246a <__negsi2>:
    246a:	90 95       	com	r25
    246c:	80 95       	com	r24
    246e:	70 95       	com	r23
    2470:	61 95       	neg	r22
    2472:	7f 4f       	sbci	r23, 0xFF	; 255
    2474:	8f 4f       	sbci	r24, 0xFF	; 255
    2476:	9f 4f       	sbci	r25, 0xFF	; 255
    2478:	08 95       	ret

0000247a <__muluhisi3>:
    247a:	0e 94 72 12 	call	0x24e4	; 0x24e4 <__umulhisi3>
    247e:	a5 9f       	mul	r26, r21
    2480:	90 0d       	add	r25, r0
    2482:	b4 9f       	mul	r27, r20
    2484:	90 0d       	add	r25, r0
    2486:	a4 9f       	mul	r26, r20
    2488:	80 0d       	add	r24, r0
    248a:	91 1d       	adc	r25, r1
    248c:	11 24       	eor	r1, r1
    248e:	08 95       	ret

00002490 <__mulshisi3>:
    2490:	b7 ff       	sbrs	r27, 7
    2492:	0c 94 3d 12 	jmp	0x247a	; 0x247a <__muluhisi3>

00002496 <__mulohisi3>:
    2496:	0e 94 3d 12 	call	0x247a	; 0x247a <__muluhisi3>
    249a:	82 1b       	sub	r24, r18
    249c:	93 0b       	sbc	r25, r19
    249e:	08 95       	ret

000024a0 <__udivmodsi4>:
    24a0:	a1 e2       	ldi	r26, 0x21	; 33
    24a2:	1a 2e       	mov	r1, r26
    24a4:	aa 1b       	sub	r26, r26
    24a6:	bb 1b       	sub	r27, r27
    24a8:	fd 01       	movw	r30, r26
    24aa:	0d c0       	rjmp	.+26     	; 0x24c6 <__udivmodsi4_ep>

000024ac <__udivmodsi4_loop>:
    24ac:	aa 1f       	adc	r26, r26
    24ae:	bb 1f       	adc	r27, r27
    24b0:	ee 1f       	adc	r30, r30
    24b2:	ff 1f       	adc	r31, r31
    24b4:	a2 17       	cp	r26, r18
    24b6:	b3 07       	cpc	r27, r19
    24b8:	e4 07       	cpc	r30, r20
    24ba:	f5 07       	cpc	r31, r21
    24bc:	20 f0       	brcs	.+8      	; 0x24c6 <__udivmodsi4_ep>
    24be:	a2 1b       	sub	r26, r18
    24c0:	b3 0b       	sbc	r27, r19
    24c2:	e4 0b       	sbc	r30, r20
    24c4:	f5 0b       	sbc	r31, r21

000024c6 <__udivmodsi4_ep>:
    24c6:	66 1f       	adc	r22, r22
    24c8:	77 1f       	adc	r23, r23
    24ca:	88 1f       	adc	r24, r24
    24cc:	99 1f       	adc	r25, r25
    24ce:	1a 94       	dec	r1
    24d0:	69 f7       	brne	.-38     	; 0x24ac <__udivmodsi4_loop>
    24d2:	60 95       	com	r22
    24d4:	70 95       	com	r23
    24d6:	80 95       	com	r24
    24d8:	90 95       	com	r25
    24da:	9b 01       	movw	r18, r22
    24dc:	ac 01       	movw	r20, r24
    24de:	bd 01       	movw	r22, r26
    24e0:	cf 01       	movw	r24, r30
    24e2:	08 95       	ret

000024e4 <__umulhisi3>:
    24e4:	a2 9f       	mul	r26, r18
    24e6:	b0 01       	movw	r22, r0
    24e8:	b3 9f       	mul	r27, r19
    24ea:	c0 01       	movw	r24, r0
    24ec:	a3 9f       	mul	r26, r19
    24ee:	70 0d       	add	r23, r0
    24f0:	81 1d       	adc	r24, r1
    24f2:	11 24       	eor	r1, r1
    24f4:	91 1d       	adc	r25, r1
    24f6:	b2 9f       	mul	r27, r18
    24f8:	70 0d       	add	r23, r0
    24fa:	81 1d       	adc	r24, r1
    24fc:	11 24       	eor	r1, r1
    24fe:	91 1d       	adc	r25, r1
    2500:	08 95       	ret

00002502 <_exit>:
    2502:	f8 94       	cli

00002504 <__stop_program>:
    2504:	ff cf       	rjmp	.-2      	; 0x2504 <__stop_program>
